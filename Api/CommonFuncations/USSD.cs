using Api.HttpItems;
using Api.Models;
using Api.Models.KHMPayments;
using Newtonsoft.Json;
//using RestSharp;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using static Api.Cache.Services;
using static Api.Cache.USSD;
using static Api.CommonFuncations.iDoBet;
using static Api.CommonFuncations.iDoBetMTNGuinea;
using static Api.DataLayer.DBQueries;
using static Api.Logger.Logger;

namespace Api.CommonFuncations
{
    public class USSD
    {

        //public static USSDMenu GetSendCryptoMenu(int ussd_id, string ussd_string, int action_id, USSDSession ussd_session, string MSISDN, string force_session_id, ref List<LogLines> lines)
        //{

        //    String menutoDisplay = "";

        //    String KHMPaymentsURL = "https://api220.ydplatform.com/KHMPayments";
        //    //String KHMPaymentsURL = "https://localhost:7231";
        //    String KHMPaymentsUsername = "alan+sendcrypto@yellowdotafrica.com";
        //    String KHMPaymentsPassword = "sH.2013Aud";

        //    KHMAuthentication authRequest = new KHMAuthentication();
        //    authRequest.emailAddress = KHMPaymentsUsername;
        //    authRequest.password = KHMPaymentsPassword;

        //    var options = new RestClientOptions(KHMPaymentsURL + "/api/Users/userLogIn")
        //    {
        //        ThrowOnAnyError = true,
        //        MaxTimeout = 60000  // 1 second
        //    };
        //    var client = new RestClient(options);


        //    var http = new RestRequest();
        //    http.Method = RestSharp.Method.Post;
        //    http.AddHeader("Content-Type", "application/json");
        //    var body = JsonConvert.SerializeObject(authRequest);
        //    http.AddParameter("application/json", body, ParameterType.RequestBody);

        //    RestResponse response = client.Execute(http);
        //    //Console.WriteLine(response.Content);
        //    KHMAuthenticationResponse authResponse = JsonConvert.DeserializeObject<KHMAuthenticationResponse>(response.Content);

        //    options = new RestClientOptions(KHMPaymentsURL + "/api/BlockChain/GetBlockChainMenuData?msisdn=" + MSISDN)
        //    {
        //        ThrowOnAnyError = true,
        //        MaxTimeout = 60000  // 1 second
        //    };
        //    http = new RestRequest();
        //    http.AddHeader("Authorization", "Bearer " + authResponse.token);
        //    client = new RestClient(options);

        //    response = client.Execute(http);
        //    List<SendCryptoRootMenu> myDeserializedClass = JsonConvert.DeserializeObject<List<SendCryptoRootMenu>>(response.Content);


        //    int[] allowedSingleValueData = { 21 };
        //    List<int> allowedSingleValueList = new List<int>();
        //    foreach (SendCryptoRootMenu menuItem in myDeserializedClass)
        //    {
        //        if (menuItem.steps != null)
        //        {
        //            foreach (Step step in menuItem.steps)
        //            {

        //                if (step.options == true)
        //                {
        //                    allowedSingleValueList.Add((menuItem.id * 10) + step.id);
        //                }

        //            }
        //        }

        //    }
        //    allowedSingleValueList.Add(22);
        //    allowedSingleValueData = allowedSingleValueList.ToArray();

        //    USSDMenu ussdMenu = new USSDMenu();

        //    bool foundSubMenu = false;

        //    //display main menu
        //    foreach (SendCryptoRootMenu menuItem in myDeserializedClass)
        //    {

        //        if ((ussd_string.Length == 1) && (!allowedSingleValueData.Contains(action_id)))
        //        //Menu migration
        //        {
        //            if (ussd_string.Equals(menuItem.id + "", StringComparison.InvariantCultureIgnoreCase))
        //            {

        //                //main menu component
        //                int mainMenuItem = (action_id / 10) % 10;
        //                int subMenu = (action_id % 10) + 1;
        //                ussdMenu.action_id = (mainMenuItem * 10) + subMenu;

        //                if (menuItem.steps.Count > 0)
        //                {
        //                    if (menuItem.steps.Count < subMenu)
        //                    {

        //                        foreach (SendCryptoRootMenu fullmenuItem in myDeserializedClass)
        //                        {
        //                            //Return to Main Menu
        //                            menutoDisplay += fullmenuItem.id + ". " + fullmenuItem.title + "\r\n";
        //                            ussdMenu.action_id = 0;
        //                        }

        //                    }


        //                    foreach (Step step in menuItem.steps)
        //                    {
        //                        if ((step.id == subMenu) && ((mainMenuItem == menuItem.id) || mainMenuItem == 0))
        //                        {
        //                            ussdMenu.action_id = (menuItem.id * 10) + step.id;
        //                            menutoDisplay += step.title + "\r\n";

        //                            if (step.options == true)
        //                            {
        //                                foreach (string option in step.optionsValue)
        //                                {
        //                                    menutoDisplay += option + "\r\n";
        //                                }
        //                            }
        //                            foundSubMenu = true;
        //                            break;
        //                        }

        //                    }

        //                }
        //            }

        //        }
        //        else
        //        {
        //            if (ussd_string.Equals(menuItem.id + "", StringComparison.InvariantCultureIgnoreCase))
        //            {

        //                //main menu component
        //                int mainMenuItem = (action_id / 10) % 10;
        //                int subMenu = (action_id % 10) + 1;
        //                ussdMenu.action_id = (menuItem.id * 10);

        //                if (menuItem.steps.Count > 0)
        //                {
        //                    foreach (Step step in menuItem.steps)
        //                    {
        //                        if ((step.id == subMenu) && (mainMenuItem == menuItem.id))
        //                        {
        //                            ussdMenu.action_id = (menuItem.id * 10) + step.id;
        //                            menutoDisplay += step.title + "\r\n";

        //                            if (step.options == true)
        //                            {
        //                                foreach (string option in step.optionsValue)
        //                                {
        //                                    menutoDisplay += option + "\r\n";
        //                                }
        //                            }
        //                            foundSubMenu = true;
        //                            break;
        //                        }
        //                    }

        //                }
        //            }
        //            if (action_id == 0)
        //            {
        //                menutoDisplay += menuItem.id + ". " + menuItem.title + "\r\n";
        //            }
        //            else
        //            {
        //                int mainMenuItem = (action_id / 10) % 10;
        //                int subMenu = (action_id % 10) + 1;
        //                ussdMenu.action_id = (menuItem.id * 10);

        //                if (menuItem.steps.Count > 0)
        //                {
        //                    foreach (Step step in menuItem.steps)
        //                    {
        //                        if ((step.id == subMenu) && (mainMenuItem == menuItem.id))
        //                        {
        //                            ussdMenu.action_id = (menuItem.id * 10) + step.id;
        //                            menutoDisplay += step.title + "\r\n";

        //                            if (step.options == true)
        //                            {
        //                                foreach (string option in step.optionsValue)
        //                                {
        //                                    menutoDisplay += option + "\r\n";
        //                                }
        //                            }
        //                            foundSubMenu = true;
        //                            break;
        //                        }
        //                    }

        //                }
        //            }




        //        }
        //        if (foundSubMenu)
        //        {
        //            break;
        //        }






        //    }


        //    //Need to get Current Menu Location



        //    lines = Add2Log(lines, " GetUSSDMenuInfo()", 100, "");



        //    ussdMenu.ussd_id = 0;
        //    ussdMenu.topic_name = "SendCrypto / YellowDot";
        //    ussdMenu.ussd_string = menutoDisplay;

        //    ussdMenu.prev_action_id = 0;
        //    ussdMenu.action_name = "SendCrypto";

        //    if (ussdMenu.ussd_string.Length == 0) // MAKE SURE NOT IN EXTRA MENU
        //    {
        //        //Return to Main Menu
        //        foreach (SendCryptoRootMenu fullmenuItem in myDeserializedClass)
        //        {
        //            //Return to Main Menu
        //            menutoDisplay += fullmenuItem.id + ". " + fullmenuItem.title + "\r\n";
        //            ussdMenu.action_id = 0;
        //        }

        //    }

        //    if ((action_id == 21) && !ussd_string.Equals("8", StringComparison.OrdinalIgnoreCase)) // Send Additional Menu
        //    {
        //        ussdMenu.action_id = 22;
        //        menutoDisplay = myDeserializedClass.ElementAt(1).steps[1].title;
        //    }

        //    if ((action_id == 21) && ussd_string.Equals("8", StringComparison.OrdinalIgnoreCase))
        //    {
        //        ussdMenu.action_id = 21;
        //    }


        //    if ((action_id == 41) && !ussd_string.Equals("8", StringComparison.OrdinalIgnoreCase)) // Send Additional Menu
        //    {
        //        ussdMenu.action_id = 42;
        //        menutoDisplay = myDeserializedClass.ElementAt(3).steps[1].title;
        //    }

        //    if ((action_id == 41) && ussd_string.Equals("8", StringComparison.OrdinalIgnoreCase))
        //    {
        //        ussdMenu.action_id = 41;
        //    }



        //    int topic_id = (ussd_session != null ? ussd_session.topic_id : ussdMenu.topic_id);
        //    ussdMenu.menu_2_display = menutoDisplay;
        //    force_session_id = (String.IsNullOrEmpty(force_session_id) ? Guid.NewGuid().ToString() : force_session_id);
        //    string user_session_id = (ussd_session == null ? force_session_id : ussd_session.user_seesion_id);

        //    DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id) value(" + MSISDN + ", 18,now(), " + ussdMenu.menu_id + ",0, '" + ussd_string + "', " + ussdMenu.action_id + ", " + (ussd_session == null ? 0 : ussd_session.page_number) + "," + (ussd_session == null ? 0 : ussd_session.odd_page) + "," + (ussd_session == null ? 0 : ussd_session.game_id) + "," + topic_id + ",'" + user_session_id + "');", "DBConnectionString_104", ref lines);

        //    options = new RestClientOptions(KHMPaymentsURL + "/api/BlockChain/SaveBlockChainState?msisdn=" + MSISDN + "&USSDAction=" + action_id + "&data=" + ussd_string + "&sessionID=" + user_session_id)
        //    {
        //        ThrowOnAnyError = true,
        //        MaxTimeout = 60000  // 1 second
        //    };
        //    http = new RestRequest();
        //    http.Method = RestSharp.Method.Post;
        //    http.AddHeader("Authorization", "Bearer " + authResponse.token);
        //    client = new RestClient(options);

        //    response = client.Execute(http);
        //    if (response != null)
        //    {
        //        if (response.Content != null)

        //        {

        //            if (response.Content.Contains("InitialPINLoaded"))
        //            {

        //                options = new RestClientOptions(KHMPaymentsURL + "/api/BlockChain/GetBlockChainMenuData?msisdn=" + MSISDN)
        //                {
        //                    ThrowOnAnyError = true,
        //                    MaxTimeout = 60000  // 1 second
        //                };
        //                http = new RestRequest();
        //                http.AddHeader("Authorization", "Bearer " + authResponse.token);
        //                client = new RestClient(options);

        //                response = client.Execute(http);
        //                myDeserializedClass = JsonConvert.DeserializeObject<List<SendCryptoRootMenu>>(response.Content);
        //                menutoDisplay = "";
        //                foreach (SendCryptoRootMenu fullmenuItem in myDeserializedClass)
        //                {
        //                    //Return to Main Menu
        //                    menutoDisplay += fullmenuItem.id + ". " + fullmenuItem.title + "\r\n";
        //                    ussdMenu.action_id = 0;

        //                }
        //                ussdMenu.menu_2_display = menutoDisplay;
        //                ussdMenu.ussd_string = menutoDisplay;


        //            }
        //            else if (response.Content.Length > 2)
        //            {
        //                ussdMenu.menu_2_display = response.Content.Replace("$%", "\r\n");
        //            }
        //        }
        //    }

        //    ussdMenu.menu_2_display = ussdMenu.menu_2_display.Trim('"');
        //    ussdMenu.ussd_string = ussdMenu.ussd_string.Trim('"');

        //    return ussdMenu;

        //}

        public static string USSDBehaviuerNG205(ServiceClass service, string ussdString, string ServiceID, string MSISDN, string linkid, string receiveCB, string senderCB, string serviceCode, USSDMenu ussd_menu, USSDSession ussd_session, out DYAReceiveMoneyRequest momo_request, ref List<LogLines> lines, out string menu_2_display, out bool is_close, string force_session_id)
        {
            momo_request = null;
            menu_2_display = "";
            string msgType = "1", opType = "1";
            int status = 0;
            is_close = false;
            string result = "";
            force_session_id = (String.IsNullOrEmpty(force_session_id) ? Guid.NewGuid().ToString() : force_session_id);
            string user_session_id = (ussd_session == null ? force_session_id : ussd_session.user_seesion_id);
            int topic_id = (ussd_session != null ? ussd_session.topic_id : ussd_menu.topic_id);
            if (!String.IsNullOrEmpty(ussd_menu.menu_2_display))
            {
                menu_2_display = ussd_menu.menu_2_display;
                result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, ussd_menu.menu_2_display, "1", "1");
                DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + ",0, '" + ussdString + "', " + ussd_menu.action_id + ", " + (ussd_session == null ? 0 : ussd_session.page_number) + "," + (ussd_session == null ? 0 : ussd_session.odd_page) + "," + (ussd_session == null ? 0 : ussd_session.game_id) + "," + topic_id + ",'" + user_session_id + "');", "DBConnectionString_104", ref lines);
            }
            if (ussd_menu.action_id == 3) //close
            {
                menu_2_display = ussd_menu.menu_2_display;
                is_close = true;
                result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, menu_2_display, "2", "2");
                DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + ",1, '" + ussdString + "', " + ussd_menu.action_id + ", " + (ussd_session == null ? 0 : ussd_session.page_number) + "," + (ussd_session == null ? 0 : ussd_session.odd_page) + "," + (ussd_session == null ? 0 : ussd_session.game_id) + "," + topic_id + ",'" + user_session_id + "');", "DBConnectionString_104", ref lines);
            }
            if (ussd_menu.action_id == 59) //CheckSubscriberStatus
            {
                menu_2_display = Api.handlers.ussd_mo.CheckStatusMenu(service.service_id, MSISDN, ref lines);
                result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, menu_2_display, "1", "1");
                DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + ",0, '" + ussdString + "', " + ussd_menu.action_id + ", " + (ussd_session == null ? 0 : ussd_session.page_number) + "," + (ussd_session == null ? 0 : ussd_session.odd_page) + "," + (ussd_session == null ? 0 : ussd_session.game_id) + "," + topic_id + ",'" + user_session_id + "');", "DBConnectionString_104", ref lines);

            }
            if (ussd_menu.action_id == 60) //DeactivateMultiService
            {
                menu_2_display = Api.handlers.ussd_mo.UnsubscribeMultiServiceMenu(service.service_id, MSISDN, ref lines);
                result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, menu_2_display, "1", "1");
                DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + ",0, '" + ussdString + "', " + ussd_menu.action_id + ", " + (ussd_session == null ? 0 : ussd_session.page_number) + "," + (ussd_session == null ? 0 : ussd_session.odd_page) + "," + (ussd_session == null ? 0 : ussd_session.game_id) + "," + topic_id + ",'" + user_session_id + "');", "DBConnectionString_104", ref lines);

            }
            if (ussd_menu.action_id == 62) //DeactivateMultiServiceFull
            {
                menu_2_display = Api.handlers.ussd_mo.UnsubscribeFulfilmentMultiServiceMenu(service.service_id, MSISDN, ref lines);
                result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, menu_2_display, "1", "1");
                DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + ",0, '" + ussdString + "', " + ussd_menu.action_id + ", " + (ussd_session == null ? 0 : ussd_session.page_number) + "," + (ussd_session == null ? 0 : ussd_session.odd_page) + "," + (ussd_session == null ? 0 : ussd_session.game_id) + "," + topic_id + ",'" + user_session_id + "');", "DBConnectionString_104", ref lines);

            }

            if (ussd_menu.action_id == 63) //ActivateMultiService
            {
                menu_2_display = Api.handlers.ussd_mo.CheckStatusMenu(service.service_id, MSISDN, ref lines);
                if (menu_2_display.Contains("Cher abonné, vous n'avez pas souscrit au service Yellow Games"))
                {
                    menu_2_display = "Veuillez choisir une option :" + Environment.NewLine + Environment.NewLine;
                    menu_2_display = menu_2_display + "1) Activation/50F/1J" + Environment.NewLine;
                    menu_2_display = menu_2_display + "2) Activation/100F/03J" + Environment.NewLine;
                    menu_2_display = menu_2_display + "3) Activation/150F/07J" + Environment.NewLine;
                    menu_2_display = menu_2_display + "0) Retour" + Environment.NewLine;
                }
                else
                {
                    result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, menu_2_display, "1", "1");
                }
                DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + ",0, '" + ussdString + "', " + ussd_menu.action_id + ", " + (ussd_session == null ? 0 : ussd_session.page_number) + "," + (ussd_session == null ? 0 : ussd_session.odd_page) + "," + (ussd_session == null ? 0 : ussd_session.game_id) + "," + topic_id + ",'" + user_session_id + "');", "DBConnectionString_104", ref lines);
            }


            if (ussd_menu.action_id == 61) //fulfilment
            {
                ServiceClass subscriber_service = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                string errmsg = "";
                bool full_res = Fulfillment.CallFulfillment(subscriber_service, MSISDN, DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), true, ref lines, out errmsg);
                if (full_res)
                {
                    int price_id = 0;
                    switch (ussd_menu.service_id)
                    {
                        case 669:
                            price_id = 1853;
                            break;
                        case 697:
                            price_id = 1852;
                            break;
                        case 698:
                            price_id = 1855;
                            break;
                    }
                    Int64 sub_id = Api.DataLayer.DBQueries.InsertSub(MSISDN, subscriber_service.service_id.ToString(), price_id, DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), "3", "", ref lines);
                    if (sub_id > 0)
                    {
                        menu_2_display = Api.handlers.ussd_mo.SubscribeMultiServiceMenu(subscriber_service.service_id, 1010, ref lines);
                        ServiceBehavior.DecideBehavior(subscriber_service, "1", MSISDN, sub_id, ref lines);
                    }
                    else
                    {
                        menu_2_display = Api.handlers.ussd_mo.SubscribeMultiServiceMenu(subscriber_service.service_id, 1050, ref lines);
                        full_res = Fulfillment.CallFulfillment(subscriber_service, MSISDN, DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), false, ref lines, out errmsg);
                    }


                    DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + ",1, '" + ussdString + "', " + ussd_menu.action_id + ", " + (ussd_session == null ? 0 : ussd_session.page_number) + "," + (ussd_session == null ? 0 : ussd_session.odd_page) + "," + (ussd_session == null ? 0 : ussd_session.game_id) + "," + topic_id + ",'" + user_session_id + "');", "DBConnectionString_104", ref lines);

                }
                else
                {
                    is_close = true;
                    menu_2_display = errmsg;
                }
            }

            if (ussd_menu.action_id == 91) //MOMOAndSubscribe
            {

                int amount = 0;
                switch (ussd_menu.service_id)
                {
                    case 669:
                        amount = 50;
                        break;
                    case 697:
                        amount = 100;
                        break;
                    case 698:
                        amount = 150;
                        break;
                }
                ServiceClass momo_service = GetServiceByServiceID(669, ref lines);
                LoginRequest LoginRequestBody = new LoginRequest()
                {
                    ServiceID = momo_service.service_id,
                    Password = momo_service.service_password
                };
                LoginResponse res = Login.DoLogin(LoginRequestBody);
                if (res != null)
                {
                    if (res.ResultCode == 1000)
                    {
                        string token_id = res.TokenID;
                        int amount_2bill = amount; // Convert.ToInt32(Math.Round(amount*1.2,0));
                        momo_request = new DYAReceiveMoneyRequest()
                        {
                            MSISDN = Convert.ToInt64(MSISDN),
                            Amount = amount_2bill,
                            ServiceID = momo_service.service_id,
                            TokenID = token_id,
                            TransactionID = user_session_id
                        };
                    }
                }
                menu_2_display = "Veuillez approuver le paiement avec votre code PIN ";
                msgType = "2";
                opType = "2";
                status = 1;
                is_close = true;
                DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + ",1, '" + ussdString + "', " + ussd_menu.action_id + ", " + (ussd_session == null ? 0 : ussd_session.page_number) + "," + (ussd_session == null ? 0 : ussd_session.odd_page) + "," + (ussd_session == null ? 0 : ussd_session.game_id) + "," + topic_id + ",'" + user_session_id + "');", "DBConnectionString_104", ref lines);
            }

            if (ussd_menu.action_id == 4 || ussd_menu.action_id == 5) //subscribe or unsubscribe
            {
                DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions " +
                     "(msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id) " +
                     "value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + ",1, '" + ussdString + "', "
                     + ussd_menu.action_id + ", "
                     + (ussd_session == null ? 0 : ussd_session.page_number) + ","
                     + (ussd_session == null ? 0 : ussd_session.odd_page) + ","
                     + (ussd_session == null ? 0 : ussd_session.game_id) + "," + topic_id + ",'" + user_session_id + "');", "DBConnectionString_104", ref lines);



                is_close = true; // this is the final end point

                //               result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, menu_2_display, "2", "2");

                // determine the service
                ServiceClass subscriber_service = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);


                if (ussd_menu.action_id == 4) menu_2_display = "Thank you for choosing this service. You will receive a confirmation request within 5 minutes. Please accept to subscribe to the service.";
                else menu_2_display = ".We're sorry to see you go. If you change your mind, we're always here for you.";

                TaskManager.ExecuteInAnotherThread(() =>
                {
                    List<LogLines> log = new List<LogLines>();
                    log = Add2Log(log, $"**********************", 100, "ivr_subscribe");
                    log = Add2Log(log, $"new thread: {ussd_menu.action_id} = {ussd_menu.action_name}, USSD = {user_session_id}, topic = {topic_id}", 100, "ivr_subscribe");

                    // subscribe user
                    LoginRequest LoginRequestBody = new LoginRequest()
                    {
                        ServiceID = subscriber_service.service_id,
                        Password = subscriber_service.service_password
                    };
                    LoginResponse res = Login.DoLogin(LoginRequestBody);


                    if ((res != null) && (res.ResultCode == 1000))
                    {
                        string token_id = res.TokenID;
                        SubscribeRequest subscribe_RequestBody = new SubscribeRequest()
                        {
                            ServiceID = subscriber_service.service_id,
                            TokenID = token_id,
                            MSISDN = Convert.ToInt64(MSISDN),
                            TransactionID = "ussd_mo",
                            ActivationID = "USSD"
                        };
                        SubscribeResponse subscribe_response = (ussd_menu.action_id == 4 ? CommonFuncations.Subscribe.DoSubscribe(subscribe_RequestBody) : CommonFuncations.UnSubscribe.DoUnSubscribe(subscribe_RequestBody));
                        if (subscribe_response != null)     log = Add2Log(log, $" MSISDN = {MSISDN}, ServiceID = {subscriber_service.service_id}, action = {ussd_menu.action_id}, ResultCode = " + subscribe_response.ResultCode + ", Description = " + subscribe_response.Description, 100, "ivr_subscribe");
                        else if (ussd_menu.action_id == 4)  log = Add2Log(log, $" Failed to call SUBSCRIBE method for MSISDN = {MSISDN}, ServiceID = {subscriber_service.service_id}", 100, "ivr_subscribe");
                        else                                log = Add2Log(log, $" Failed to call UNSUBSCRIBE method for MSISDN = {MSISDN}, ServiceID = {subscriber_service.service_id}", 100, "ivr_subscribe");
                    } else log = Add2Log(log, $" MSISDN={MSISDN}, Failed to fetch login details for serviceID = {subscriber_service.service_id}", 100, "ivr_subscribe");
                    log = Write2Log(log);
                });
            }

            if (String.IsNullOrEmpty(result))
            {
                switch (topic_id)
                {
                    case 20:
                    case 14:
                        int page_number = (ussd_session != null ? ussd_session.page_number : 1);
                        int odd_page = (ussd_session != null ? ussd_session.odd_page : 0);
                        Int64 game_id = (ussd_session != null ? ussd_session.game_id : 0);
                        double selected_odd = (ussd_session != null ? ussd_session.selected_odd : 0);
                        int selected_bet_type_id = (ussd_session != null ? ussd_session.selected_bet_type_id : 0);
                        string selected_odd_name = (ussd_session != null ? ussd_session.selected_odd_name : "0");
                        string selected_odd_line = (ussd_session != null ? ussd_session.selected_odd_line : "null");
                        string amount = (ussd_session != null ? ussd_session.amount : "0");
                        int selected_league_id = (ussd_session != null ? ussd_session.selected_league_id : 0);
                        string rapidos_string = (ussd_session != null ? ussd_session.rapidos_string : "0");

                        string amount_2_pay = (ussd_session != null ? ussd_session.amount_2_pay.ToString() : "0");
                        string bar_code = (ussd_session != null ? ussd_session.bar_code : "0");
                        string selected_subagent_name = (ussd_session != null ? ussd_session.selected_subagent_name : "0");
                        IdoBetUser user = new IdoBetUser();

                        switch (ussd_menu.action_id)
                        {
                            case 172:
                                Api.DataLayer.DBQueries.ExecuteQuery("insert into ussd_users_bank_details (msisdn, date_time, bank_id,is_validated) values ("+MSISDN+",now(),"+ussdString+",0) on duplicate key update bank_id = " + ussdString + ", is_validated = 0", ref lines);
                                menu_2_display = Api.CommonFuncations.iDoBetMTNNG.EnterBankAccount(ref lines);
                                break;
                            case 173:
                                Api.DataLayer.DBQueries.ExecuteQuery("insert into ussd_users_bank_details (msisdn, date_time, bank_account,is_validated) values (" + MSISDN + ",now()," + ussdString + ",0) on duplicate key update bank_account = '" + ussdString + "', is_validated = 0", ref lines);
                                menu_2_display = Api.CommonFuncations.iDoBetMTNNG.EnterFullName(ref lines);
                                break;
                            case 175:
                                Api.DataLayer.DBQueries.ExecuteQuery("insert into ussd_users_bank_details (msisdn, date_time, full_name,is_validated) values (" + MSISDN + ",now(),'" + ussdString.Replace("'", "''") + "',0) on duplicate key update full_name = '" + ussdString.Replace("'","''") + "', is_validated = 0", ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                menu_2_display = Api.CommonFuncations.iDoBetMTNNG.CloseWinSapaBankMenu(ref lines);
                                USSDUserBankDetails ussd_b_details = GetUssdUserBankDetails(MSISDN, ref lines);
                                if (ussd_b_details != null)
                                {
                                    string bank_code = Api.CommonFuncations.iDoBetMTNNG.GetBankCode(ussd_b_details.bank_id, ref lines);
                                    Api.DataLayer.DBQueries.ExecuteQuery("update ussd_users_bank_details set bank_code = '"+bank_code+"' where msisdn = " + MSISDN, ref lines);
                                    ServiceClass service1 = GetServiceByServiceID(956, ref lines);
                                    if (service1 != null)
                                    {
                                        string token_id = "";
                                        LoginRequest login_request = new LoginRequest()
                                        {
                                            ServiceID = service1.service_id,
                                            Password = service1.service_password
                                        };
                                        LoginResponse login_response = Api.CommonFuncations.Login.DoLogin(login_request);
                                        if (login_response != null)
                                        {
                                            if (login_response.ResultCode == 1000)
                                            {
                                                token_id = login_response.TokenID;
                                            }
                                        }
                                        if (!String.IsNullOrEmpty(token_id))
                                        {
                                            ValidateBankAccountRequest valid_request = new ValidateBankAccountRequest()
                                            {
                                                ServiceID = service1.service_id,
                                                TokenID = token_id,
                                                BankID = bank_code,
                                                AccountNumber = ussd_b_details.bank_account
                                            };
                                            ValidateBankAccountResponse valid_response = Api.CommonFuncations.ValidateBankAccount.DoValidation(valid_request);
                                            if (valid_response != null)
                                            {
                                                if (valid_response.ResultCode == 1000)
                                                {
                                                    Api.DataLayer.DBQueries.ExecuteQuery("update ussd_users_bank_details set validated_name = '" + valid_response.AccountHolderName + "' where msisdn = " + MSISDN, ref lines);
                                                }
                                                else
                                                {
                                                    
                                                }
                                            }
                                        }
                                    }
                                }
                                break;
                            case 86:
                            case 87:
                                if (ussdString == "1")
                                {
                                    switch (ussd_menu.action_id)
                                    {
                                        case 86:
                                            game_id = 41;
                                            break;
                                        case 87:
                                            game_id = 42;
                                            break;
                                    }
                                    DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + rapidos_string + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',2000, " + service.service_id + ")", ref lines);
                                    msgType = "2";
                                    opType = "2";
                                    is_close = true;
                                    status = 1;

                                    menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetCloseBet(ussd_session, amount, ref lines);
                                    LoginRequest LoginRequestBody = new LoginRequest()
                                    {
                                        ServiceID = service.service_id,
                                        Password = service.service_password
                                    };
                                    LoginResponse res = Login.DoLogin(LoginRequestBody);
                                    if (res != null)
                                    {
                                        if (res.ResultCode == 1000)
                                        {
                                            string token_id = res.TokenID;
                                            
                                            momo_request = new DYAReceiveMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = 2000,
                                                ServiceID = service.service_id,
                                                TokenID = token_id,
                                                TransactionID = "Rapidos_" + user_session_id
                                            };
                                        }
                                    }

                                }
                                break;
                            case 75:
                            case 76:
                            case 77:
                                bool placebet1 = false;
                                double num3;
                                int max_bet = 0;
                                bool check_amount = double.TryParse(ussdString, out num3);
                                if (check_amount == true)
                                {
                                    switch (ussd_menu.action_id)
                                    {
                                        case 75:
                                            game_id = 35;
                                            max_bet = 340000;
                                            break;
                                        case 76:
                                            game_id = 36;
                                            max_bet = 65000;
                                            break;
                                        case 77:
                                            game_id = 37;
                                            max_bet = 4000;
                                            break;
                                    }
                                    if (num3 >= 1200 && num3 <= max_bet)
                                    {
                                        DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + rapidos_string + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "'," + num3 + ", " + service.service_id + ")", ref lines);
                                        placebet1 = true;
                                    }
                                    else
                                    {

                                        menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetWrongPriceBetRapidos(max_bet, ref lines);
                                        DataLayer.DBQueries.ExecuteQuery("delete from ussd_saved_games where user_session_id = '" + user_session_id + "' order by id desc limit 1", ref lines);
                                    }
                                }
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                //RequestForOrder
                                //bool req_for_order = GetRequestForOrder(ussd_session, ref lines);
                                if (placebet1)
                                {

                                    menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetCloseBet(ussd_session, amount, ref lines);
                                    LoginRequest LoginRequestBody = new LoginRequest()
                                    {
                                        ServiceID = service.service_id,
                                        Password = service.service_password
                                    };
                                    LoginResponse res = Login.DoLogin(LoginRequestBody);
                                    if (res != null)
                                    {
                                        if (res.ResultCode == 1000)
                                        {
                                            string token_id = res.TokenID;
                                            int amount_2bill = Convert.ToInt32(ussdString);
                                            momo_request = new DYAReceiveMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = amount_2bill,
                                                ServiceID = service.service_id,
                                                TokenID = token_id,
                                                TransactionID = "Rapidos_" + user_session_id
                                            };
                                        }
                                    }
                                }

                                break;

                            case 72: //Confirm Rapidos
                            case 73:
                            case 74:
                                String[] strlist = new string[] { };
                                bool validate_num = Api.CommonFuncations.iDoBetMTNNG.ValidateRapidosInput(ussdString, ussd_menu.action_id, out strlist, ref lines);
                                if (validate_num)
                                {
                                    menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetConfirmRapidosMenu(ussd_menu.action_id, ussdString, out game_id, ref lines);
                                    rapidos_string = ussdString;
                                }
                                else
                                {
                                    menu_2_display = Api.CommonFuncations.iDoBetMTNNG.WrongRapidosNumber();
                                }
                                break;
                            case 109:
                            case 110:
                            case 111:
                            case 112:
                            case 113:
                            case 114:
                            case 115:
                            case 116:
                            case 117:
                            case 118:
                            case 119://enter dusun lottery numbers 
                            case 135:
                            case 138:
                            case 141:
                            case 144:
                                bool validate_num_dusan = Api.CommonFuncations.iDoBetMTNNG.ValidateDusanLottoInput(ussdString, ussd_menu.action_id, out strlist, ref lines);
                                if (validate_num_dusan)
                                {
                                    menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetConfirmDusanLottoMenu(ussd_menu.action_id, ussdString, out game_id, ref lines);
                                    rapidos_string = ussdString;
                                }
                                else
                                {
                                    menu_2_display = Api.CommonFuncations.iDoBetMTNNG.WrongRapidosNumber();
                                }
                                break;
                            case 120:
                            case 121:
                            case 122:
                            case 123:
                            case 124:
                            case 125:
                            case 126:
                            case 127:
                            case 128:
                            case 129:
                            case 130://enter dusan lottery amount
                            case 136:
                            case 139:
                            case 142:
                            case 145:
                                switch (ussd_menu.action_id)
                                {
                                    case 120:
                                        game_id = 252;
                                        break;
                                    case 121:
                                        game_id = 253;
                                        break;
                                    case 122:
                                        game_id = 254;
                                        break;
                                    case 123:
                                        game_id = 255;
                                        break;
                                    case 136:
                                        game_id = 256;
                                        break;
                                    case 139:
                                        game_id = 257;
                                        break;
                                    case 142:
                                        game_id = 258;
                                        break;
                                    case 145:
                                        game_id = 259;
                                        break;
                                    case 147:
                                        game_id = 261;
                                        break;


                                }
                                ServiceClass lotto_service = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + rapidos_string + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "'," + ussdString + ", " + ussd_menu.service_id + ")", ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;

                                menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetCloseDusanLotto(ref lines);

                                LoginRequest LoginRequestBody_lotto = new LoginRequest()
                                {
                                    ServiceID = lotto_service.service_id,
                                    Password = lotto_service.service_password
                                };
                                LoginResponse res_lotto = Login.DoLogin(LoginRequestBody_lotto);
                                if (res_lotto != null)
                                {
                                    if (res_lotto.ResultCode == 1000)
                                    {
                                        string token_id = res_lotto.TokenID;
                                        int amount_2bill = Convert.ToInt32(ussdString);
                                        momo_request = new DYAReceiveMoneyRequest()
                                        {
                                            MSISDN = Convert.ToInt64(MSISDN),
                                            Amount = amount_2bill,
                                            ServiceID = lotto_service.service_id,
                                            TokenID = token_id,
                                            TransactionID = "DusanLotto_" + user_session_id
                                        };
                                    }
                                }
                                break;
                            case 84: //Confirm Lotto
                            case 85:
                                String[] strlist1 = new string[] { };
                                bool validate_num1 = Api.CommonFuncations.iDoBetMTNNG.ValidateLottoInput(ussdString, ussd_menu.action_id, out strlist1, ref lines);
                                if (validate_num1)
                                {
                                    menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetConfirmLottoMenu(ussd_menu.action_id, ussdString, out game_id, ref lines);
                                    rapidos_string = ussdString;
                                }
                                else
                                {
                                    menu_2_display = Api.CommonFuncations.iDoBetMTNNG.WrongRapidosNumber();
                                }
                                break;
                            case 55://EnterAmountForSubAgent
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                Int64 pos_trans_id = 0;
                                menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetAmountForSubAgentMenu(MSISDN, ussdString, selected_subagent_name, out pos_trans_id, ref lines);
                                if (pos_trans_id > 0)
                                {
                                    ServiceClass subscriber_service1 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                    LoginRequest LoginRequestBody = new LoginRequest()
                                    {
                                        ServiceID = subscriber_service1.service_id,
                                        Password = subscriber_service1.service_password
                                    };
                                    LoginResponse res = Login.DoLogin(LoginRequestBody);
                                    if (res != null)
                                    {
                                        if (res.ResultCode == 1000)
                                        {
                                            string token_id = res.TokenID;
                                            int amount_2bill = Convert.ToInt32(ussdString);
                                            momo_request = new DYAReceiveMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = amount_2bill,
                                                ServiceID = ussd_menu.service_id,
                                                TokenID = token_id,
                                                TransactionID = "POSTrans_" + pos_trans_id

                                            };
                                        }
                                    }
                                }



                                break;
                            case 54:
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetSlectedSubAgentMenu(MSISDN, page_number, ussdString, out selected_subagent_name, ref lines);
                                break;
                            case 80: //Foot Solider Check MSISDN and ask to enter full name 
                                is_close = true;
                                menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetFootSoldiersMSISDNMenu(MSISDN, ussdString, out is_close, service, ref lines);
                                if (is_close)
                                {
                                    msgType = "2";
                                    opType = "2";
                                }
                                else
                                {
                                    Api.DataLayer.DBQueries.ExecuteQuery("insert into ussd_footsoldiers_attempts (user_session_id, footsoldier_msisdn, user_msisdn, full_name, user_id, date_time) values('" + user_session_id + "', " + MSISDN + ", 224" + ussdString + ", '', 0, now())", ref lines);
                                }
                                break;
                            case 79: //Foot Soldier create user
                                is_close = true;
                                Int64 user_msisdn = Api.DataLayer.DBQueries.SelectQueryReturnInt64("SELECT u.user_msisdn from ussd_footsoldiers_attempts u WHERE u.user_session_id = '" + user_session_id + "' order by u.id desc limit 1", ref lines);
                                if (user_msisdn > 0)
                                {
                                    Api.CommonFuncations.iDoBetMTNNG.CreateUserResponse create_user = new Api.CommonFuncations.iDoBetMTNNG.CreateUserResponse();
                                    menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetFootSoldiersFullNameMenu(MSISDN, ussdString, out is_close, ussd_menu, user_msisdn.ToString(), out create_user, ref lines);
                                    if (is_close)
                                    {
                                        LoginRequest LoginRequestBody = new LoginRequest()
                                        {
                                            ServiceID = service.service_id,
                                            Password = service.service_password
                                        };
                                        LoginResponse res = Login.DoLogin(LoginRequestBody);
                                        if (res != null)
                                        {
                                            if (res.ResultCode == 1000)
                                            {

                                                Int64 rec_id = Api.DataLayer.DBQueries.SelectQueryReturnInt64("SELECT u.id from ussd_footsoldiers_attempts u WHERE u.user_session_id = '" + user_session_id + "' order by u.id desc limit 1", ref lines);
                                                Api.DataLayer.DBQueries.ExecuteQuery("update ussd_footsoldiers_attempts set user_id = " + create_user.userId + ", full_name = '" + ussdString + "' where id = " + rec_id, ref lines);
                                                string token_id = res.TokenID;
                                                string sms_text = "Felicitations, vous vous etes inscrit avec succes sur YellowBet. https://m.yellowbet.com.gn/#/login Mot de passe: " + create_user.password;
                                                Api.DataLayer.DBQueries.ExecuteQuery("insert into foot_soldiers_sms (date_time, msisdn, service_id, sms_text) values(now(), " + user_msisdn + "," + service.service_id + ",'" + sms_text + "');", ref lines);
                                                SendSMSRequest RequestSendSMSBody1 = new SendSMSRequest()
                                                {
                                                    ServiceID = service.service_id,
                                                    MSISDN = user_msisdn,
                                                    Text = sms_text,
                                                    TokenID = token_id,
                                                    TransactionID = "12345"
                                                };
                                                SendSMSResponse response_sendsms1 = SendSMS.DoSMS(RequestSendSMSBody1);
                                                if (response_sendsms1 != null)
                                                {
                                                    if (response_sendsms1.ResultCode == 1010 || response_sendsms1.ResultCode == 1000)
                                                    {
                                                        lines = Add2Log(lines, " Send SMS Was OK", 100, lines[0].ControlerName);
                                                    }
                                                    else
                                                    {
                                                        lines = Add2Log(lines, " Send SMS Failed", 100, lines[0].ControlerName);
                                                    }
                                                }
                                                else
                                                {
                                                    lines = Add2Log(lines, " Send SMS Failed", 100, lines[0].ControlerName);
                                                }
                                            }
                                        }
                                    }
                                }
                                else
                                {
                                    is_close = false;
                                    menu_2_display = "Error 78_2" + Environment.NewLine;
                                    menu_2_display = menu_2_display + Environment.NewLine + "M) ";// Menu Principal ";

                                }
                                break;
                            case 78: //Foot Soldier Main Menu asking to enter MSISDN
                                menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetFootSoldierMainMenu(MSISDN, ref lines);
                                break;
                            case 53:
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetAgentMainMenu(MSISDN, page_number, ref lines);
                                break;
                            case 34: //DepositMoney
                                user = Api.CommonFuncations.iDoBetMTNNG.SearchUserNew(MSISDN, ref lines);
                                menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetDepositMoneyMenu(user, ussd_menu, MSISDN, ref lines);
                                break;
                            case 36: //StartDepositMoney
                                user = Api.CommonFuncations.iDoBetMTNNG.SearchUserNew(MSISDN, ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetStartDepositMoneyMenu(service, user, ussd_menu, MSISDN, ussdString, out momo_request, ref lines);
                                break;
                            case 33: //WithdrawMoney
                                user = Api.CommonFuncations.iDoBetMTNNG.SearchUserNew(MSISDN, ref lines);
                                menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetWithdrawMoneyMenu(user, ref lines);
                                break;
                            case 35: //StartWithdrawMoney
                                user = Api.CommonFuncations.iDoBetMTNNG.SearchUserNew(MSISDN, ref lines);
                                menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetStartWithdrawMoneyMenu(user, false, false, false, ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                if (user.isValid == true)
                                {
                                    if (Convert.ToInt32(ussdString) <= user.AvailableForWithdraw && Convert.ToInt32(ussdString) > 0)
                                    {
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNNG.CheckBeforeWithdrawMenu(service, MSISDN, ref lines);
                                        if (String.IsNullOrEmpty(menu_2_display))
                                        {
                                            //Refund user
                                            ServiceClass subscriber_service1 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                            LoginRequest LoginRequestBody1 = new LoginRequest()
                                            {
                                                ServiceID = service.service_id,
                                                Password = service.service_password
                                            };
                                            LoginResponse res1 = Login.DoLogin(LoginRequestBody1);
                                            if (res1 != null)
                                            {
                                                if (res1.ResultCode == 1000)
                                                {
                                                    string token_id = res1.TokenID;
                                                    DYATransferMoneyRequest momotransfer_request = new DYATransferMoneyRequest()
                                                    {
                                                        MSISDN = Convert.ToInt64(MSISDN),
                                                        Amount = Convert.ToInt32(ussdString),
                                                        ServiceID = service.service_id,
                                                        TokenID = token_id,
                                                        TransactionID = "USSDWithdraw_" + Guid.NewGuid().ToString()
                                                    };
                                                    string postBody = "", response_body = "";
                                                    //bool wd_result = StartWithdraw(user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                    bool do_withdraw = false;
                                                    string code = "";
                                                    if (user.AvailableForWithdraw > 0)
                                                    {
                                                        do_withdraw = true;
                                                        code = Api.CommonFuncations.iDoBetMTNNG.StartWithdrawNew(user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                    }



                                                    menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetStartWithdrawMoneyMenu(user, true, true, false, ref lines);

                                                    if (code == "")
                                                    {
                                                        if (do_withdraw)
                                                        {
                                                            menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetStartWithdrawMoneyMenu(user, false, false, false, ref lines);
                                                            string mail_body = "<p><h2>Start Withdraw MTN Guinea has failed</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>Json: </b>" + postBody + "<br><b>Response: </b>" + response_body + "<br></p>";
                                                            string mail_subject = "Start Withdraw MTN Guinea has failed for user - " + user.id;
                                                            string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                            string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                            string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                            string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                            int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                            string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                            CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                                        }

                                                    }
                                                    else
                                                    {
                                                        DYATransferMoneyResponse momotransfer_response = CommonFuncations.DYATransferMoney.DoTransfer(momotransfer_request);
                                                        if (momotransfer_response.ResultCode == 1000)
                                                        {
                                                            postBody = "";
                                                            response_body = "";
                                                            bool end_withdraw = Api.CommonFuncations.iDoBetMTNNG.EndWithdrawNew(momotransfer_response.Timestamp, momotransfer_response.TransactionID, true, code, user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                            if (!end_withdraw)
                                                            {
                                                                menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetStartWithdrawMoneyMenu(user, false, false, false, ref lines);
                                                                string mail_body = "", mail_subject = "";
                                                                mail_body = "<p><h2>End Withdraw MTN Guinea has failed but DYATransfer was ok</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>Request: </b>" + postBody + "<br>Response: " + response_body + "<br></p>";
                                                                mail_subject = "End Withdraw MTN Guinea has failed but DYATransfer was ok - " + user.id;
                                                                string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                                string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                                string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                                string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                                int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                                string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                                CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                                            }
                                                            GoogleAnalytics.SendData2GoogleAnalytics("UA-154843894-1", "ussd", Base64.Reverse(MSISDN), System.Web.HttpContext.Current.Request.ServerVariables["REMOTE_ADDR"], "BJ", "event", "Withdraw", "MOMO", "-" + ussdString, "/", ref lines);
                                                        }
                                                        else
                                                        {
                                                            menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetStartWithdrawMoneyMenu(user, false, false, false, ref lines);
                                                            postBody = "";
                                                            response_body = "";
                                                            bool end_withdraw = iDoBetMTNNG.EndWithdrawNew(momotransfer_response.Timestamp, momotransfer_response.TransactionID, false, code, user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                            string mail_body = "", mail_subject = "";
                                                            mail_body = "<p><h2>Withdraw MTN Guinea has failed DYATransfer</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>MOMO Response: </b>" + momotransfer_response.ResultCode + " " + momotransfer_response.Description + "<br>User was refunded: " + end_withdraw + "<br><b>Request: </b>" + postBody + "<br><b>Response: </b>" + response_body + "</p>";
                                                            mail_subject = "Withdraw MTN Guinea has failed DYATransfer for user - " + user.id;
                                                            string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                            string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                            string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                            string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                            int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                            string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                            CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                                        }
                                                    }



                                                }
                                            }
                                        }


                                    }
                                    else
                                    {
                                        //user has requested more than allowed
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetStartWithdrawMoneyMenu(user, false, false, true, ref lines);
                                    }
                                }
                                break;
                            case 25://CloseXXXBet
                            case 26:
                            case 27:
                                List<Int64> saved_ids = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, ref lines);
                                bool placebet = false;
                                double num2;
                                bool res_parse1 = double.TryParse(amount, out num2);
                                string orig_amount = amount;
                                if (res_parse1 == true)
                                {
                                    if (num2 >= 63 && num2 <= 10000)
                                    {
                                        amount = Math.Round((Convert.ToInt32(amount) * 0.8),0).ToString();
                                        placebet = true;
                                        if (saved_ids != null)
                                        {
                                            foreach (Int64 s in saved_ids)
                                            {
                                                DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set amount = " + amount + " where id = " + s, ref lines);
                                            }
                                        }
                                    }
                                    else
                                    {

                                        menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetWrongPriceBetMeny(ref lines);
                                        //DataLayer.DBQueries.ExecuteQuery("delete from ussd_saved_games where user_session_id = '" + user_session_id + "' order by id desc limit 1", ref lines);
                                    }
                                }


                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                //RequestForOrder
                                //bool req_for_order = GetRequestForOrder(ussd_session, ref lines);
                                if (placebet)
                                {
                                    bool req_for_order = Api.CommonFuncations.iDoBetMTNNG.PlaceBet(ussd_session, ref lines);

                                    if (req_for_order == true)
                                    {
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetCloseBet(ussd_session, amount, ref lines);
                                        ServiceClass subscriber_service2 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                        LoginRequest LoginRequestBody = new LoginRequest()
                                        {
                                            ServiceID = subscriber_service2.service_id,
                                            Password = subscriber_service2.service_password
                                        };
                                        LoginResponse res = Login.DoLogin(LoginRequestBody);
                                        if (res != null)
                                        {
                                            if (res.ResultCode == 1000)
                                            {
                                                string token_id = res.TokenID;
                                                int amount_2bill = Convert.ToInt32(orig_amount);
                                                momo_request = new DYAReceiveMoneyRequest()
                                                {
                                                    MSISDN = Convert.ToInt64(MSISDN),
                                                    Amount = amount_2bill,
                                                    ServiceID = ussd_menu.service_id,
                                                    TokenID = token_id,
                                                    TransactionID = user_session_id

                                                };
                                            }
                                        }
                                    }
                                    else
                                    {
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetCloseBetFailed(ref lines);
                                    }
                                }

                                break;
                            case 22: //ConfirmBetXXX
                            case 23:
                            case 24:
                                amount = ussdString;
                                double num1;
                                bool res_parse = double.TryParse(amount, out num1);
                                if (res_parse == true)
                                {
                                    if (num1 >= 63 && num1 <= 10000)
                                    {
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetConfirmBet(ussd_session, amount, ref lines);
                                    }
                                    else
                                    {

                                        menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetWrongPriceBetMeny(ref lines);
                                        //DataLayer.DBQueries.ExecuteQuery("delete from ussd_saved_games where user_session_id = '" + user_session_id + "' order by id desc limit 1", ref lines);
                                    }
                                }
                                odd_page = 0;

                                break;
                            case 19: //PayAndConfirmXXX
                            case 20:
                            case 21:
                                //need to check if user clicks back and then returns to this section.
                                //DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + ussdString + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',0, " + service.service_id + ")", ref lines);
                                menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetPayAndConfirm(ussd_session, ref lines);
                                odd_page = 0;
                                break;
                            case 32: //ticket status
                                page_number = (page_number == 0 ? 1 : page_number);
                                menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetCheckTicketMenu(MSISDN, page_number, ussdString, ref lines);
                                break;
                            case 31: //tickets status by phone
                            case 177:
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetCheckTicketsMenu(MSISDN, page_number, ref lines);
                                break;
                            case 52:
                                menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetPayoutBarcodeTicket(ussd_menu, MSISDN, ref lines);
                                if (String.IsNullOrEmpty(menu_2_display))
                                {
                                    msgType = "2";
                                    opType = "2";
                                    is_close = true;
                                    //Refund user
                                    ServiceClass subscriber_service2 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                    LoginRequest LoginRequestBody2 = new LoginRequest()
                                    {
                                        ServiceID = service.service_id,
                                        Password = service.service_password
                                    };
                                    LoginResponse res2 = Login.DoLogin(LoginRequestBody2);
                                    if (res2 != null)
                                    {
                                        if (res2.ResultCode == 1000)
                                        {
                                            string token_id = res2.TokenID;
                                            DYATransferMoneyRequest momotransfer_request = new DYATransferMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(amount_2_pay),
                                                ServiceID = service.service_id,
                                                TokenID = token_id,
                                                TransactionID = "POSTicketPayout_" + bar_code
                                            };
                                            DYATransferMoneyResponse momotransfer_response = CommonFuncations.DYATransferMoney.DoTransfer(momotransfer_request);

                                            if (momotransfer_response.ResultCode == 1000)
                                            {
                                                int cashier_id = Api.CommonFuncations.iDoBetMTNNG.GetCashierID(MSISDN, ref lines);
                                                if (cashier_id > 0)
                                                {
                                                    DataLayer.DBQueries.ExecuteQuery("insert into casheir_transactions (cashier_id, bar_code, total_payout, date_time, dya_id) values(" + cashier_id + ", '" + bar_code + "', " + amount_2_pay + ", now()," + momotransfer_response.TransactionID + ");", ref lines);
                                                }
                                                GoogleAnalytics.SendData2GoogleAnalytics("UA-154843894-1", "ussd", Base64.Reverse(MSISDN), System.Web.HttpContext.Current.Request.ServerVariables["REMOTE_ADDR"], "BJ", "event", "PyoutPOSTicket", "MOMO", "-" + ussdString, "/", ref lines);
                                                //dopayout
                                                bool dopayout_res = Api.CommonFuncations.iDoBetMTNNG.DoPayOutNew(momotransfer_response.Timestamp, momotransfer_response.TransactionID, bar_code, ref lines);
                                                //bool dopayout_res = iDoBet.DoPayout(bar_code, ref lines);
                                                menu_2_display = "Felicitations, le billet a ete rembourse sur votre compte MOMO.";

                                            }
                                            else
                                            {
                                                menu_2_display = "Le billet n'a pas ete rembourse sur votre compte MOMO." + Environment.NewLine;
                                                menu_2_display = menu_2_display + "Veuillez reessayer";
                                                string mail_body = "<p><h2>Payout MTN Guinea has failed DYATransfer</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>MOMO Response: </b>" + momotransfer_response.ResultCode + " " + momotransfer_response.Description + "<br></p>";
                                                string mail_subject = "Payout MTN Guinea has failed DYATransfer for user - " + user.id;
                                                string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                            }
                                        }
                                    }
                                }

                                break;
                            case 44: //search ticket
                                menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetCheckTicketByBarcodeMenu(MSISDN, ussdString, out amount_2_pay, ref lines);
                                bar_code = ussdString;
                                break;
                            case 39: //add another game
                                if (game_id > 0)
                                {
                                    //DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + ussdString + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',0, " + service.service_id + ")", ref lines);
                                    game_id = 0;
                                    selected_odd = 0;
                                    page_number = 1;
                                    odd_page = 0;
                                }
                                menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetSportsTypeMenu(ref lines);
                                break;
                            case 41: //Delete and Start Over
                                List<Int64> saved_ids1 = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, ref lines);
                                if (saved_ids1 != null)
                                {
                                    foreach (Int64 s in saved_ids1)
                                    {
                                        DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set status = 3 where id = " + s, ref lines);
                                    }
                                }

                                //DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set status = 3 where user_seesion_id = '" + user_session_id + "'", ref lines);
                                game_id = 0;
                                odd_page = 0;
                                selected_odd = 0;
                                page_number = 1;
                                menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetSportsTypeMenu(ref lines);
                                ussd_menu.action_id = 2;
                                break;
                            case 48:
                                menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetSoccerLeagueMenu(35, "0", ussd_menu.ussd_id, ref lines, out selected_league_id);
                                break;
                            case 47:
                                menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetSoccerLeagueMenu(32, "0", ussd_menu.ussd_id, ref lines, out selected_league_id);
                                break;
                            case 37: //display soccer leagu
                                menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetSoccerLeagueMenu(31, "0", ussd_menu.ussd_id, ref lines, out selected_league_id);
                                break;
                            case 49:
                            case 50:
                            case 38://selected league
                            case 28://Start Over
                            case 29:
                            case 30:
                            case 16://AddXXXGame or 
                            case 17:
                            case 18:
                            case 7: //DisplayXXXTopEvents   
                            case 8:
                            case 9:
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && page_number > 0)
                                {
                                    page_number = page_number - 1;
                                }
                                if (ussd_menu.action_id == 28 || ussd_menu.action_id == 29 || ussd_menu.action_id == 30)
                                {
                                    List<Int64> saved_ids2 = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, ref lines);
                                    if (saved_ids2 != null)
                                    {
                                        foreach (Int64 s in saved_ids2)
                                        {
                                            DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set status = 3 where id = " + s, ref lines);
                                        }
                                    }
                                    //DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set status = 3 where user_seesion_id = '"+user_session_id+"'", ref lines);
                                    game_id = 0;
                                    selected_odd = 0;
                                    odd_page = 0;
                                    page_number = 1;

                                }
                                if (ussd_menu.action_id == 16 || ussd_menu.action_id == 17 || ussd_menu.action_id == 18)
                                {
                                    if (game_id > 0)
                                    {
                                        //DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + ussdString + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',0, " + service.service_id + ")", ref lines);
                                        game_id = 0;
                                        selected_odd = 0;
                                        page_number = 1;
                                        odd_page = 0;
                                    }

                                }
                                switch (ussd_menu.action_id)
                                {
                                    case 38:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetEventsMenu(ussdString, 31, page_number, ref lines, out selected_league_id, selected_league_id, ussd_menu);
                                        break;
                                    case 49:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetEventsMenu(ussdString, 32, page_number, ref lines, out selected_league_id, selected_league_id, ussd_menu);
                                        break;
                                    case 50:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetEventsMenu(ussdString, 35, page_number, ref lines, out selected_league_id, selected_league_id, ussd_menu);
                                        break;
                                    case 28:
                                    case 16:
                                    case 7:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetEventsMenu(31, page_number, ref lines);
                                        break;
                                    case 29:
                                    case 17:
                                    case 8:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetEventsMenu(32, page_number, ref lines);
                                        break;
                                    case 30:
                                    case 18:
                                    case 9:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetEventsMenu(35, page_number, ref lines);
                                        break;
                                }


                                break;
                            case 10: //DisplayXXXGame
                            case 11:
                            case 12:
                                page_number = (page_number == 0 ? 1 : page_number);
                                selected_odd = 0;
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    odd_page = odd_page + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && odd_page > 0)
                                {
                                    odd_page = odd_page - 1;
                                }
                                switch (ussd_menu.action_id)
                                {
                                    case 10:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetGameOddsMenu(31, page_number, ussdString, game_id, odd_page, out game_id, selected_league_id, ref lines);
                                        break;
                                    case 11:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetGameOddsMenu(32, page_number, ussdString, game_id, odd_page, out game_id, selected_league_id, ref lines);
                                        break;
                                    case 12:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetGameOddsMenu(35, page_number, ussdString, game_id, odd_page, out game_id, selected_league_id, ref lines);
                                        break;
                                }
                                break;
                            case 13: //ConfirmXXXGame (select odd)
                            case 14:
                            case 15:

                                switch (ussd_menu.action_id)
                                {
                                    case 13:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetConfirmMenu(31, game_id, ussdString, odd_page, out selected_odd, out selected_bet_type_id, out selected_odd_name, out selected_odd_line, ref lines, ussd_session, MSISDN, service);
                                        break;
                                    case 14:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetConfirmMenu(32, game_id, ussdString, odd_page, out selected_odd, out selected_bet_type_id, out selected_odd_name, out selected_odd_line, ref lines, ussd_session, MSISDN, service);
                                        break;
                                    case 15:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetConfirmMenu(35, game_id, ussdString, odd_page, out selected_odd, out selected_bet_type_id, out selected_odd_name, out selected_odd_line, ref lines, ussd_session, MSISDN, service);
                                        break;
                                }
                                break;
                            case 92: //FreeBet
                                bool placebet2 = false;
                                USSDBonus ub = null;
                                menu_2_display = Api.CommonFuncations.iDoBetMTNNG.CheckFreeBet(ussd_session, MSISDN, out placebet2, out ub, ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                if (String.IsNullOrEmpty(menu_2_display) && placebet2)
                                {
                                    List<Int64> saved_ids3 = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, ref lines);
                                    if (saved_ids3 != null)
                                    {
                                        foreach (Int64 s in saved_ids3)
                                        {
                                            DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set amount = " + ub.amount + " where id = " + s, ref lines);
                                        }
                                    }

                                    bool req_for_order = Api.CommonFuncations.iDoBetMTNNG.PlaceBet(ussd_session, ref lines);
                                    if (req_for_order == true)
                                    {
                                        //final placebet
                                        Int64 dya_id = Api.DataLayer.DBQueries.ExecuteQueryReturnInt64("insert into dya_transactions (msisdn, service_id, date_time, amount, result, result_desc, dya_method, transaction_id) values(" + MSISDN + "," + service.service_id + ",now()," + ub.amount + ",'02','USSD Bonus',2,'" + ussd_session.user_seesion_id + "')", ref lines);
                                        DYATransactions dya_trans = UpdateGetDYAReciveTrans(dya_id, "02", "USSD Bonus", ref lines);
                                        ExecuteOrderDetails barcode = null;
                                        string postBody = "", response_body = "";
                                        if (dya_trans.partner_transid.Contains("Rapidos_"))
                                        {
                                            barcode = CommonFuncations.iDoBetMTNNG.PlaceBetRapidos(dya_trans, out postBody, out response_body, ref lines);
                                        }
                                        else
                                        {
                                            barcode = CommonFuncations.iDoBetMTNNG.GetExecuteOrderNew(dya_trans, out postBody, out response_body, ref lines);
                                        }
                                        if (barcode != null)
                                        {
                                            double total_ratio = (Convert.ToDouble(barcode.max_payout) / Convert.ToDouble(barcode.amount));
                                            Api.DataLayer.DBQueries.ExecuteQuery("insert into ussd_bonus_bets (ussd_bonus_user_id, amount, odd, selections, barcode, payout_dya_id, date_time) values(" + ub.bonus_user_id + "," + ub.amount + "," + total_ratio + "," + saved_ids3.Count() + ",'" + barcode.barcode + "',0,now())", ref lines);
                                            string text_msg_ms = "Bonjour, votre bonus pari a ete place avec succes.\n";// + Environment.NewLine;
                                            text_msg_ms = text_msg_ms + "Numero de commande: " + barcode.order_number + "\n";// Environment.NewLine;
                                            text_msg_ms = text_msg_ms + "Code a barre: " + barcode.barcode + "\n";//Environment.NewLine;
                                            text_msg_ms = text_msg_ms + "Montant: " + barcode.amount + "\n";//Environment.NewLine;
                                            text_msg_ms = text_msg_ms + "Gain Maximum: " + barcode.max_payout;//Environment.NewLine;
                                            lines = Add2Log(lines, " total_bonus =  " + barcode.total_bonus, 100, lines[0].ControlerName);
                                            if (!String.IsNullOrEmpty(barcode.total_bonus))
                                            {
                                                text_msg_ms = text_msg_ms + "\nBonus: " + barcode.total_bonus;//Environment.NewLine;
                                            }
                                            //send sms
                                            LoginRequest LoginRequestBody = new LoginRequest()
                                            {
                                                ServiceID = service.service_id,
                                                Password = service.service_password
                                            };
                                            LoginResponse res = Login.DoLogin(LoginRequestBody);
                                            if (res != null)
                                            {
                                                if (res.ResultCode == 1000)
                                                {
                                                    string token_id = res.TokenID;
                                                    SendSMSRequest RequestSendSMSBody1 = new SendSMSRequest()
                                                    {
                                                        ServiceID = service.service_id,
                                                        MSISDN = Convert.ToInt64(MSISDN),
                                                        Text = text_msg_ms,
                                                        TokenID = token_id,
                                                        TransactionID = "12345"
                                                    };
                                                    SendSMSResponse response_sendsms1 = SendSMS.DoSMS(RequestSendSMSBody1);
                                                    if (response_sendsms1 != null)
                                                    {
                                                        if (response_sendsms1.ResultCode == 1010 || response_sendsms1.ResultCode == 1000)
                                                        {
                                                            lines = Add2Log(lines, " Send SMS Was OK", 100, lines[0].ControlerName);
                                                        }
                                                        else
                                                        {
                                                            lines = Add2Log(lines, " Send SMS Failed", 100, lines[0].ControlerName);
                                                        }
                                                    }
                                                    else
                                                    {
                                                        lines = Add2Log(lines, " Send SMS Failed", 100, lines[0].ControlerName);
                                                    }
                                                }
                                            }



                                        }

                                        menu_2_display = Api.CommonFuncations.iDoBetMTNNG.GetUSSDBonusCloseBet(barcode, ref lines);
                                    }
                                }

                                break;
                        }
                        lines = Add2Log(lines, " page_number = " + page_number, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " game_id = " + game_id, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " odd_page = " + odd_page, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " selected_odd = " + selected_odd, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " amount = " + amount, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " selected_league_id = " + selected_league_id, 100, "ivr_subscribe");
                        result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, menu_2_display, msgType, opType);
                        DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id, selected_odd, selected_bet_type_id,selected_odd_name, selected_odd_line, amount, selected_league_id, amount_2_pay, bar_code, selected_subagent_name, rapidos_string) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + "," + status + ", '" + ussdString + "', " + ussd_menu.action_id + ", " + page_number + "," + odd_page + "," + game_id + "," + topic_id + ",'" + user_session_id + "'," + selected_odd + "," + selected_bet_type_id + ",'" + selected_odd_name + "','" + selected_odd_line + "', " + amount + "," + selected_league_id + "," + amount_2_pay + ",'" + bar_code + "','" + selected_subagent_name + "', '" + rapidos_string + "');", "DBConnectionString_104", ref lines);
                        break;
                }
            }

            return result;
        }

        public static string BuildSendUSSDSoap(ServiceClass service, string service_id, string msisdn, string linkid, string receiveCB, string senderCB, string serviceCode, string msg, string msgType, string ussdOpType)
        {
            string timeStamp = DateTime.Now.ToString("yyyyMMddhhmmss");

            string final_password = md5.Encode_md5(service.spid + service.spid_password + timeStamp).ToUpper();

            string ussd_soap = "";
            ussd_soap = ussd_soap + "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:loc=\"http://www.csapi.org/schema/parlayx/ussd/send/v1_0/local\">";
            ussd_soap = ussd_soap + "<soapenv:Header><tns:RequestSOAPHeader xmlns:tns=\"http://www.huawei.com.cn/schema/common/v2_1\">";
            ussd_soap = ussd_soap + "<tns:spId>" + service.spid + "</tns:spId>";
            ussd_soap = ussd_soap + "<tns:spPassword>" + final_password + "</tns:spPassword>";
            ussd_soap = ussd_soap + "<tns:serviceId>" + service_id + "</tns:serviceId>";
            ussd_soap = ussd_soap + "<tns:timeStamp>" + timeStamp + "</tns:timeStamp>";
            ussd_soap = ussd_soap + "<tns:OA>" + msisdn + "</tns:OA>";
            ussd_soap = ussd_soap + "<tns:FA>" + msisdn + "</tns:FA>";
            ussd_soap = ussd_soap + "<tns:linkid>" + linkid + "</tns:linkid>";
            ussd_soap = ussd_soap + "</tns:RequestSOAPHeader>";
            ussd_soap = ussd_soap + "</soapenv:Header>";
            ussd_soap = ussd_soap + "<soapenv:Body>";
            ussd_soap = ussd_soap + "<loc:sendUssd>";
            ussd_soap = ussd_soap + "<loc:msgType>"+ msgType + "</loc:msgType>";
            ussd_soap = ussd_soap + "<loc:senderCB>" + receiveCB + "</loc:senderCB>";
            //ussd_soap = ussd_soap + "<loc:receiveCB>" + senderCB + "</loc:receiveCB>";
            ussd_soap = ussd_soap + "<loc:receiveCB>" + senderCB + "</loc:receiveCB>";
            ussd_soap = ussd_soap + "<loc:ussdOpType>"+ ussdOpType + "</loc:ussdOpType>";
            ussd_soap = ussd_soap + "<loc:msIsdn>" + msisdn + "</loc:msIsdn>";
            ussd_soap = ussd_soap + "<loc:serviceCode>" + serviceCode + "</loc:serviceCode>";
            ussd_soap = ussd_soap + "<loc:codeScheme>68</loc:codeScheme>";
            ussd_soap = ussd_soap + "<loc:ussdString>"+ msg + "</loc:ussdString>";
            ussd_soap = ussd_soap + "</loc:sendUssd>";
            ussd_soap = ussd_soap + "</soapenv:Body>";
            ussd_soap = ussd_soap + "</soapenv:Envelope>";
            return ussd_soap;
        }

        public static string BuildAbortUSSDSoap(ServiceClass service, string service_id, string msisdn, string receiveCB, string senderCB, string abort_reason)
        {
            string timeStamp = DateTime.Now.ToString("yyyyMMddhhmmss");

            string final_password = md5.Encode_md5(service.spid + service.spid_password + timeStamp).ToUpper();

            string ussd_soap = "";

            ussd_soap = ussd_soap + "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:loc=\"http://www.csapi.org/schema/parlayx/ussd/send/v1_0/local\">";
            ussd_soap = ussd_soap + "<soapenv:Header>";
            ussd_soap = ussd_soap + "<tns:RequestSOAPHeader xmlns:tns=\"http://www.huawei.com.cn/schema/common/v2_1\">";
            ussd_soap = ussd_soap + "<tns:spId>"+ service.spid + "</tns:spId>";
            ussd_soap = ussd_soap + "<tns:spPassword>"+ final_password + "</tns:spPassword>";
            ussd_soap = ussd_soap + "<tns:serviceId>"+ service_id + "</tns:serviceId>";
            ussd_soap = ussd_soap + "<tns:timeStamp>"+ timeStamp + "</tns:timeStamp>";
            ussd_soap = ussd_soap + "<tns:OA>"+ msisdn + "</tns:OA>";
            ussd_soap = ussd_soap + "<tns:FA>"+ msisdn + "</tns:FA>";
            ussd_soap = ussd_soap + "</tns:RequestSOAPHeader>";
            ussd_soap = ussd_soap + "</soapenv:Header>";
            ussd_soap = ussd_soap + "<soapenv:Body>";
            ussd_soap = ussd_soap + "<loc:sendUssdAbort>";
            ussd_soap = ussd_soap + "<loc:senderCB>"+ receiveCB + "</loc:senderCB>";
            ussd_soap = ussd_soap + "<loc:receiveCB>"+ senderCB + "</loc:receiveCB>";
            ussd_soap = ussd_soap + "<loc:abortReason>"+ abort_reason + "</loc:abortReason>";
            ussd_soap = ussd_soap + "</loc:sendUssdAbort>";
            ussd_soap = ussd_soap + "</soapenv:Body>";
            ussd_soap = ussd_soap + "</soapenv:Envelope>";


            return ussd_soap;
        }


        public static string MoovUSSDBehaviuer(ServiceClass service, string ussdString, string ServiceID, string MSISDN, string linkid, string receiveCB, string senderCB, string serviceCode, USSDMenu ussd_menu, USSDSession ussd_session, out DYAReceiveMoneyRequest momo_request, ref List<LogLines> lines, out string menu_2_display, out bool is_close, string force_session_id)
        {
            momo_request = null;
            menu_2_display = "";
            is_close = false;
            string result = "";
            force_session_id = (String.IsNullOrEmpty(force_session_id) ? Guid.NewGuid().ToString() : force_session_id);
            string user_session_id = (ussd_session == null ? force_session_id : ussd_session.user_seesion_id);
            int topic_id = (ussd_session != null ? ussd_session.topic_id : ussd_menu.topic_id);
            if (!String.IsNullOrEmpty(ussd_menu.menu_2_display))
            {
                menu_2_display = ussd_menu.menu_2_display;
                result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, ussd_menu.menu_2_display, "1", "1");
                DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + ",0, '" + ussdString + "', " + ussd_menu.action_id + ", " + (ussd_session == null ? 0 : ussd_session.page_number) + "," + (ussd_session == null ? 0 : ussd_session.odd_page) + "," + (ussd_session == null ? 0 : ussd_session.game_id) + "," + topic_id + ",'" + user_session_id + "');", ref lines);
            }
            if (ussd_menu.action_id == 3) //close
            {
                menu_2_display = ussd_menu.menu_2_display;
                is_close = true;
                result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, menu_2_display, "2", "2");
                DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + ",1, '" + ussdString + "', " + ussd_menu.action_id + ", " + (ussd_session == null ? 0 : ussd_session.page_number) + "," + (ussd_session == null ? 0 : ussd_session.odd_page) + "," + (ussd_session == null ? 0 : ussd_session.game_id) + "," + topic_id + ",'" + user_session_id + "');", ref lines);
            }

            if (String.IsNullOrEmpty(result))
            {
                switch (topic_id)
                {
                    case 5:
                    case 2:
                        int page_number = (ussd_session != null ? ussd_session.page_number : 1);
                        int odd_page = (ussd_session != null ? ussd_session.odd_page : 0);
                        Int64 game_id = (ussd_session != null ? ussd_session.game_id : 0);
                        double selected_odd = (ussd_session != null ? ussd_session.selected_odd : 0);
                        int selected_bet_type_id = (ussd_session != null ? ussd_session.selected_bet_type_id : 0);
                        string selected_odd_name = (ussd_session != null ? ussd_session.selected_odd_name : "0");
                        string selected_odd_line = (ussd_session != null ? ussd_session.selected_odd_line : "null");
                        string amount = (ussd_session != null ? ussd_session.amount : "0");
                        int selected_league_id = (ussd_session != null ? ussd_session.selected_league_id : 0);
                        string msgType = "1", opType = "1";
                        int status = 0;
                        string amount_2_pay = (ussd_session != null ? ussd_session.amount_2_pay.ToString() : "0");
                        string bar_code = (ussd_session != null ? ussd_session.bar_code : "0");
                        string selected_subagent_name = (ussd_session != null ? ussd_session.selected_subagent_name : "0");
                        IdoBetUser user = new IdoBetUser();
                        switch (ussd_menu.action_id)
                        {

                            case 55://EnterAmountForSubAgent
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                Int64 pos_trans_id = 0;
                                menu_2_display = Api.CommonFuncations.iDoBetMoov.GetAmountForSubAgentMenu(MSISDN, ussdString, selected_subagent_name, out pos_trans_id, ref lines);
                                if (pos_trans_id > 0)
                                {
                                    ServiceClass subscriber_service1 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                    LoginRequest LoginRequestBody = new LoginRequest()
                                    {
                                        ServiceID = subscriber_service1.service_id,
                                        Password = subscriber_service1.service_password
                                    };
                                    LoginResponse res = Login.DoLogin(LoginRequestBody);
                                    if (res != null)
                                    {
                                        if (res.ResultCode == 1000)
                                        {
                                            string token_id = res.TokenID;
                                            momo_request = new DYAReceiveMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(ussdString),
                                                ServiceID = ussd_menu.service_id,
                                                TokenID = token_id,
                                                TransactionID = "POSTrans_" + pos_trans_id

                                            };
                                        }
                                    }
                                }



                                break;
                            case 54: //SelectedSubAgent
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = Api.CommonFuncations.iDoBetMoov.GetSlectedSubAgentMenu(MSISDN, page_number, ussdString, out selected_subagent_name, ref lines);
                                break;
                            case 53: //AgentMainMenu
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = Api.CommonFuncations.iDoBetMoov.GetAgentMainMenu(MSISDN, page_number, ref lines);
                                break;
                            case 34: //DepositMoney
                                user = Api.CommonFuncations.iDoBetMoov.SearchUserNew(MSISDN, ref lines);
                                menu_2_display = Api.CommonFuncations.iDoBetMoov.GetDepositMoneyMenu(user, ussd_menu, MSISDN, ref lines);
                                break;
                            case 36: //StartDepositMoney
                                user = Api.CommonFuncations.iDoBetMoov.SearchUserNew(MSISDN, ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                menu_2_display = Api.CommonFuncations.iDoBetMoov.GetStartDepositMoneyMenu(service, user, ussd_menu, MSISDN, ussdString, out momo_request, ref lines);
                                break;
                            case 33: //WithdrawMoney
                                user = Api.CommonFuncations.iDoBetMoov.SearchUserNew(MSISDN, ref lines);
                                menu_2_display = Api.CommonFuncations.iDoBetMoov.GetWithdrawMoneyMenu(user, ref lines);
                                break;
                            case 35: //StartWithdrawMoney
                                user = Api.CommonFuncations.iDoBetMoov.SearchUserNew(MSISDN, ref lines);
                                menu_2_display = Api.CommonFuncations.iDoBetMoov.GetStartWithdrawMoneyMenu(user, false, false, false, ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                if (user.isValid == true)
                                {
                                    if (Convert.ToInt32(ussdString) <= user.AvailableForWithdraw && Convert.ToInt32(ussdString) > 0)
                                    {
                                        menu_2_display = Api.CommonFuncations.iDoBetMoov.CheckBeforeWithdrawMenu(service, MSISDN, ref lines);
                                        if (String.IsNullOrEmpty(menu_2_display))
                                        {
                                            //Refund user
                                            ServiceClass subscriber_service1 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                            LoginRequest LoginRequestBody1 = new LoginRequest()
                                            {
                                                ServiceID = service.service_id,
                                                Password = service.service_password
                                            };
                                            LoginResponse res1 = Login.DoLogin(LoginRequestBody1);
                                            if (res1 != null)
                                            {
                                                if (res1.ResultCode == 1000)
                                                {
                                                    string token_id = res1.TokenID;
                                                    DYATransferMoneyRequest momotransfer_request = new DYATransferMoneyRequest()
                                                    {
                                                        MSISDN = Convert.ToInt64(MSISDN),
                                                        Amount = Convert.ToInt32(ussdString),
                                                        ServiceID = service.service_id,
                                                        TokenID = token_id,
                                                        TransactionID = "USSDWithdraw_" + Guid.NewGuid().ToString()
                                                    };
                                                    string postBody = "", response_body = "";
                                                    //bool wd_result = StartWithdraw(user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                    bool do_withdraw = false;
                                                    string code = "";
                                                    if (user.AvailableForWithdraw > 0)
                                                    {
                                                        do_withdraw = true;
                                                        code = Api.CommonFuncations.iDoBetMoov.StartWithdrawNew(user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                    }



                                                    menu_2_display = Api.CommonFuncations.iDoBetMoov.GetStartWithdrawMoneyMenu(user, true, true, false, ref lines);

                                                    if (code == "")
                                                    {
                                                        if (do_withdraw)
                                                        {
                                                            menu_2_display = Api.CommonFuncations.iDoBetMoov.GetStartWithdrawMoneyMenu(user, false, false, false, ref lines);
                                                            string mail_body = "<p><h2>Start Withdraw Moov has failed</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>Json: </b>" + postBody + "<br><b>Response: </b>" + response_body + "<br></p>";
                                                            string mail_subject = "Start Withdraw Moov has failed for user - " + user.id;
                                                            string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                            string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                            string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                            string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                            int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                            string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                            CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                                        }
                                                    }
                                                    else
                                                    {
                                                        DYATransferMoneyResponse momotransfer_response = CommonFuncations.DYATransferMoney.DoTransfer(momotransfer_request);
                                                        if (momotransfer_response.ResultCode == 1000)
                                                        {
                                                            postBody = "";
                                                            response_body = "";
                                                            bool end_withdraw = Api.CommonFuncations.iDoBetMoov.EndWithdrawNew(momotransfer_response.Timestamp, momotransfer_response.TransactionID, true, code, user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                            if (!end_withdraw)
                                                            {
                                                                menu_2_display = Api.CommonFuncations.iDoBetMoov.GetStartWithdrawMoneyMenu(user, false, false, false, ref lines);
                                                                string mail_body = "", mail_subject = "";
                                                                mail_body = "<p><h2>End Withdraw Moov has failed but DYATransfer was ok</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>Request: </b>" + postBody + "<br>Response: " + response_body + "<br></p>";
                                                                mail_subject = "End Withdraw Moov has failed but DYATransfer was ok - " + user.id;
                                                                string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                                string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                                string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                                string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                                int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                                string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                                CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                                            }
                                                            GoogleAnalytics.SendData2GoogleAnalytics("UA-154843894-1", "ussd", Base64.Reverse(MSISDN), System.Web.HttpContext.Current.Request.ServerVariables["REMOTE_ADDR"], "BJ", "event", "Withdraw", "MOMO", "-" + ussdString, "/", ref lines);
                                                        }
                                                        else
                                                        {
                                                            menu_2_display = Api.CommonFuncations.iDoBetMoov.GetStartWithdrawMoneyMenu(user, false, false, false, ref lines);
                                                            postBody = "";
                                                            response_body = "";
                                                            bool end_withdraw = iDoBetMoov.EndWithdrawNew(momotransfer_response.Timestamp, momotransfer_response.TransactionID, false, code, user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                            string mail_body = "", mail_subject = "";
                                                            mail_body = "<p><h2>Withdraw Moov has failed DYATransfer</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>MOMO Response: </b>" + momotransfer_response.ResultCode + " " + momotransfer_response.Description + "<br>User was refunded: " + end_withdraw + "<br><b>Request: </b>" + postBody + "<br><b>Response: </b>" + response_body + "</p>";
                                                            mail_subject = "Withdraw Moov has failed DYATransfer for user - " + user.id;
                                                            string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                            string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                            string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                            string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                            int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                            string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                            CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                                        }
                                                    }



                                                }
                                            }
                                        }


                                    }
                                    else
                                    {
                                        //user has requested more than allowed
                                        menu_2_display = Api.CommonFuncations.iDoBetMoov.GetStartWithdrawMoneyMenu(user, false, false, true, ref lines);
                                    }
                                }
                                break;
                            case 25://CloseXXXBet
                            case 26:
                            case 27:
                                List<Int64> saved_ids = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, ref lines);
                                if (saved_ids != null)
                                {
                                    foreach (Int64 s in saved_ids)
                                    {
                                        DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set amount = " + amount + " where id = " + s, ref lines);
                                    }
                                }
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                //RequestForOrder
                                //bool req_for_order = GetRequestForOrder(ussd_session, ref lines);
                                bool req_for_order = Api.CommonFuncations.iDoBetMoov.PlaceBet(ussd_session, ref lines);

                                if (req_for_order == true)
                                {
                                    menu_2_display = Api.CommonFuncations.iDoBetMoov.GetCloseBet(ussd_session, amount, ref lines);
                                    ServiceClass subscriber_service2 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                    LoginRequest LoginRequestBody = new LoginRequest()
                                    {
                                        ServiceID = subscriber_service2.service_id,
                                        Password = subscriber_service2.service_password
                                    };
                                    LoginResponse res = Login.DoLogin(LoginRequestBody);
                                    if (res != null)
                                    {
                                        if (res.ResultCode == 1000)
                                        {
                                            string token_id = res.TokenID;
                                            momo_request = new DYAReceiveMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(amount),
                                                ServiceID = ussd_menu.service_id,
                                                TokenID = token_id,
                                                TransactionID = user_session_id

                                            };
                                        }
                                    }
                                }
                                else
                                {
                                    menu_2_display = Api.CommonFuncations.iDoBetMoov.GetCloseBetFailed(ref lines);
                                }
                                break;
                            case 22: //ConfirmBetXXX
                            case 23:
                            case 24:
                                amount = ussdString;
                                double num1;
                                bool res_parse = double.TryParse(amount, out num1);
                                if (res_parse == true)
                                {
                                    if (num1 >= 200 && num1 <= 1000000)
                                    {
                                        menu_2_display = Api.CommonFuncations.iDoBetMoov.GetConfirmBet(ussd_session, amount, ref lines);
                                    }
                                    else
                                    {

                                        menu_2_display = Api.CommonFuncations.iDoBetMoov.GetWrongPriceBetMeny(ref lines);
                                        DataLayer.DBQueries.ExecuteQuery("delete from ussd_saved_games where user_session_id = '" + user_session_id + "' order by id desc limit 1", ref lines);
                                    }
                                }
                                odd_page = 0;

                                break;
                            case 19: //PayAndConfirmXXX
                            case 20:
                            case 21:
                                //need to check if user clicks back and then returns to this section.
                                DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + ussdString + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',0, " + service.service_id + ")", ref lines);
                                menu_2_display = Api.CommonFuncations.iDoBetMoov.GetPayAndConfirm(ussd_session, ref lines);
                                odd_page = 0;
                                break;
                            case 32: //ticket status
                                page_number = (page_number == 0 ? 1 : page_number);
                                menu_2_display = Api.CommonFuncations.iDoBetMoov.GetCheckTicketMenu(MSISDN, page_number, ussdString, ref lines);
                                break;
                            case 31: //tickets status by phone
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = Api.CommonFuncations.iDoBetMoov.GetCheckTicketsMenu(MSISDN, page_number, ref lines);
                                break;
                            case 52:
                                menu_2_display = Api.CommonFuncations.iDoBetMoov.GetPayoutBarcodeTicket(ussd_menu, MSISDN, ref lines);
                                if (String.IsNullOrEmpty(menu_2_display))
                                {
                                    msgType = "2";
                                    opType = "2";
                                    is_close = true;
                                    //Refund user
                                    ServiceClass subscriber_service2 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                    LoginRequest LoginRequestBody2 = new LoginRequest()
                                    {
                                        ServiceID = service.service_id,
                                        Password = service.service_password
                                    };
                                    LoginResponse res2 = Login.DoLogin(LoginRequestBody2);
                                    if (res2 != null)
                                    {
                                        if (res2.ResultCode == 1000 && Convert.ToInt32(amount_2_pay) > 0)
                                        {
                                            string token_id = res2.TokenID;
                                            DYATransferMoneyRequest momotransfer_request = new DYATransferMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(amount_2_pay),
                                                ServiceID = service.service_id,
                                                TokenID = token_id,
                                                TransactionID = "POSTicketPayout_" + bar_code
                                            };
                                            DYATransferMoneyResponse momotransfer_response = CommonFuncations.DYATransferMoney.DoTransfer(momotransfer_request);

                                            if (momotransfer_response.ResultCode == 1000)
                                            {
                                                int cashier_id = Api.CommonFuncations.iDoBetMoov.GetCashierID(MSISDN, ref lines);
                                                if (cashier_id > 0)
                                                {
                                                    DataLayer.DBQueries.ExecuteQuery("insert into casheir_transactions (cashier_id, bar_code, total_payout, date_time, dya_id) values(" + cashier_id + ", '" + bar_code + "', " + amount_2_pay + ", now()," + momotransfer_response.TransactionID + ");", ref lines);
                                                }
                                                GoogleAnalytics.SendData2GoogleAnalytics("UA-154843894-1", "ussd", Base64.Reverse(MSISDN), System.Web.HttpContext.Current.Request.ServerVariables["REMOTE_ADDR"], "BJ", "event", "PyoutPOSTicket", "MOMO", "-" + ussdString, "/", ref lines);
                                                //dopayout
                                                bool dopayout_res = Api.CommonFuncations.iDoBetMoov.DoPayOutNew(momotransfer_response.Timestamp, momotransfer_response.TransactionID, bar_code, ref lines);
                                                //bool dopayout_res = iDoBet.DoPayout(bar_code, ref lines);
                                                menu_2_display = "Félicitations, le billet a été remboursé sur votre compte Moov Money.";

                                            }
                                            else
                                            {
                                                menu_2_display = "Le billet n'a pas été remboursé sur votre compte Moov Money." + Environment.NewLine;
                                                menu_2_display = menu_2_display + "Veuillez réessayer";
                                                string mail_body = "<p><h2>Payout Moov has failed DYATransfer</h2><b>BarCode:</b> " + bar_code + "<br><b>Amount: </b>" + amount_2_pay + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>MOMO Response: </b>" + momotransfer_response.ResultCode + " " + momotransfer_response.Description + "<br></p>";
                                                string mail_subject = "POS Ticlet Payout Moov has failed DYATransfer - " + bar_code;
                                                string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                            }
                                        }
                                        else
                                        {
                                            menu_2_display = "option invalide" + Environment.NewLine;
                                            menu_2_display = menu_2_display + "Veuillez réessayer";
                                        }
                                    }
                                }

                                break;
                            case 44: //search ticket
                                menu_2_display = Api.CommonFuncations.iDoBetMoov.GetCheckTicketByBarcodeMenu(MSISDN, ussdString, out amount_2_pay, ref lines);
                                bar_code = ussdString;
                                break;
                            case 39: //add another game
                                if (game_id > 0)
                                {
                                    DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + ussdString + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',0, " + service.service_id + ")", ref lines);
                                    game_id = 0;
                                    selected_odd = 0;
                                    page_number = 1;
                                    odd_page = 0;
                                }
                                menu_2_display = Api.CommonFuncations.iDoBetMoov.GetSportsTypeMenu(ref lines);
                                break;
                            case 41: //Delete and Start Over
                                List<Int64> saved_ids1 = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, ref lines);
                                if (saved_ids1 != null)
                                {
                                    foreach (Int64 s in saved_ids1)
                                    {
                                        DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set status = 3 where id = " + s, ref lines);
                                    }
                                }

                                //DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set status = 3 where user_seesion_id = '" + user_session_id + "'", ref lines);
                                game_id = 0;
                                odd_page = 0;
                                selected_odd = 0;
                                page_number = 1;
                                menu_2_display = Api.CommonFuncations.iDoBetMoov.GetSportsTypeMenu(ref lines);
                                ussd_menu.action_id = 2;
                                break;
                            case 48:
                                menu_2_display = Api.CommonFuncations.iDoBetMoov.GetSoccerLeagueMenu(35, "0", ussd_menu.ussd_id, ref lines, out selected_league_id);
                                break;
                            case 47:
                                menu_2_display = Api.CommonFuncations.iDoBetMoov.GetSoccerLeagueMenu(32, "0", ussd_menu.ussd_id, ref lines, out selected_league_id);
                                break;
                            case 37: //display soccer leagu
                                menu_2_display = Api.CommonFuncations.iDoBetMoov.GetSoccerLeagueMenu(31, "0", ussd_menu.ussd_id, ref lines, out selected_league_id);
                                break;
                            case 49:
                            case 50:
                            case 38://selected league
                            case 28://Start Over
                            case 29:
                            case 30:
                            case 16://AddXXXGame or 
                            case 17:
                            case 18:
                            case 7: //DisplayXXXTopEvents   
                            case 8:
                            case 9:
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && page_number > 0)
                                {
                                    page_number = page_number - 1;
                                }
                                if (ussd_menu.action_id == 28 || ussd_menu.action_id == 29 || ussd_menu.action_id == 30)
                                {
                                    List<Int64> saved_ids2 = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, ref lines);
                                    if (saved_ids2 != null)
                                    {
                                        foreach (Int64 s in saved_ids2)
                                        {
                                            DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set status = 3 where id = " + s, ref lines);
                                        }
                                    }
                                    //DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set status = 3 where user_seesion_id = '"+user_session_id+"'", ref lines);
                                    game_id = 0;
                                    selected_odd = 0;
                                    odd_page = 0;
                                    page_number = 1;

                                }
                                if (ussd_menu.action_id == 16 || ussd_menu.action_id == 17 || ussd_menu.action_id == 18)
                                {
                                    if (game_id > 0)
                                    {
                                        DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + ussdString + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',0, " + service.service_id + ")", ref lines);
                                        game_id = 0;
                                        selected_odd = 0;
                                        page_number = 1;
                                        odd_page = 0;
                                    }

                                }
                                switch (ussd_menu.action_id)
                                {
                                    case 38:
                                        menu_2_display = Api.CommonFuncations.iDoBetMoov.GetEventsMenu(ussdString, 31, page_number, ref lines, out selected_league_id, selected_league_id, ussd_menu);
                                        break;
                                    case 49:
                                        menu_2_display = Api.CommonFuncations.iDoBetMoov.GetEventsMenu(ussdString, 32, page_number, ref lines, out selected_league_id, selected_league_id, ussd_menu);
                                        break;
                                    case 50:
                                        menu_2_display = Api.CommonFuncations.iDoBetMoov.GetEventsMenu(ussdString, 35, page_number, ref lines, out selected_league_id, selected_league_id, ussd_menu);
                                        break;
                                    case 28:
                                    case 16:
                                    case 7:
                                        menu_2_display = Api.CommonFuncations.iDoBetMoov.GetEventsMenu(31, page_number, ref lines);
                                        break;
                                    case 29:
                                    case 17:
                                    case 8:
                                        menu_2_display = Api.CommonFuncations.iDoBetMoov.GetEventsMenu(32, page_number, ref lines);
                                        break;
                                    case 30:
                                    case 18:
                                    case 9:
                                        menu_2_display = Api.CommonFuncations.iDoBetMoov.GetEventsMenu(35, page_number, ref lines);
                                        break;
                                }


                                break;
                            case 10: //DisplayXXXGame
                            case 11:
                            case 12:
                                page_number = (page_number == 0 ? 1 : page_number);
                                selected_odd = 0;
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    odd_page = odd_page + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && odd_page > 0)
                                {
                                    odd_page = odd_page - 1;
                                }
                                switch (ussd_menu.action_id)
                                {
                                    case 10:
                                        menu_2_display = Api.CommonFuncations.iDoBetMoov.GetGameOddsMenu(31, page_number, ussdString, game_id, odd_page, out game_id, selected_league_id, ref lines);
                                        break;
                                    case 11:
                                        menu_2_display = Api.CommonFuncations.iDoBetMoov.GetGameOddsMenu(32, page_number, ussdString, game_id, odd_page, out game_id, selected_league_id, ref lines);
                                        break;
                                    case 12:
                                        menu_2_display = Api.CommonFuncations.iDoBetMoov.GetGameOddsMenu(35, page_number, ussdString, game_id, odd_page, out game_id, selected_league_id, ref lines);
                                        break;
                                }
                                break;
                            case 13: //ConfirmXXXGame (select odd)
                            case 14:
                            case 15:
                                switch (ussd_menu.action_id)
                                {
                                    case 13:
                                        menu_2_display = Api.CommonFuncations.iDoBetMoov.GetConfirmMenu(31, game_id, ussdString, odd_page, out selected_odd, out selected_bet_type_id, out selected_odd_name, out selected_odd_line, ref lines);
                                        break;
                                    case 14:
                                        menu_2_display = Api.CommonFuncations.iDoBetMoov.GetConfirmMenu(32, game_id, ussdString, odd_page, out selected_odd, out selected_bet_type_id, out selected_odd_name, out selected_odd_line, ref lines);
                                        break;
                                    case 15:
                                        menu_2_display = Api.CommonFuncations.iDoBetMoov.GetConfirmMenu(35, game_id, ussdString, odd_page, out selected_odd, out selected_bet_type_id, out selected_odd_name, out selected_odd_line, ref lines);
                                        break;
                                }
                                break;
                        }
                        lines = Add2Log(lines, " page_number = " + page_number, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " game_id = " + game_id, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " odd_page = " + odd_page, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " selected_odd = " + selected_odd, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " amount = " + amount, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " selected_league_id = " + selected_league_id, 100, "ivr_subscribe");
                        result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, menu_2_display, msgType, opType);
                        DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id, selected_odd, selected_bet_type_id,selected_odd_name, selected_odd_line, amount, selected_league_id, amount_2_pay, bar_code, selected_subagent_name) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + "," + status + ", '" + ussdString + "', " + ussd_menu.action_id + ", " + page_number + "," + odd_page + "," + game_id + "," + topic_id + ",'" + user_session_id + "'," + selected_odd + "," + selected_bet_type_id + ",'" + selected_odd_name + "','" + selected_odd_line + "', " + amount + "," + selected_league_id + "," + amount_2_pay + ",'" + bar_code + "','" + selected_subagent_name + "');", ref lines);
                        break;
                }
            }

            return result;
        }

        public static string MoovUSSDBehaviuer_STG(ServiceClass service, string ussdString, string ServiceID, string MSISDN, string linkid, string receiveCB, string senderCB, string serviceCode, USSDMenu ussd_menu, USSDSession ussd_session, out DYAReceiveMoneyRequest momo_request, ref List<LogLines> lines, out string menu_2_display, out bool is_close, string force_session_id)
        {
            momo_request = null;
            menu_2_display = "";
            is_close = false;
            string result = "";
            force_session_id = (String.IsNullOrEmpty(force_session_id) ? Guid.NewGuid().ToString() : force_session_id);
            string user_session_id = (ussd_session == null ? force_session_id : ussd_session.user_seesion_id);
            int topic_id = (ussd_session != null ? ussd_session.topic_id : ussd_menu.topic_id);
            if (!String.IsNullOrEmpty(ussd_menu.menu_2_display))
            {
                menu_2_display = ussd_menu.menu_2_display;
                result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, ussd_menu.menu_2_display, "1", "1");
                DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + ",0, '" + ussdString + "', " + ussd_menu.action_id + ", " + (ussd_session == null ? 0 : ussd_session.page_number) + "," + (ussd_session == null ? 0 : ussd_session.odd_page) + "," + (ussd_session == null ? 0 : ussd_session.game_id) + "," + topic_id + ",'" + user_session_id + "');", ref lines);
            }
            if (ussd_menu.action_id == 3) //close
            {
                menu_2_display = ussd_menu.menu_2_display;
                is_close = true;
                result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, menu_2_display, "2", "2");
                DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + ",1, '" + ussdString + "', " + ussd_menu.action_id + ", " + (ussd_session == null ? 0 : ussd_session.page_number) + "," + (ussd_session == null ? 0 : ussd_session.odd_page) + "," + (ussd_session == null ? 0 : ussd_session.game_id) + "," + topic_id + ",'" + user_session_id + "');", ref lines);
            }

            if (String.IsNullOrEmpty(result))
            {
                switch (topic_id)
                {
                    case 5:
                    case 2:
                    case 7:
                    case 12:
                        int page_number = (ussd_session != null ? ussd_session.page_number : 1);
                        int odd_page = (ussd_session != null ? ussd_session.odd_page : 0);
                        Int64 game_id = (ussd_session != null ? ussd_session.game_id : 0);
                        double selected_odd = (ussd_session != null ? ussd_session.selected_odd : 0);
                        int selected_bet_type_id = (ussd_session != null ? ussd_session.selected_bet_type_id : 0);
                        string selected_odd_name = (ussd_session != null ? ussd_session.selected_odd_name : "0");
                        string selected_odd_line = (ussd_session != null ? ussd_session.selected_odd_line : "null");
                        string amount = (ussd_session != null ? ussd_session.amount : "0");
                        int selected_league_id = (ussd_session != null ? ussd_session.selected_league_id : 0);
                        string msgType = "1", opType = "1";
                        int status = 0;
                        string amount_2_pay = (ussd_session != null ? ussd_session.amount_2_pay.ToString() : "0");
                        string bar_code = (ussd_session != null ? ussd_session.bar_code : "0");
                        string selected_subagent_name = (ussd_session != null ? ussd_session.selected_subagent_name : "0");
                        IdoBetUser user = new IdoBetUser();
                        switch (ussd_menu.action_id)
                        {

                            case 55://EnterAmountForSubAgent
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                Int64 pos_trans_id = 0;
                                menu_2_display = Api.CommonFuncations.iDoBetMoovQA.GetAmountForSubAgentMenu(MSISDN, ussdString, selected_subagent_name, out pos_trans_id, ref lines);
                                if (pos_trans_id > 0)
                                {
                                    ServiceClass subscriber_service1 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                    LoginRequest LoginRequestBody = new LoginRequest()
                                    {
                                        ServiceID = subscriber_service1.service_id,
                                        Password = subscriber_service1.service_password
                                    };
                                    LoginResponse res = Login.DoLogin(LoginRequestBody);
                                    if (res != null)
                                    {
                                        if (res.ResultCode == 1000)
                                        {
                                            string token_id = res.TokenID;
                                            momo_request = new DYAReceiveMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(ussdString),
                                                ServiceID = ussd_menu.service_id,
                                                TokenID = token_id,
                                                TransactionID = "POSTrans_" + pos_trans_id

                                            };
                                        }
                                    }
                                }



                                break;
                            case 54:
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = Api.CommonFuncations.iDoBetMoovQA.GetSlectedSubAgentMenu(MSISDN, page_number, ussdString, out selected_subagent_name, ref lines);
                                break;
                            case 53:
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = Api.CommonFuncations.iDoBetMoovQA.GetAgentMainMenu(MSISDN, page_number, ref lines);
                                break;
                            case 34: //DepositMoney
                                user = Api.CommonFuncations.iDoBetMoovQA.SearchUserNew(MSISDN, ref lines);
                                menu_2_display = Api.CommonFuncations.iDoBetMoovQA.GetDepositMoneyMenu(user, ussd_menu, MSISDN, ref lines);
                                break;
                            case 36: //StartDepositMoney
                                user = Api.CommonFuncations.iDoBetMoovQA.SearchUserNew(MSISDN, ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                menu_2_display = Api.CommonFuncations.iDoBetMoovQA.GetStartDepositMoneyMenu(service, user, ussd_menu, MSISDN, ussdString, out momo_request, ref lines);
                                break;
                            case 33: //WithdrawMoney
                                user = Api.CommonFuncations.iDoBetMoovQA.SearchUserNew(MSISDN, ref lines);
                                menu_2_display = Api.CommonFuncations.iDoBetMoovQA.GetWithdrawMoneyMenu(user, ref lines);
                                break;
                            case 35: //StartWithdrawMoney
                                user = Api.CommonFuncations.iDoBetMoovQA.SearchUserNew(MSISDN, ref lines);
                                menu_2_display = Api.CommonFuncations.iDoBetMoovQA.GetStartWithdrawMoneyMenu(user, false, false, false, ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                if (user.isValid == true)
                                {
                                    if (Convert.ToInt32(ussdString) <= user.AvailableForWithdraw && Convert.ToInt32(ussdString) > 0)
                                    {
                                        menu_2_display = Api.CommonFuncations.iDoBetMoovQA.CheckBeforeWithdrawMenu(service, MSISDN, ref lines);
                                        if (String.IsNullOrEmpty(menu_2_display))
                                        {
                                            //Refund user
                                            ServiceClass subscriber_service1 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                            LoginRequest LoginRequestBody1 = new LoginRequest()
                                            {
                                                ServiceID = service.service_id,
                                                Password = service.service_password
                                            };
                                            LoginResponse res1 = Login.DoLogin(LoginRequestBody1);
                                            if (res1 != null)
                                            {
                                                if (res1.ResultCode == 1000)
                                                {
                                                    string token_id = res1.TokenID;
                                                    DYATransferMoneyRequest momotransfer_request = new DYATransferMoneyRequest()
                                                    {
                                                        MSISDN = Convert.ToInt64(MSISDN),
                                                        Amount = Convert.ToInt32(ussdString),
                                                        ServiceID = service.service_id,
                                                        TokenID = token_id,
                                                        TransactionID = "USSDWithdraw_" + Guid.NewGuid().ToString()
                                                    };
                                                    string postBody = "", response_body = "";
                                                    //bool wd_result = StartWithdraw(user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                    bool do_withdraw = false;
                                                    string code = "";
                                                    if (user.AvailableForWithdraw > 0)
                                                    {
                                                        do_withdraw = true;
                                                        code = Api.CommonFuncations.iDoBetMoovQA.StartWithdrawNew(user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                    }
                                                        


                                                    menu_2_display = Api.CommonFuncations.iDoBetMoovQA.GetStartWithdrawMoneyMenu(user, true, true, false, ref lines);

                                                    if (code == "")
                                                    {
                                                        if (do_withdraw)
                                                        {
                                                            menu_2_display = Api.CommonFuncations.iDoBetMoovQA.GetStartWithdrawMoneyMenu(user, false, false, false, ref lines);
                                                            string mail_body = "<p><h2>Start Withdraw Moov has failed</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>Json: </b>" + postBody + "<br><b>Response: </b>" + response_body + "<br></p>";
                                                            string mail_subject = "Start Withdraw Moov has failed for user - " + user.id;
                                                            string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                            string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                            string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                            string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                            int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                            string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                            CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                                        }
                                                       
                                                    }
                                                    else
                                                    {
                                                        DYATransferMoneyResponse momotransfer_response = CommonFuncations.DYATransferMoney.DoTransfer(momotransfer_request);
                                                        if (momotransfer_response.ResultCode == 1000)
                                                        {
                                                            postBody = "";
                                                            response_body = "";
                                                            bool end_withdraw = Api.CommonFuncations.iDoBetMoovQA.EndWithdrawNew(momotransfer_response.Timestamp, momotransfer_response.TransactionID, true, code, user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                            if (!end_withdraw)
                                                            {
                                                                menu_2_display = Api.CommonFuncations.iDoBetMoovQA.GetStartWithdrawMoneyMenu(user, false, false, false, ref lines);
                                                                string mail_body = "", mail_subject = "";
                                                                mail_body = "<p><h2>End Withdraw Moov has failed but DYATransfer was ok</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>Request: </b>" + postBody + "<br>Response: " + response_body + "<br></p>";
                                                                mail_subject = "End Withdraw Moov has failed but DYATransfer was ok - " + user.id;
                                                                string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                                string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                                string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                                string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                                int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                                string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                                CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                                            }
                                                            GoogleAnalytics.SendData2GoogleAnalytics("UA-154843894-1", "ussd", Base64.Reverse(MSISDN), System.Web.HttpContext.Current.Request.ServerVariables["REMOTE_ADDR"], "BJ", "event", "Withdraw", "MOMO", "-" + ussdString, "/", ref lines);
                                                        }
                                                        else
                                                        {
                                                            menu_2_display = Api.CommonFuncations.iDoBetMoovQA.GetStartWithdrawMoneyMenu(user, false, false, false, ref lines);
                                                            postBody = "";
                                                            response_body = "";
                                                            bool end_withdraw = iDoBetMoovQA.EndWithdrawNew(momotransfer_response.Timestamp, momotransfer_response.TransactionID, false, code, user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                            string mail_body = "", mail_subject = "";
                                                            mail_body = "<p><h2>Withdraw Moov has failed DYATransfer</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>MOMO Response: </b>" + momotransfer_response.ResultCode + " " + momotransfer_response.Description + "<br>User was refunded: " + end_withdraw + "<br><b>Request: </b>" + postBody + "<br><b>Response: </b>" + response_body + "</p>";
                                                            mail_subject = "Withdraw Moov has failed DYATransfer for user - " + user.id;
                                                            string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                            string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                            string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                            string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                            int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                            string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                            CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                                        }
                                                    }



                                                }
                                            }
                                        }


                                    }
                                    else
                                    {
                                        //user has requested more than allowed
                                        menu_2_display = Api.CommonFuncations.iDoBetMoovQA.GetStartWithdrawMoneyMenu(user, false, false, true, ref lines);
                                    }
                                }
                                break;
                            case 25://CloseXXXBet
                            case 26:
                            case 27:
                                List<Int64> saved_ids = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, ref lines);
                                if (saved_ids != null)
                                {
                                    foreach (Int64 s in saved_ids)
                                    {
                                        DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set amount = " + amount + " where id = " + s, ref lines);
                                    }
                                }
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                //RequestForOrder
                                //bool req_for_order = GetRequestForOrder(ussd_session, ref lines);
                                bool req_for_order = Api.CommonFuncations.iDoBetMoovQA.PlaceBet(ussd_session, ref lines);

                                if (req_for_order == true)
                                {
                                    menu_2_display = Api.CommonFuncations.iDoBetMoovQA.GetCloseBet(ussd_session, amount, ref lines);
                                    ServiceClass subscriber_service2 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                    LoginRequest LoginRequestBody = new LoginRequest()
                                    {
                                        ServiceID = subscriber_service2.service_id,
                                        Password = subscriber_service2.service_password
                                    };
                                    LoginResponse res = Login.DoLogin(LoginRequestBody);
                                    if (res != null)
                                    {
                                        if (res.ResultCode == 1000)
                                        {
                                            string token_id = res.TokenID;
                                            momo_request = new DYAReceiveMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(amount),
                                                ServiceID = ussd_menu.service_id,
                                                TokenID = token_id,
                                                TransactionID = user_session_id

                                            };
                                        }
                                    }
                                }
                                else
                                {
                                    menu_2_display = Api.CommonFuncations.iDoBetMoovQA.GetCloseBetFailed(ref lines);
                                }
                                break;
                            case 22: //ConfirmBetXXX
                            case 23:
                            case 24:
                                amount = ussdString;
                                double num1;
                                bool res_parse = double.TryParse(amount, out num1);
                                if (res_parse == true)
                                {
                                    if (num1 >= 200 && num1 <= 1000000)
                                    {
                                        menu_2_display = Api.CommonFuncations.iDoBetMoovQA.GetConfirmBet(ussd_session, amount, ref lines);
                                    }
                                    else
                                    {

                                        menu_2_display = Api.CommonFuncations.iDoBetMoovQA.GetWrongPriceBetMeny(ref lines);
                                        DataLayer.DBQueries.ExecuteQuery("delete from ussd_saved_games where user_session_id = '" + user_session_id + "' order by id desc limit 1", ref lines);
                                    }
                                }
                                odd_page = 0;

                                break;
                            case 19: //PayAndConfirmXXX
                            case 20:
                            case 21:
                                //need to check if user clicks back and then returns to this section.
                                DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + ussdString + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',0, " + service.service_id + ")", ref lines);
                                menu_2_display = Api.CommonFuncations.iDoBetMoovQA.GetPayAndConfirm(ussd_session, ref lines);
                                odd_page = 0;
                                break;
                            case 32: //ticket status
                                page_number = (page_number == 0 ? 1 : page_number);
                                menu_2_display = Api.CommonFuncations.iDoBetMoovQA.GetCheckTicketMenu(MSISDN, page_number, ussdString, ref lines);
                                break;
                            case 31: //tickets status by phone
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = Api.CommonFuncations.iDoBetMoovQA.GetCheckTicketsMenu(MSISDN, page_number, ref lines);
                                break;
                            case 52:
                                menu_2_display = Api.CommonFuncations.iDoBetMoovQA.GetPayoutBarcodeTicket(ussd_menu, MSISDN, ref lines);
                                if (String.IsNullOrEmpty(menu_2_display))
                                {
                                    msgType = "2";
                                    opType = "2";
                                    is_close = true;
                                    //Refund user
                                    ServiceClass subscriber_service2 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                    LoginRequest LoginRequestBody2 = new LoginRequest()
                                    {
                                        ServiceID = service.service_id,
                                        Password = service.service_password
                                    };
                                    LoginResponse res2 = Login.DoLogin(LoginRequestBody2);
                                    if (res2 != null)
                                    {
                                        if (res2.ResultCode == 1000)
                                        {
                                            string token_id = res2.TokenID;
                                            DYATransferMoneyRequest momotransfer_request = new DYATransferMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(amount_2_pay),
                                                ServiceID = service.service_id,
                                                TokenID = token_id,
                                                TransactionID = "POSTicketPayout_" + bar_code
                                            };
                                            DYATransferMoneyResponse momotransfer_response = CommonFuncations.DYATransferMoney.DoTransfer(momotransfer_request);

                                            if (momotransfer_response.ResultCode == 1000)
                                            {
                                                int cashier_id = Api.CommonFuncations.iDoBetMoovQA.GetCashierID(MSISDN, ref lines);
                                                if (cashier_id > 0)
                                                {
                                                    DataLayer.DBQueries.ExecuteQuery("insert into casheir_transactions (cashier_id, bar_code, total_payout, date_time, dya_id) values(" + cashier_id + ", '" + bar_code + "', " + amount_2_pay + ", now()," + momotransfer_response.TransactionID + ");", ref lines);
                                                }
                                                GoogleAnalytics.SendData2GoogleAnalytics("UA-154843894-1", "ussd", Base64.Reverse(MSISDN), System.Web.HttpContext.Current.Request.ServerVariables["REMOTE_ADDR"], "BJ", "event", "PyoutPOSTicket", "MOMO", "-" + ussdString, "/", ref lines);
                                                //dopayout
                                                bool dopayout_res = Api.CommonFuncations.iDoBetMoovQA.DoPayOutNew(momotransfer_response.Timestamp, momotransfer_response.TransactionID, bar_code, ref lines);
                                                //bool dopayout_res = iDoBet.DoPayout(bar_code, ref lines);
                                                menu_2_display = "Félicitations, le billet a été remboursé sur votre compte Moov Money.";

                                            }
                                            else
                                            {
                                                menu_2_display = "Le billet n'a pas été remboursé sur votre compte Moov Money." + Environment.NewLine;
                                                menu_2_display = menu_2_display + "Veuillez réessayer";
                                                string mail_body = "<p><h2>Payout Moov has failed DYATransfer</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>MOMO Response: </b>" + momotransfer_response.ResultCode + " " + momotransfer_response.Description + "<br></p>";
                                                string mail_subject = "Payout Moov has failed DYATransfer for user - " + user.id;
                                                string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                            }
                                        }
                                    }
                                }

                                break;
                            case 44: //search ticket
                                menu_2_display = Api.CommonFuncations.iDoBetMoovQA.GetCheckTicketByBarcodeMenu(MSISDN, ussdString, out amount_2_pay, ref lines);
                                bar_code = ussdString;
                                break;
                            case 39: //add another game
                                if (game_id > 0)
                                {
                                    DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + ussdString + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',0, " + service.service_id + ")", ref lines);
                                    game_id = 0;
                                    selected_odd = 0;
                                    page_number = 1;
                                    odd_page = 0;
                                }
                                menu_2_display = Api.CommonFuncations.iDoBetMoovQA.GetSportsTypeMenu(ref lines);
                                break;
                            case 41: //Delete and Start Over
                                List<Int64> saved_ids1 = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, ref lines);
                                if (saved_ids1 != null)
                                {
                                    foreach (Int64 s in saved_ids1)
                                    {
                                        DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set status = 3 where id = " + s, ref lines);
                                    }
                                }

                                //DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set status = 3 where user_seesion_id = '" + user_session_id + "'", ref lines);
                                game_id = 0;
                                odd_page = 0;
                                selected_odd = 0;
                                page_number = 1;
                                menu_2_display = Api.CommonFuncations.iDoBetMoovQA.GetSportsTypeMenu(ref lines);
                                ussd_menu.action_id = 2;
                                break;
                            case 48:
                                menu_2_display = Api.CommonFuncations.iDoBetMoovQA.GetSoccerLeagueMenu(35, "0", ussd_menu.ussd_id, ref lines, out selected_league_id);
                                break;
                            case 47:
                                menu_2_display = Api.CommonFuncations.iDoBetMoovQA.GetSoccerLeagueMenu(32, "0", ussd_menu.ussd_id, ref lines, out selected_league_id);
                                break;
                            case 37: //display soccer leagu
                                menu_2_display = Api.CommonFuncations.iDoBetMoovQA.GetSoccerLeagueMenu(31, "0", ussd_menu.ussd_id, ref lines, out selected_league_id);
                                break;
                            case 49:
                            case 50:
                            case 38://selected league
                            case 28://Start Over
                            case 29:
                            case 30:
                            case 16://AddXXXGame or 
                            case 17:
                            case 18:
                            case 7: //DisplayXXXTopEvents   
                            case 8:
                            case 9:
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && page_number > 0)
                                {
                                    page_number = page_number - 1;
                                }
                                if (ussd_menu.action_id == 28 || ussd_menu.action_id == 29 || ussd_menu.action_id == 30)
                                {
                                    List<Int64> saved_ids2 = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, ref lines);
                                    if (saved_ids2 != null)
                                    {
                                        foreach (Int64 s in saved_ids2)
                                        {
                                            DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set status = 3 where id = " + s, ref lines);
                                        }
                                    }
                                    //DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set status = 3 where user_seesion_id = '"+user_session_id+"'", ref lines);
                                    game_id = 0;
                                    selected_odd = 0;
                                    odd_page = 0;
                                    page_number = 1;

                                }
                                if (ussd_menu.action_id == 16 || ussd_menu.action_id == 17 || ussd_menu.action_id == 18)
                                {
                                    if (game_id > 0)
                                    {
                                        DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + ussdString + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',0, " + service.service_id + ")", ref lines);
                                        game_id = 0;
                                        selected_odd = 0;
                                        page_number = 1;
                                        odd_page = 0;
                                    }

                                }
                                switch (ussd_menu.action_id)
                                {
                                    case 38:
                                        menu_2_display = Api.CommonFuncations.iDoBetMoovQA.GetEventsMenu(ussdString, 31, page_number, ref lines, out selected_league_id, selected_league_id, ussd_menu);
                                        break;
                                    case 49:
                                        menu_2_display = Api.CommonFuncations.iDoBetMoovQA.GetEventsMenu(ussdString, 32, page_number, ref lines, out selected_league_id, selected_league_id, ussd_menu);
                                        break;
                                    case 50:
                                        menu_2_display = Api.CommonFuncations.iDoBetMoovQA.GetEventsMenu(ussdString, 35, page_number, ref lines, out selected_league_id, selected_league_id, ussd_menu);
                                        break;
                                    case 28:
                                    case 16:
                                    case 7:
                                        menu_2_display = Api.CommonFuncations.iDoBetMoovQA.GetEventsMenu(31, page_number, ref lines);
                                        break;
                                    case 29:
                                    case 17:
                                    case 8:
                                        menu_2_display = Api.CommonFuncations.iDoBetMoovQA.GetEventsMenu(32, page_number, ref lines);
                                        break;
                                    case 30:
                                    case 18:
                                    case 9:
                                        menu_2_display = Api.CommonFuncations.iDoBetMoovQA.GetEventsMenu(35, page_number, ref lines);
                                        break;
                                }


                                break;
                            case 10: //DisplayXXXGame
                            case 11:
                            case 12:
                                page_number = (page_number == 0 ? 1 : page_number);
                                selected_odd = 0;
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    odd_page = odd_page + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && odd_page > 0)
                                {
                                    odd_page = odd_page - 1;
                                }
                                switch (ussd_menu.action_id)
                                {
                                    case 10:
                                        menu_2_display = Api.CommonFuncations.iDoBetMoovQA.GetGameOddsMenu(31, page_number, ussdString, game_id, odd_page, out game_id, selected_league_id, ref lines);
                                        break;
                                    case 11:
                                        menu_2_display = Api.CommonFuncations.iDoBetMoovQA.GetGameOddsMenu(32, page_number, ussdString, game_id, odd_page, out game_id, selected_league_id, ref lines);
                                        break;
                                    case 12:
                                        menu_2_display = Api.CommonFuncations.iDoBetMoovQA.GetGameOddsMenu(35, page_number, ussdString, game_id, odd_page, out game_id, selected_league_id, ref lines);
                                        break;
                                }
                                break;
                            case 13: //ConfirmXXXGame (select odd)
                            case 14:
                            case 15:
                                switch (ussd_menu.action_id)
                                {
                                    case 13:
                                        menu_2_display = Api.CommonFuncations.iDoBetMoovQA.GetConfirmMenu(31, game_id, ussdString, odd_page, out selected_odd, out selected_bet_type_id, out selected_odd_name, out selected_odd_line, ref lines);
                                        break;
                                    case 14:
                                        menu_2_display = Api.CommonFuncations.iDoBetMoovQA.GetConfirmMenu(32, game_id, ussdString, odd_page, out selected_odd, out selected_bet_type_id, out selected_odd_name, out selected_odd_line, ref lines);
                                        break;
                                    case 15:
                                        menu_2_display = Api.CommonFuncations.iDoBetMoovQA.GetConfirmMenu(35, game_id, ussdString, odd_page, out selected_odd, out selected_bet_type_id, out selected_odd_name, out selected_odd_line, ref lines);
                                        break;
                                }
                                break;
                        }
                        lines = Add2Log(lines, " page_number = " + page_number, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " game_id = " + game_id, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " odd_page = " + odd_page, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " selected_odd = " + selected_odd, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " amount = " + amount, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " selected_league_id = " + selected_league_id, 100, "ivr_subscribe");
                        result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, menu_2_display, msgType, opType);
                        DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id, selected_odd, selected_bet_type_id,selected_odd_name, selected_odd_line, amount, selected_league_id, amount_2_pay, bar_code, selected_subagent_name) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + "," + status + ", '" + ussdString + "', " + ussd_menu.action_id + ", " + page_number + "," + odd_page + "," + game_id + "," + topic_id + ",'" + user_session_id + "'," + selected_odd + "," + selected_bet_type_id + ",'" + selected_odd_name + "','" + selected_odd_line + "', " + amount + "," + selected_league_id + "," + amount_2_pay + ",'" + bar_code + "','" + selected_subagent_name + "');", ref lines);
                        break;
                }
            }

            return result;
        }

        
        public static string MTNCongoUSSDBehaviuer105(ServiceClass service, string MSISDN, string UserInput, string ActionID, string RapidosUserInput, string RapidosPrice, USSDMenu ussd_menu, USSDSession ussd_session, out DYAReceiveMoneyRequest momo_request, ref List<LogLines> lines, string force_session_id, bool is_dynamicarg)
        {
            momo_request = null;
            string result = "\"arguments\": [{\"key\":{ \"value\": \"Status\" }, \"value\": { \"value\": \"Success\"} }, ";
            force_session_id = (String.IsNullOrEmpty(force_session_id) ? Guid.NewGuid().ToString() : force_session_id);
            string user_session_id = (ussd_session == null ? force_session_id : ussd_session.user_seesion_id);
            int topic_id = (ussd_session != null ? ussd_session.topic_id : ussd_menu.topic_id);
            int game_id = 0;
            switch (Convert.ToInt32(ActionID))
            {
                case 75:
                case 76:
                case 77:
                    bool placebet1 = false;
                    double num3;
                    int max_bet = 0;
                    bool check_amount = double.TryParse(RapidosPrice, out num3);
                    if (check_amount == true)
                    {
                        switch (Convert.ToInt32(ActionID))
                        {
                            case 75:
                                game_id = 58;
                                max_bet = 20000;
                                break;
                            case 76:
                                game_id = 59;
                                max_bet = 4000;
                                break;
                            case 77:
                                game_id = 60;
                                max_bet = 200;
                                break;
                        }
                        if (num3 >= 100 && num3 <= max_bet)
                        {
                            if (is_dynamicarg)
                            {
                                DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", 0, '" + RapidosUserInput + "', now(), 0,'" + user_session_id + "',0, 0, '0', '0'," + num3 + ", " + service.service_id + ")", ref lines);
                            }
                            
                            placebet1 = true;
                        }
                        else
                        {

                            DataLayer.DBQueries.ExecuteQuery("delete from ussd_saved_games where user_session_id = '" + user_session_id + "' order by id desc limit 1", ref lines);
                        }
                    }
                    if (placebet1)
                    {
                        result = result + "{\"key\":{ \"value\": \"Description\" }, \"value\": { \"value\": \"Information is Recorded\"} }],";
                        if (is_dynamicarg)
                        {
                            LoginRequest LoginRequestBody = new LoginRequest()
                            {
                                ServiceID = service.service_id,
                                Password = service.service_password
                            };
                            LoginResponse res = Login.DoLogin(LoginRequestBody);
                            if (res != null)
                            {
                                if (res.ResultCode == 1000)
                                {
                                    string token_id = res.TokenID;
                                    momo_request = new DYAReceiveMoneyRequest()
                                    {
                                        MSISDN = Convert.ToInt64(MSISDN),
                                        Amount = Convert.ToInt32(RapidosPrice),
                                        ServiceID = service.service_id,
                                        TokenID = token_id,
                                        TransactionID = "Rapidos_" + user_session_id
                                    };
                                }

                            }
                        }
                        
                    }

                    break;
            }




            return result;

        }

        private static string SubscribeOrUnSubscribe(ref List<LogLines> lines, int serviceID, string MSISDN, int action_id)
        {
            string output = "Thank you";

            ServiceClass subscriber_service = GetServiceByServiceID(serviceID, ref lines);
            LoginRequest LoginRequestBody = new LoginRequest()
            {
                ServiceID = subscriber_service.service_id,
                Password = subscriber_service.service_password
            };
            LoginResponse res = Login.DoLogin(LoginRequestBody);

            if (res == null || res.ResultCode != 1000) throw new Exception($"login failed for serviceID={serviceID}");
            else
            {
                string token_id = res.TokenID;
                SubscribeRequest subscribe_RequestBody = new SubscribeRequest()
                {
                    ServiceID = subscriber_service.service_id,
                    TokenID = token_id,
                    MSISDN = Convert.ToInt64(MSISDN),
                    TransactionID = "ussd_mo",
                    ActivationID = "3"
                };

                SubscribeResponse subscribe_response    = action_id == 4
                                                        ? Subscribe.DoSubscribe(subscribe_RequestBody)
                                                        : UnSubscribe.DoUnSubscribe(subscribe_RequestBody)
                                                        ;

                if (subscribe_response == null) throw new Exception($"repsonse is null");
                else
                {
                    lines = Add2Log(lines, " ResultCode = " + subscribe_response.ResultCode + ", Description = " + subscribe_response.Description, 100, "");

                    output  = action_id == 4
                            ? Api.handlers.ussd_mo.SubscribeMultiServiceMenu(subscriber_service.service_id, subscribe_response.ResultCode, ref lines)
                            : "demande de désinscription prise en compte."
                            ;
                }
            }
            return output;
        }

        public static string MTNCongoUSSDBehaviuer(ServiceClass service, string ussdString, string ServiceID, string MSISDN, string linkid, string receiveCB, string senderCB, string serviceCode, USSDMenu ussd_menu, USSDSession ussd_session, out DYAReceiveMoneyRequest momo_request, ref List<LogLines> lines, out string menu_2_display, out bool is_close, string force_session_id)
        {
            momo_request = null;
            menu_2_display = "";
            is_close = false;
            string result = "";
            force_session_id = (String.IsNullOrEmpty(force_session_id) ? Guid.NewGuid().ToString() : force_session_id);
            string user_session_id = (ussd_session == null ? force_session_id : ussd_session.user_seesion_id);
            int topic_id = (ussd_session != null ? ussd_session.topic_id : ussd_menu.topic_id);
            if (!String.IsNullOrEmpty(ussd_menu.menu_2_display))
            {
                menu_2_display = ussd_menu.menu_2_display;
                result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, ussd_menu.menu_2_display, "1", "1");
                DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + ",0, '" + ussdString + "', " + ussd_menu.action_id + ", " + (ussd_session == null ? 0 : ussd_session.page_number) + "," + (ussd_session == null ? 0 : ussd_session.odd_page) + "," + (ussd_session == null ? 0 : ussd_session.game_id) + "," + topic_id + ",'" + user_session_id + "');", "DBConnectionString_161", ref lines);
            }
            if (ussd_menu.action_id == 3) //close
            {
                menu_2_display = ussd_menu.menu_2_display;
                is_close = true;
                result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, menu_2_display, "2", "2");
                DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + ",1, '" + ussdString + "', " + ussd_menu.action_id + ", " + (ussd_session == null ? 0 : ussd_session.page_number) + "," + (ussd_session == null ? 0 : ussd_session.odd_page) + "," + (ussd_session == null ? 0 : ussd_session.game_id) + "," + topic_id + ",'" + user_session_id + "');", "DBConnectionString_161", ref lines);
            }

            if (ussd_menu.action_id == 4 || ussd_menu.action_id == 5 || ussd_menu.action_id == 60) //subscribe or unsubscribe
            {

                menu_2_display = SubscribeOrUnSubscribe(ref lines, ussd_menu.service_id, MSISDN, ussd_menu.action_id);

                // if unsubscribe all, then also remove from the other servicves
                if (ussd_menu.action_id == 60)
                {
                    switch (ussd_menu.service_id)
                    {
                        case 939:       // MTN IC lucky number
                            SubscribeOrUnSubscribe(ref lines, 938, MSISDN, ussd_menu.action_id);
                            SubscribeOrUnSubscribe(ref lines, 937, MSISDN, ussd_menu.action_id);
                            break;

                        case 1186:
                            SubscribeOrUnSubscribe(ref lines, 1185, MSISDN, ussd_menu.action_id);
                            SubscribeOrUnSubscribe(ref lines, 1184, MSISDN, ussd_menu.action_id);
                            break;
                    }
                }
                
                DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + ",1, '" + ussdString + "', " + ussd_menu.action_id + ", " + (ussd_session == null ? 0 : ussd_session.page_number) + "," + (ussd_session == null ? 0 : ussd_session.odd_page) + "," + (ussd_session == null ? 0 : ussd_session.game_id) + "," + topic_id + ",'" + user_session_id + "');", "DBConnectionString_161", ref lines);
            }

            // Handle information display actions - check by action name from logs
            if (ussd_menu.action_name == "Display35" || ussd_menu.action_id == 190)
            {
                // This is the "info sur Num d'Or" menu - keep session open as requested
                // Add debugging to see what's in the menu
                lines = Add2Log(lines, "Display35 Handler: menu_id=" + ussd_menu.menu_id + ", menu_2_display='" + ussd_menu.menu_2_display + "'", 100, "MTNCongoUSSDBehaviuer");
                
                // If menu_2_display is empty, set a fallback message
                if (String.IsNullOrEmpty(menu_2_display) || String.IsNullOrEmpty(ussd_menu.menu_2_display))
                {
                    menu_2_display = "vous recevrez un SMS sous peu" + Environment.NewLine + "0. Retour";
                    lines = Add2Log(lines, "Display35: Using fallback message", 100, "MTNCongoUSSDBehaviuer");
                }
                
                // Update session tracking with status = 0 (continue session)
                DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + ",0, '" + ussdString + "', " + ussd_menu.action_id + ", " + (ussd_session == null ? 0 : ussd_session.page_number) + "," + (ussd_session == null ? 0 : ussd_session.odd_page) + "," + (ussd_session == null ? 0 : ussd_session.game_id) + "," + topic_id + ",'" + user_session_id + "');", "DBConnectionString_161", ref lines);
            }
            else if (ussd_menu.action_name == "Display36" || ussd_menu.action_id == 191)
            {
                // This is the "tirages" menu - continue session
                lines = Add2Log(lines, "Display36 Handler: menu_id=" + ussd_menu.menu_id + ", menu_2_display='" + ussd_menu.menu_2_display + "'", 100, "MTNCongoUSSDBehaviuer");
                
                // If menu_2_display is empty, set a fallback message
                if (String.IsNullOrEmpty(menu_2_display) || String.IsNullOrEmpty(ussd_menu.menu_2_display))
                {
                    menu_2_display = "vous recevrez un SMS sous peu" + Environment.NewLine + "0. Retour";
                    lines = Add2Log(lines, "Display36: Using fallback message", 100, "MTNCongoUSSDBehaviuer");
                }
                
                DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + ",0, '" + ussdString + "', " + ussd_menu.action_id + ", " + (ussd_session == null ? 0 : ussd_session.page_number) + "," + (ussd_session == null ? 0 : ussd_session.odd_page) + "," + (ussd_session == null ? 0 : ussd_session.game_id) + "," + topic_id + ",'" + user_session_id + "');", "DBConnectionString_161", ref lines);
            }
            if (String.IsNullOrEmpty(result))
            {
                switch (topic_id)
                {
                    case 5:
                    case 2:
                    case 7:
                    case 12:
                        int page_number = (ussd_session != null ? ussd_session.page_number : 1);
                        string rapidos_string = (ussd_session != null ? ussd_session.rapidos_string : "0");
                        int odd_page = (ussd_session != null ? ussd_session.odd_page : 0);
                        Int64 game_id = (ussd_session != null ? ussd_session.game_id : 0);
                        double selected_odd = (ussd_session != null ? ussd_session.selected_odd : 0);
                        int selected_bet_type_id = (ussd_session != null ? ussd_session.selected_bet_type_id : 0);
                        string selected_odd_name = (ussd_session != null ? ussd_session.selected_odd_name : "0");
                        string selected_odd_line = (ussd_session != null ? ussd_session.selected_odd_line : "null");
                        string amount = (ussd_session != null ? ussd_session.amount : "0");
                        int selected_league_id = (ussd_session != null ? ussd_session.selected_league_id : 0);
                        string msgType = "1", opType = "1";
                        int status = 0;
                        string amount_2_pay = (ussd_session != null ? ussd_session.amount_2_pay.ToString() : "0");
                        string bar_code = (ussd_session != null ? ussd_session.bar_code : "0");
                        string selected_subagent_name = (ussd_session != null ? ussd_session.selected_subagent_name : "0");
                        IdoBetUser user = new IdoBetUser();
                        switch (ussd_menu.action_id)
                        {

                            case 109:
                            case 110:
                            case 111:
                            case 112:
                            case 113:
                            case 114:
                            case 115:
                            case 116:
                            case 117:
                            case 118:
                            case 119://enter dusun lottery numbers
                                String[] strlist = new string[] { };
                                bool validate_num_dusan = Api.CommonFuncations.iDoBetMTNCongo.ValidateDusanLottoInput(ussdString, ussd_menu.action_id, out strlist, ref lines);
                                if (validate_num_dusan)
                                {
                                    menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetConfirmDusanLottoMenu(ussd_menu.action_id, ussdString, out game_id, ref lines);
                                    rapidos_string = ussdString;
                                }
                                else
                                {
                                    menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.WrongRapidosNumber();
                                }
                                break;
                            case 120:
                            case 121:
                            case 122:
                            case 123:
                            case 124:
                            case 125:
                            case 126:
                            case 127:
                            case 128:
                            case 129:
                            case 130://enter dusan lottery amount
                                switch (ussd_menu.action_id)
                                {
                                    case 120:
                                        game_id = 4;
                                        break;
                                    case 121:
                                        game_id = 3;
                                        break;
                                    case 122:
                                        game_id = 2;
                                        break;
                                    case 123:
                                        game_id = 1;
                                        break;
                                    case 124:
                                        game_id = 11;
                                        break;
                                    case 125:
                                        game_id = 10;
                                        break;
                                    case 126:
                                        game_id = 9;
                                        break;
                                    case 127:
                                        game_id = 5;
                                        break;
                                    case 128:
                                        game_id = 6;
                                        break;
                                    case 129:
                                        game_id = 7;
                                        break;
                                    case 130:
                                        game_id = 8;
                                        break;
                                }
                                ServiceClass lotto_service = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games_cg (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + rapidos_string + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "'," + ussdString + ", " + ussd_menu.service_id + ")", "DBConnectionString_161", ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;

                                menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetCloseDusanLotto(ref lines);

                                LoginRequest LoginRequestBody_lotto = new LoginRequest()
                                {
                                    ServiceID = lotto_service.service_id,
                                    Password = lotto_service.service_password
                                };
                                LoginResponse res_lotto = Login.DoLogin(LoginRequestBody_lotto);
                                if (res_lotto != null)
                                {
                                    if (res_lotto.ResultCode == 1000)
                                    {
                                        string token_id = res_lotto.TokenID;
                                        momo_request = new DYAReceiveMoneyRequest()
                                        {
                                            MSISDN = Convert.ToInt64(MSISDN),
                                            Amount = Convert.ToInt32(ussdString),
                                            ServiceID = lotto_service.service_id,
                                            TokenID = token_id,
                                            TransactionID = "DusanLotto_" + user_session_id
                                        };
                                    }
                                }
                                break;

                            case 80: //Foot Solider Check MSISDN and ask to enter full name 
                                is_close = true;
                                menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetFootSoldiersMSISDNMenu(MSISDN, ussdString, out is_close, service, ref lines);
                                if (is_close)
                                {
                                    msgType = "2";
                                    opType = "2";
                                }
                                else
                                {
                                    Api.DataLayer.DBQueries.ExecuteQuery("insert into ussd_footsoldiers_attempts (user_session_id, footsoldier_msisdn, user_msisdn, full_name, user_id, date_time) values('" + user_session_id + "', " + MSISDN + ", 242" + ussdString + ", '', 0, now())", ref lines);
                                }
                                break;
                            case 79: //Foot Soldier create user
                                is_close = true;
                                Int64 user_msisdn = Api.DataLayer.DBQueries.SelectQueryReturnInt64("SELECT u.user_msisdn from ussd_footsoldiers_attempts u WHERE u.user_session_id = '" + user_session_id + "' order by u.id desc limit 1", ref lines);
                                if (user_msisdn > 0)
                                {
                                    Api.CommonFuncations.iDoBetMTNCongo.CreateUserResponse create_user = new Api.CommonFuncations.iDoBetMTNCongo.CreateUserResponse();
                                    menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetFootSoldiersFullNameMenu(MSISDN, ussdString, out is_close, ussd_menu, user_msisdn.ToString(), out create_user, ref lines);
                                    if (is_close)
                                    {
                                        LoginRequest LoginRequestBody = new LoginRequest()
                                        {
                                            ServiceID = service.service_id,
                                            Password = service.service_password
                                        };
                                        LoginResponse res = Login.DoLogin(LoginRequestBody);
                                        if (res != null)
                                        {
                                            if (res.ResultCode == 1000)
                                            {

                                                Int64 rec_id = Api.DataLayer.DBQueries.SelectQueryReturnInt64("SELECT u.id from ussd_footsoldiers_attempts u WHERE u.user_session_id = '" + user_session_id + "' order by u.id desc limit 1", ref lines);
                                                Api.DataLayer.DBQueries.ExecuteQuery("update ussd_footsoldiers_attempts set user_id = " + create_user.userId + ", full_name = '" + ussdString + "' where id = " + rec_id, ref lines);
                                                string token_id = res.TokenID;
                                                string sms_text = "Felicitations, vous vous etes inscrit avec succes sur YellowBet. https://m.yellowbet.cg/#/login Mot de passe: " + create_user.password;
                                                Api.DataLayer.DBQueries.ExecuteQuery("insert into foot_soldiers_sms (date_time, msisdn, service_id, sms_text) values(now(), " + user_msisdn + "," + service.service_id + ",'" + sms_text + "');", ref lines);
                                                SendSMSRequest RequestSendSMSBody1 = new SendSMSRequest()
                                                {
                                                    ServiceID = service.service_id,
                                                    MSISDN = user_msisdn,
                                                    Text = sms_text,
                                                    TokenID = token_id,
                                                    TransactionID = "12345"
                                                };
                                                SendSMSResponse response_sendsms1 = SendSMS.DoSMS(RequestSendSMSBody1);
                                                if (response_sendsms1 != null)
                                                {
                                                    if (response_sendsms1.ResultCode == 1010 || response_sendsms1.ResultCode == 1000)
                                                    {
                                                        lines = Add2Log(lines, " Send SMS Was OK", 100, lines[0].ControlerName);
                                                    }
                                                    else
                                                    {
                                                        lines = Add2Log(lines, " Send SMS Failed", 100, lines[0].ControlerName);
                                                    }
                                                }
                                                else
                                                {
                                                    lines = Add2Log(lines, " Send SMS Failed", 100, lines[0].ControlerName);
                                                }
                                            }
                                        }
                                    }
                                }
                                else
                                {
                                    is_close = false;
                                    menu_2_display = "Error 78_2" + Environment.NewLine;
                                    menu_2_display = menu_2_display + Environment.NewLine + "M) ";// Menu Principal ";

                                }
                                break;
                            case 78: //Foot Soldier Main Menu asking to enter MSISDN
                                menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetFootSoldierMainMenu(MSISDN, ref lines);
                                break;

                            case 86:
                            case 87:
                                if (ussdString == "1")
                                {
                                    switch (ussd_menu.action_id)
                                    {
                                        case 86:
                                            game_id = 41;
                                            break;
                                        case 87:
                                            game_id = 42;
                                            break;
                                    }
                                    DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games_cg (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + rapidos_string + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',2000, " + service.service_id + ")", "DBConnectionString_161", ref lines);
                                    msgType = "2";
                                    opType = "2";
                                    is_close = true;
                                    status = 1;

                                    menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetCloseBet(ussd_session, amount, ref lines);
                                    LoginRequest LoginRequestBody = new LoginRequest()
                                    {
                                        ServiceID = service.service_id,
                                        Password = service.service_password
                                    };
                                    LoginResponse res = Login.DoLogin(LoginRequestBody);
                                    if (res != null)
                                    {
                                        if (res.ResultCode == 1000)
                                        {
                                            string token_id = res.TokenID;
                                            momo_request = new DYAReceiveMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = 2000,
                                                ServiceID = service.service_id,
                                                TokenID = token_id,
                                                TransactionID = "Rapidos_" + user_session_id
                                            };
                                        }
                                    }

                                }
                                break;
                            case 75:
                            case 76:
                            case 77:
                                bool placebet1 = false;
                                double num3;
                                int max_bet = 0;
                                bool check_amount = double.TryParse(ussdString, out num3);
                                if (check_amount == true)
                                {
                                    switch (ussd_menu.action_id)
                                    {
                                        case 75:
                                            game_id = 58;
                                            max_bet = 20000;
                                            break;
                                        case 76:
                                            game_id = 59;
                                            max_bet = 4000;
                                            break;
                                        case 77:
                                            game_id = 60;
                                            max_bet = 200;
                                            break;
                                    }
                                    if (num3 >= 200 && num3 <= max_bet)
                                    {
                                        DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games_cg (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + rapidos_string + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "'," + num3 + ", " + service.service_id + ")", "DBConnectionString_161", ref lines);
                                        placebet1 = true;
                                    }
                                    else
                                    {

                                        menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetWrongPriceBetRapidos(max_bet, ref lines);
                                        DataLayer.DBQueries.ExecuteQuery("delete from ussd_saved_games_cg where user_session_id = '" + user_session_id + "' order by id desc limit 1", "DBConnectionString_161", ref lines);
                                    }
                                }
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                //RequestForOrder
                                //bool req_for_order = GetRequestForOrder(ussd_session, ref lines);
                                if (placebet1)
                                {

                                    menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetCloseBet(ussd_session, amount, ref lines);
                                    LoginRequest LoginRequestBody = new LoginRequest()
                                    {
                                        ServiceID = service.service_id,
                                        Password = service.service_password
                                    };
                                    LoginResponse res = Login.DoLogin(LoginRequestBody);
                                    if (res != null)
                                    {
                                        if (res.ResultCode == 1000)
                                        {
                                            string token_id = res.TokenID;
                                            momo_request = new DYAReceiveMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(ussdString),
                                                ServiceID = service.service_id,
                                                TokenID = token_id,
                                                TransactionID = "Rapidos_" + user_session_id
                                            };
                                        }
                                    }
                                }

                                break;

                            case 72: //Confirm Rapidos
                            case 73:
                            case 74:
                                bool validate_num = Api.CommonFuncations.iDoBetMTNCongo.ValidateRapidosInput(ussdString, ussd_menu.action_id, out strlist, ref lines);
                                if (validate_num)
                                {
                                    menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetConfirmRapidosMenu(ussd_menu.action_id, ussdString, out game_id, ref lines);
                                    rapidos_string = ussdString;
                                }
                                else
                                {
                                    menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.WrongRapidosNumber();
                                }
                                break;
                            case 84: //Confirm Lotto
                            case 85:
                                String[] strlist1 = new string[] { };
                                bool validate_num1 = Api.CommonFuncations.iDoBetMTNCongo.ValidateLottoInput(ussdString, ussd_menu.action_id, out strlist1, ref lines);
                                if (validate_num1)
                                {
                                    menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetConfirmLottoMenu(ussd_menu.action_id, ussdString, out game_id, ref lines);
                                    rapidos_string = ussdString;
                                }
                                else
                                {
                                    menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.WrongRapidosNumber();
                                }
                                break;
                            case 55://EnterAmountForSubAgent
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                Int64 pos_trans_id = 0;
                                menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetAmountForSubAgentMenu(MSISDN, ussdString, selected_subagent_name, out pos_trans_id, ref lines);
                                if (pos_trans_id > 0)
                                {
                                    ServiceClass subscriber_service1 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                    LoginRequest LoginRequestBody = new LoginRequest()
                                    {
                                        ServiceID = subscriber_service1.service_id,
                                        Password = subscriber_service1.service_password
                                    };
                                    LoginResponse res = Login.DoLogin(LoginRequestBody);
                                    if (res != null)
                                    {
                                        if (res.ResultCode == 1000)
                                        {
                                            string token_id = res.TokenID;
                                            momo_request = new DYAReceiveMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(ussdString),
                                                ServiceID = ussd_menu.service_id,
                                                TokenID = token_id,
                                                TransactionID = "POSTrans_" + pos_trans_id

                                            };
                                        }
                                    }
                                }



                                break;
                            case 54:
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*")) && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetSlectedSubAgentMenu(MSISDN, page_number, ussdString, out selected_subagent_name, ref lines);
                                break;
                            case 53:
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*")) && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetAgentMainMenu(MSISDN, page_number, ref lines);
                                break;
                            case 34: //DepositMoney
                                user = Api.CommonFuncations.iDoBetMTNCongo.SearchUserNew(MSISDN, ref lines);
                                menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetDepositMoneyMenu(user, ussd_menu, MSISDN, ref lines);
                                break;
                            case 36: //StartDepositMoney
                                user = Api.CommonFuncations.iDoBetMTNCongo.SearchUserNew(MSISDN, ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetStartDepositMoneyMenu(service, user, ussd_menu, MSISDN, ussdString, out momo_request, ref lines);
                                break;
                            case 33: //WithdrawMoney
                                user = Api.CommonFuncations.iDoBetMTNCongo.SearchUserNew(MSISDN, ref lines);
                                menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetWithdrawMoneyMenu(user, ref lines);
                                break;
                            case 35: //StartWithdrawMoney
                                user = Api.CommonFuncations.iDoBetMTNCongo.SearchUserNew(MSISDN, ref lines);
                                menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetStartWithdrawMoneyMenu(user, false, false, false, ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                if (user.isValid == true)
                                {
                                    if (Convert.ToInt32(ussdString) <= user.AvailableForWithdraw && Convert.ToInt32(ussdString) > 0)
                                    {
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.CheckBeforeWithdrawMenu(service, MSISDN, ref lines);
                                        if (String.IsNullOrEmpty(menu_2_display))
                                        {
                                            //Refund user
                                            ServiceClass subscriber_service1 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                            LoginRequest LoginRequestBody1 = new LoginRequest()
                                            {
                                                ServiceID = service.service_id,
                                                Password = service.service_password
                                            };
                                            LoginResponse res1 = Login.DoLogin(LoginRequestBody1);
                                            if (res1 != null)
                                            {
                                                if (res1.ResultCode == 1000)
                                                {
                                                    string token_id = res1.TokenID;
                                                    DYATransferMoneyRequest momotransfer_request = new DYATransferMoneyRequest()
                                                    {
                                                        MSISDN = Convert.ToInt64(MSISDN),
                                                        Amount = Convert.ToInt32(ussdString),
                                                        ServiceID = service.service_id,
                                                        TokenID = token_id,
                                                        TransactionID = "USSDWithdraw_" + Guid.NewGuid().ToString()
                                                    };
                                                    string postBody = "", response_body = "";
                                                    //bool wd_result = StartWithdraw(user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                    bool do_withdraw = false;
                                                    string code = "";
                                                    if (user.AvailableForWithdraw > 0)
                                                    {
                                                        do_withdraw = true;
                                                        code = Api.CommonFuncations.iDoBetMTNCongo.StartWithdrawNew(user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                    }



                                                    menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetStartWithdrawMoneyMenu(user, true, true, false, ref lines);

                                                    if (code == "")
                                                    {
                                                        if (do_withdraw)
                                                        {
                                                            menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetStartWithdrawMoneyMenu(user, false, false, false, ref lines);
                                                            string mail_body = "<p><h2>Start Withdraw MTN Congo has failed</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>Json: </b>" + postBody + "<br><b>Response: </b>" + response_body + "<br></p>";
                                                            string mail_subject = "Start Withdraw MTN Congo has failed for user - " + user.id;
                                                            string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                            string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                            string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                            string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                            int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                            string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                            CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                                        }

                                                    }
                                                    else
                                                    {
                                                        DYATransferMoneyResponse momotransfer_response = CommonFuncations.DYATransferMoney.DoTransfer(momotransfer_request);
                                                        if (momotransfer_response.ResultCode == 1000)
                                                        {
                                                            postBody = "";
                                                            response_body = "";
                                                            bool end_withdraw = Api.CommonFuncations.iDoBetMTNCongo.EndWithdrawNew(momotransfer_response.Timestamp, momotransfer_response.TransactionID, true, code, user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                            if (!end_withdraw)
                                                            {
                                                                menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetStartWithdrawMoneyMenu(user, false, false, false, ref lines);
                                                                string mail_body = "", mail_subject = "";
                                                                mail_body = "<p><h2>End Withdraw MTN Congo has failed but DYATransfer was ok</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>Request: </b>" + postBody + "<br>Response: " + response_body + "<br></p>";
                                                                mail_subject = "End Withdraw MTN Congo has failed but DYATransfer was ok - " + user.id;
                                                                string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                                string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                                string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                                string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                                int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                                string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                                CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                                            }
                                                            GoogleAnalytics.SendData2GoogleAnalytics("UA-154843894-1", "ussd", Base64.Reverse(MSISDN), System.Web.HttpContext.Current.Request.ServerVariables["REMOTE_ADDR"], "BJ", "event", "Withdraw", "MOMO", "-" + ussdString, "/", ref lines);
                                                        }
                                                        else
                                                        {
                                                            menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetStartWithdrawMoneyMenu(user, false, false, false, ref lines);
                                                            postBody = "";
                                                            response_body = "";
                                                            bool end_withdraw = iDoBetMTNCongo.EndWithdrawNew(momotransfer_response.Timestamp, momotransfer_response.TransactionID, false, code, user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                            string mail_body = "", mail_subject = "";
                                                            mail_body = "<p><h2>Withdraw MTN Congo has failed DYATransfer</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>MOMO Response: </b>" + momotransfer_response.ResultCode + " " + momotransfer_response.Description + "<br>User was refunded: " + end_withdraw + "<br><b>Request: </b>" + postBody + "<br><b>Response: </b>" + response_body + "</p>";
                                                            mail_subject = "Withdraw MTN Congo has failed DYATransfer for user - " + user.id;
                                                            string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                            string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                            string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                            string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                            int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                            string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                            CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                                        }
                                                    }



                                                }
                                            }
                                        }


                                    }
                                    else
                                    {
                                        //user has requested more than allowed
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetStartWithdrawMoneyMenu(user, false, false, true, ref lines);
                                    }
                                }
                                break;
                            case 25://CloseXXXBet
                            case 26:
                            case 27:
                                double num4 = 0;
                                bool check_amount4 = double.TryParse(amount, out num4);
                                if (num4 >= 200 && num4 <= 1000000)
                                {
                                    List<Int64> saved_ids = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, "_cg", ref lines);
                                    if (saved_ids != null)
                                    {
                                        foreach (Int64 s in saved_ids)
                                        {
                                            DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games_cg set amount = " + amount + " where id = " + s, "DBConnectionString_161", ref lines);
                                        }
                                    }
                                    msgType = "2";
                                    opType = "2";
                                    is_close = true;
                                    status = 1;
                                    //RequestForOrder
                                    //bool req_for_order = GetRequestForOrder(ussd_session, ref lines);
                                    bool req_for_order = Api.CommonFuncations.iDoBetMTNCongo.PlaceBet(ussd_session, ref lines);

                                    if (req_for_order == true)
                                    {
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetCloseBet(ussd_session, amount, ref lines);
                                        ServiceClass subscriber_service2 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                        LoginRequest LoginRequestBody = new LoginRequest()
                                        {
                                            ServiceID = subscriber_service2.service_id,
                                            Password = subscriber_service2.service_password
                                        };
                                        LoginResponse res = Login.DoLogin(LoginRequestBody);
                                        if (res != null)
                                        {
                                            if (res.ResultCode == 1000)
                                            {
                                                string token_id = res.TokenID;
                                                momo_request = new DYAReceiveMoneyRequest()
                                                {
                                                    MSISDN = Convert.ToInt64(MSISDN),
                                                    Amount = Convert.ToInt32(amount),
                                                    ServiceID = ussd_menu.service_id,
                                                    TokenID = token_id,
                                                    TransactionID = user_session_id

                                                };
                                            }
                                        }
                                    }
                                    else
                                    {
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetCloseBetFailed(ref lines);
                                    }
                                }
                                else
                                {
                                    menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetWrongPriceBetMeny(ref lines);
                                    DataLayer.DBQueries.ExecuteQuery("delete from ussd_saved_games_cg where user_session_id = '" + user_session_id + "' order by id desc limit 1", "DBConnectionString_161", ref lines);
                                }
                                
                                break;
                            case 22: //ConfirmBetXXX
                            case 23:
                            case 24:
                                amount = ussdString;
                                double num1;
                                bool res_parse = double.TryParse(amount, out num1);
                                if (res_parse == true)
                                {
                                    if (num1 >= 200 && num1 <= 1000000)
                                    {
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetConfirmBet(ussd_session, amount, ref lines);
                                    }
                                    else
                                    {

                                        menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetWrongPriceBetMeny(ref lines);
                                        DataLayer.DBQueries.ExecuteQuery("delete from ussd_saved_games_cg where user_session_id = '" + user_session_id + "' order by id desc limit 1", "DBConnectionString_161", ref lines);
                                    }
                                }
                                odd_page = 0;

                                break;
                            case 19: //PayAndConfirmXXX
                            case 20:
                            case 21:
                                //need to check if user clicks back and then returns to this section.
                                //DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games_cg (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + ussdString + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',0, " + service.service_id + ")", ref lines);
                                menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetPayAndConfirm(ussd_session, ref lines);
                                odd_page = 0;
                                break;
                            case 32: //ticket status
                                page_number = (page_number == 0 ? 1 : page_number);
                                menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetCheckTicketMenu(MSISDN, page_number, ussdString, ref lines);
                                break;
                            case 31: //tickets status by phone
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*")) && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetCheckTicketsMenu(MSISDN, page_number, ref lines);
                                break;
                            case 52:
                                menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetPayoutBarcodeTicket(ussd_menu, MSISDN, ref lines);
                                if (String.IsNullOrEmpty(menu_2_display))
                                {
                                    msgType = "2";
                                    opType = "2";
                                    is_close = true;
                                    //Refund user
                                    ServiceClass subscriber_service2 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                    LoginRequest LoginRequestBody2 = new LoginRequest()
                                    {
                                        ServiceID = service.service_id,
                                        Password = service.service_password
                                    };
                                    LoginResponse res2 = Login.DoLogin(LoginRequestBody2);
                                    if (res2 != null)
                                    {
                                        if (res2.ResultCode == 1000)
                                        {
                                            string token_id = res2.TokenID;
                                            DYATransferMoneyRequest momotransfer_request = new DYATransferMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(amount_2_pay),
                                                ServiceID = service.service_id,
                                                TokenID = token_id,
                                                TransactionID = "POSTicketPayout_" + bar_code
                                            };
                                            DYATransferMoneyResponse momotransfer_response = CommonFuncations.DYATransferMoney.DoTransfer(momotransfer_request);

                                            if (momotransfer_response.ResultCode == 1000)
                                            {
                                                int cashier_id = Api.CommonFuncations.iDoBetMTNCongo.GetCashierID(MSISDN, ref lines);
                                                if (cashier_id > 0)
                                                {
                                                    DataLayer.DBQueries.ExecuteQuery("insert into casheir_transactions (cashier_id, bar_code, total_payout, date_time, dya_id) values(" + cashier_id + ", '" + bar_code + "', " + amount_2_pay + ", now()," + momotransfer_response.TransactionID + ");", ref lines);
                                                }
                                                GoogleAnalytics.SendData2GoogleAnalytics("UA-154843894-1", "ussd", Base64.Reverse(MSISDN), System.Web.HttpContext.Current.Request.ServerVariables["REMOTE_ADDR"], "BJ", "event", "PyoutPOSTicket", "MOMO", "-" + ussdString, "/", ref lines);
                                                //dopayout
                                                bool dopayout_res = Api.CommonFuncations.iDoBetMTNCongo.DoPayOutNew(momotransfer_response.Timestamp, momotransfer_response.TransactionID, bar_code, ref lines);
                                                //bool dopayout_res = iDoBet.DoPayout(bar_code, ref lines);
                                                menu_2_display = "Félicitations, le billet a été remboursé sur votre compte MTN MOMO.";

                                            }
                                            else
                                            {
                                                menu_2_display = "Le billet n'a pas été remboursé sur votre compte MTN MOMO." + Environment.NewLine;
                                                menu_2_display = menu_2_display + "Veuillez réessayer";
                                                string mail_body = "<p><h2>Payout MTN Congo has failed DYATransfer</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>MOMO Response: </b>" + momotransfer_response.ResultCode + " " + momotransfer_response.Description + "<br></p>";
                                                string mail_subject = "Payout MTN Congo has failed DYATransfer for user - " + user.id;
                                                string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                            }
                                        }
                                    }
                                }

                                break;
                            case 44: //search ticket
                                menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetCheckTicketByBarcodeMenu(MSISDN, ussdString, out amount_2_pay, ref lines);
                                bar_code = ussdString;
                                break;
                            case 39: //add another game
                                if (game_id > 0)
                                {
                                    //DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games_cg (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + ussdString + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',0, " + service.service_id + ")", ref lines);
                                    game_id = 0;
                                    selected_odd = 0;
                                    page_number = 1;
                                    odd_page = 0;
                                }
                                menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetSportsTypeMenu(ref lines);
                                break;
                            case 41: //Delete and Start Over
                                List<Int64> saved_ids1 = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, "_cg", ref lines);
                                if (saved_ids1 != null)
                                {
                                    foreach (Int64 s in saved_ids1)
                                    {
                                        DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games_cg set status = 3 where id = " + s, "DBConnectionString_161", ref lines);
                                    }
                                }

                                //DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games_cg set status = 3 where user_seesion_id = '" + user_session_id + "'", ref lines);
                                game_id = 0;
                                odd_page = 0;
                                selected_odd = 0;
                                page_number = 1;
                                menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetSportsTypeMenu(ref lines);
                                ussd_menu.action_id = 2;
                                break;
                            case 48:
                                menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetSoccerLeagueMenu(35, "0", ussd_menu.ussd_id, ref lines, out selected_league_id);
                                break;
                            case 47:
                                menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetSoccerLeagueMenu(32, "0", ussd_menu.ussd_id, ref lines, out selected_league_id);
                                break;
                            case 37: //display soccer leagu
                                menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetSoccerLeagueMenu(31, "0", ussd_menu.ussd_id, ref lines, out selected_league_id);
                                break;
                            case 49:
                            case 50:
                            case 38://selected league
                            case 28://Start Over
                            case 29:
                            case 30:
                            case 16://AddXXXGame or 
                            case 17:
                            case 18:
                            case 7: //DisplayXXXTopEvents   
                            case 8:
                            case 9:
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*")) && page_number > 0)
                                {
                                    page_number = page_number - 1;
                                }
                                if (ussd_menu.action_id == 28 || ussd_menu.action_id == 29 || ussd_menu.action_id == 30)
                                {
                                    List<Int64> saved_ids2 = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, "_cg", ref lines);
                                    if (saved_ids2 != null)
                                    {
                                        foreach (Int64 s in saved_ids2)
                                        {
                                            DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games_cg set status = 3 where id = " + s, "DBConnectionString_161", ref lines);
                                        }
                                    }
                                    //DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games_cg set status = 3 where user_seesion_id = '"+user_session_id+"'", ref lines);
                                    game_id = 0;
                                    selected_odd = 0;
                                    odd_page = 0;
                                    page_number = 1;

                                }
                                if (ussd_menu.action_id == 16 || ussd_menu.action_id == 17 || ussd_menu.action_id == 18)
                                {
                                    if (game_id > 0)
                                    {
                                        //DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games_cg (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + ussdString + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',0, " + service.service_id + ")", ref lines);
                                        game_id = 0;
                                        selected_odd = 0;
                                        page_number = 1;
                                        odd_page = 0;
                                    }

                                }
                                switch (ussd_menu.action_id)
                                {
                                    case 38:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetEventsMenu(ussdString, 31, page_number, ref lines, out selected_league_id, selected_league_id, ussd_menu);
                                        break;
                                    case 49:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetEventsMenu(ussdString, 32, page_number, ref lines, out selected_league_id, selected_league_id, ussd_menu);
                                        break;
                                    case 50:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetEventsMenu(ussdString, 35, page_number, ref lines, out selected_league_id, selected_league_id, ussd_menu);
                                        break;
                                    case 28:
                                    case 16:
                                    case 7:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetEventsMenu(31, page_number, ref lines);
                                        break;
                                    case 29:
                                    case 17:
                                    case 8:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetEventsMenu(32, page_number, ref lines);
                                        break;
                                    case 30:
                                    case 18:
                                    case 9:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetEventsMenu(35, page_number, ref lines);
                                        break;
                                }


                                break;
                            case 10: //DisplayXXXGame
                            case 11:
                            case 12:
                                page_number = (page_number == 0 ? 1 : page_number);
                                selected_odd = 0;
                                if (ussdString.Contains("#"))
                                {
                                    odd_page = odd_page + 1;
                                }
                                if ((ussdString.Contains("*")) && odd_page > 0)
                                {
                                    odd_page = odd_page - 1;
                                }
                                switch (ussd_menu.action_id)
                                {
                                    case 10:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetGameOddsMenu(31, page_number, ussdString, game_id, odd_page, out game_id, selected_league_id, ref lines);
                                        break;
                                    case 11:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetGameOddsMenu(32, page_number, ussdString, game_id, odd_page, out game_id, selected_league_id, ref lines);
                                        break;
                                    case 12:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetGameOddsMenu(35, page_number, ussdString, game_id, odd_page, out game_id, selected_league_id, ref lines);
                                        break;
                                }
                                break;
                            case 13: //ConfirmXXXGame (select odd)
                            case 14:
                            case 15:
                                switch (ussd_menu.action_id)
                                {
                                    case 13:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetConfirmMenu(31, game_id, ussdString, odd_page, out selected_odd, out selected_bet_type_id, out selected_odd_name, out selected_odd_line, ref lines, ussd_session, MSISDN, service);
                                        break;
                                    case 14:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetConfirmMenu(32, game_id, ussdString, odd_page, out selected_odd, out selected_bet_type_id, out selected_odd_name, out selected_odd_line, ref lines, ussd_session, MSISDN, service);
                                        break;
                                    case 15:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetConfirmMenu(35, game_id, ussdString, odd_page, out selected_odd, out selected_bet_type_id, out selected_odd_name, out selected_odd_line, ref lines, ussd_session, MSISDN, service);
                                        break;
                                }
                                break;
                            case 92: //FreeBet
                                bool placebet2 = false;
                                USSDBonus ub = null;
                                menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.CheckFreeBet(ussd_session, MSISDN, out placebet2, out ub, ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                if (String.IsNullOrEmpty(menu_2_display) && placebet2)
                                {
                                    List<Int64> saved_ids3 = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, "_cg", ref lines);
                                    if (saved_ids3 != null)
                                    {
                                        foreach (Int64 s in saved_ids3)
                                        {
                                            DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games_cg set amount = " + ub.amount + " where id = " + s, "DBConnectionString_161", ref lines);
                                        }
                                    }

                                    bool req_for_order = Api.CommonFuncations.iDoBetMTNCongo.PlaceBet(ussd_session, ref lines);
                                    if (req_for_order == true)
                                    {
                                        //final placebet
                                        Int64 dya_id = Api.DataLayer.DBQueries.ExecuteQueryReturnInt64("insert into dya_transactions (msisdn, service_id, date_time, amount, result, result_desc, dya_method, transaction_id) values(" + MSISDN + "," + service.service_id + ",now()," + ub.amount + ",'02','USSD Bonus',2,'" + ussd_session.user_seesion_id + "')", ref lines);
                                        DYATransactions dya_trans = UpdateGetDYAReciveTrans(dya_id, "02", "USSD Bonus", ref lines);
                                        ExecuteOrderDetails barcode = null;
                                        string postBody = "", response_body = "";
                                        if (dya_trans.partner_transid.Contains("Rapidos_"))
                                        {
                                            barcode = CommonFuncations.iDoBetMTNCongo.PlaceBetRapidos(dya_trans, out postBody, out response_body, ref lines);
                                        }
                                        else
                                        {
                                            barcode = CommonFuncations.iDoBetMTNCongo.GetExecuteOrderNew(dya_trans, out postBody, out response_body, ref lines);
                                        }
                                        if (barcode != null)
                                        {
                                            double total_ratio = (Convert.ToDouble(barcode.max_payout) / Convert.ToDouble(barcode.amount));
                                            Api.DataLayer.DBQueries.ExecuteQuery("insert into ussd_bonus_bets (ussd_bonus_user_id, amount, odd, selections, barcode, payout_dya_id, date_time) values(" + ub.bonus_user_id + "," + ub.amount + "," + total_ratio + "," + saved_ids3.Count() + ",'" + barcode.barcode + "',0,now())", ref lines);
                                            string text_msg_ms = "Bonjour, votre bonus pari a ete place avec succes.\n";// + Environment.NewLine;
                                            text_msg_ms = text_msg_ms + "Numero de commande: " + barcode.order_number + "\n";// Environment.NewLine;
                                            text_msg_ms = text_msg_ms + "Code a barre: " + barcode.barcode + "\n";//Environment.NewLine;
                                            text_msg_ms = text_msg_ms + "Montant: " + barcode.amount + "\n";//Environment.NewLine;
                                            text_msg_ms = text_msg_ms + "Gain Maximum: " + barcode.max_payout;//Environment.NewLine;
                                            lines = Add2Log(lines, " total_bonus =  " + barcode.total_bonus, 100, lines[0].ControlerName);
                                            if (!String.IsNullOrEmpty(barcode.total_bonus))
                                            {
                                                text_msg_ms = text_msg_ms + "\nBonus: " + barcode.total_bonus;//Environment.NewLine;
                                            }
                                            //send sms
                                            LoginRequest LoginRequestBody = new LoginRequest()
                                            {
                                                ServiceID = service.service_id,
                                                Password = service.service_password
                                            };
                                            LoginResponse res = Login.DoLogin(LoginRequestBody);
                                            if (res != null)
                                            {
                                                if (res.ResultCode == 1000)
                                                {
                                                    string token_id = res.TokenID;
                                                    SendSMSRequest RequestSendSMSBody1 = new SendSMSRequest()
                                                    {
                                                        ServiceID = service.service_id,
                                                        MSISDN = Convert.ToInt64(MSISDN),
                                                        Text = text_msg_ms,
                                                        TokenID = token_id,
                                                        TransactionID = "12345"
                                                    };
                                                    SendSMSResponse response_sendsms1 = SendSMS.DoSMS(RequestSendSMSBody1);
                                                    if (response_sendsms1 != null)
                                                    {
                                                        if (response_sendsms1.ResultCode == 1010 || response_sendsms1.ResultCode == 1000)
                                                        {
                                                            lines = Add2Log(lines, " Send SMS Was OK", 100, lines[0].ControlerName);
                                                        }
                                                        else
                                                        {
                                                            lines = Add2Log(lines, " Send SMS Failed", 100, lines[0].ControlerName);
                                                        }
                                                    }
                                                    else
                                                    {
                                                        lines = Add2Log(lines, " Send SMS Failed", 100, lines[0].ControlerName);
                                                    }
                                                }
                                            }
                                        }
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNCongo.GetUSSDBonusCloseBet(barcode, ref lines);
                                    }
                                }

                                break;
                        }
                        lines = Add2Log(lines, " page_number = " + page_number, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " game_id = " + game_id, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " odd_page = " + odd_page, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " selected_odd = " + selected_odd, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " amount = " + amount, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " selected_league_id = " + selected_league_id, 100, "ivr_subscribe");
                        result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, menu_2_display, msgType, opType);
                        DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id, selected_odd, selected_bet_type_id,selected_odd_name, selected_odd_line, amount, selected_league_id, amount_2_pay, bar_code, selected_subagent_name, rapidos_string) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + "," + status + ", '" + ussdString + "', " + ussd_menu.action_id + ", " + page_number + "," + odd_page + "," + game_id + "," + topic_id + ",'" + user_session_id + "'," + selected_odd + "," + selected_bet_type_id + ",'" + selected_odd_name + "','" + selected_odd_line + "', " + amount + "," + selected_league_id + "," + amount_2_pay + ",'" + bar_code + "','" + selected_subagent_name + "', '" + rapidos_string + "');", "DBConnectionString_161", ref lines);
                        break;
                }
            }

            return result;
        }

        public static string MTNCongoUSSDBehaviuer142(ServiceClass service, string ussdString, string ServiceID, string MSISDN, string linkid, string receiveCB, string senderCB, string serviceCode, USSDMenu ussd_menu, USSDSession ussd_session, out DYAReceiveMoneyRequest momo_request, ref List<LogLines> lines, out string menu_2_display, out bool is_close, string force_session_id)
        {
            momo_request = null;
            menu_2_display = "";
            is_close = false;
            string result = "";
            force_session_id = (String.IsNullOrEmpty(force_session_id) ? Guid.NewGuid().ToString() : force_session_id);
            string user_session_id = (ussd_session == null ? force_session_id : ussd_session.user_seesion_id);
            int topic_id = (ussd_session != null ? ussd_session.topic_id : ussd_menu.topic_id);
            if (!String.IsNullOrEmpty(ussd_menu.menu_2_display))
            {
                menu_2_display = ussd_menu.menu_2_display;
                result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, ussd_menu.menu_2_display, "1", "1");
                DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + ",0, '" + ussdString + "', " + ussd_menu.action_id + ", " + (ussd_session == null ? 0 : ussd_session.page_number) + "," + (ussd_session == null ? 0 : ussd_session.odd_page) + "," + (ussd_session == null ? 0 : ussd_session.game_id) + "," + topic_id + ",'" + user_session_id + "');", "DBConnectionString_104", ref lines);
            }
            if (ussd_menu.action_id == 3) //close
            {
                menu_2_display = ussd_menu.menu_2_display;
                is_close = true;
                result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, menu_2_display, "2", "2");
                DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + ",1, '" + ussdString + "', " + ussd_menu.action_id + ", " + (ussd_session == null ? 0 : ussd_session.page_number) + "," + (ussd_session == null ? 0 : ussd_session.odd_page) + "," + (ussd_session == null ? 0 : ussd_session.game_id) + "," + topic_id + ",'" + user_session_id + "');", "DBConnectionString_104", ref lines);
            }

            if (ussd_menu.action_id == 4 || ussd_menu.action_id == 5 || ussd_menu.action_id == 60) //subscribe or unsubscribe
            {
                ServiceClass subscriber_service = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                LoginRequest LoginRequestBody = new LoginRequest()
                {
                    ServiceID = subscriber_service.service_id,
                    Password = subscriber_service.service_password
                };
                LoginResponse res = Login.DoLogin(LoginRequestBody);

                menu_2_display = "Thank You ";

                is_close = true;
                //result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, "Thank You", "2", "2");
                //lines = Add2Log(lines, "Soap = " + result, 100, "ussd_mo");
                //string soap_url = Cache.ServerSettings.GetServerSettings("SDPUSSDPush_" + service.operator_id + (service.is_staging == true ? "_STG" : ""), ref lines);
                //lines = Add2Log(lines, "Sending to URL = " + soap_url, 100, "ussd_mo");
                //string response = CommonFuncations.CallSoap.CallSoapRequest(soap_url, result, ref lines);
                //lines = Add2Log(lines, "SendUSSD Response = " + response, 100, "ussd_mo");
                result = "";
                if (res != null)
                {
                    if (res.ResultCode == 1000)
                    {
                        string token_id = res.TokenID;
                        SubscribeRequest subscribe_RequestBody = new SubscribeRequest()
                        {
                            ServiceID = subscriber_service.service_id,
                            TokenID = token_id,
                            MSISDN = Convert.ToInt64(MSISDN),
                            TransactionID = "ussd_mo",
                            ActivationID = "3"
                        };
                        SubscribeResponse subscribe_response = null;
                        if (ussd_menu.action_id == 60)
                        {
                            subscribe_response = CommonFuncations.UnSubscribe.DoUnSubscribe(subscribe_RequestBody);
                            subscriber_service = GetServiceByServiceID(938, ref lines);
                            LoginRequestBody = new LoginRequest()
                            {
                                ServiceID = subscriber_service.service_id,
                                Password = subscriber_service.service_password
                            };
                            res = Login.DoLogin(LoginRequestBody);
                            if (res != null)
                            {
                                if (res.ResultCode == 1000)
                                {
                                    token_id = res.TokenID;
                                    subscribe_RequestBody = new SubscribeRequest()
                                    {
                                        ServiceID = subscriber_service.service_id,
                                        TokenID = token_id,
                                        MSISDN = Convert.ToInt64(MSISDN),
                                        TransactionID = "ussd_mo",
                                        ActivationID = "3"
                                    };
                                    subscribe_response = CommonFuncations.UnSubscribe.DoUnSubscribe(subscribe_RequestBody);

                                }
                            }
                            subscriber_service = GetServiceByServiceID(937, ref lines);
                            LoginRequestBody = new LoginRequest()
                            {
                                ServiceID = subscriber_service.service_id,
                                Password = subscriber_service.service_password
                            };
                            res = Login.DoLogin(LoginRequestBody);
                            if (res != null)
                            {
                                if (res.ResultCode == 1000)
                                {
                                    token_id = res.TokenID;
                                    subscribe_RequestBody = new SubscribeRequest()
                                    {
                                        ServiceID = subscriber_service.service_id,
                                        TokenID = token_id,
                                        MSISDN = Convert.ToInt64(MSISDN),
                                        TransactionID = "ussd_mo",
                                        ActivationID = "3"
                                    };
                                    subscribe_response = CommonFuncations.UnSubscribe.DoUnSubscribe(subscribe_RequestBody);
                                }
                            }
                        }
                        else
                        {
                            subscribe_response = (ussd_menu.action_id == 4 ? CommonFuncations.Subscribe.DoSubscribe(subscribe_RequestBody) : CommonFuncations.UnSubscribe.DoUnSubscribe(subscribe_RequestBody));
                        }

                        if (subscribe_response != null)
                        {
                            lines = Add2Log(lines, " ResultCode = " + subscribe_response.ResultCode + ", Description = " + subscribe_response.Description, 100, "ivr_subscribe");
                            if (ussd_menu.action_id == 4)
                            {
                                menu_2_display = Api.handlers.ussd_mo.SubscribeMultiServiceMenu(subscriber_service.service_id, subscribe_response.ResultCode, ref lines);
                            }
                            else
                            {
                                menu_2_display = "demande de désinscription prise en compte.";
                            }
                        }
                    }
                }
                DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + ",1, '" + ussdString + "', " + ussd_menu.action_id + ", " + (ussd_session == null ? 0 : ussd_session.page_number) + "," + (ussd_session == null ? 0 : ussd_session.odd_page) + "," + (ussd_session == null ? 0 : ussd_session.game_id) + "," + topic_id + ",'" + user_session_id + "');", "DBConnectionString_104", ref lines);
            }

            if (String.IsNullOrEmpty(result))
            {
                switch (topic_id)
                {
                    case 5:
                    case 2:
                    case 7:
                    case 12:
                        int page_number = (ussd_session != null ? ussd_session.page_number : 1);
                        string rapidos_string = (ussd_session != null ? ussd_session.rapidos_string : "0");
                        int odd_page = (ussd_session != null ? ussd_session.odd_page : 0);
                        Int64 game_id = (ussd_session != null ? ussd_session.game_id : 0);
                        double selected_odd = (ussd_session != null ? ussd_session.selected_odd : 0);
                        int selected_bet_type_id = (ussd_session != null ? ussd_session.selected_bet_type_id : 0);
                        string selected_odd_name = (ussd_session != null ? ussd_session.selected_odd_name : "0");
                        string selected_odd_line = (ussd_session != null ? ussd_session.selected_odd_line : "null");
                        string amount = (ussd_session != null ? ussd_session.amount : "0");
                        int selected_league_id = (ussd_session != null ? ussd_session.selected_league_id : 0);
                        string msgType = "1", opType = "1";
                        int status = 0;
                        string amount_2_pay = (ussd_session != null ? ussd_session.amount_2_pay.ToString() : "0");
                        string bar_code = (ussd_session != null ? ussd_session.bar_code : "0");
                        string selected_subagent_name = (ussd_session != null ? ussd_session.selected_subagent_name : "0");
                        IdoBetUser user = new IdoBetUser();
                        switch (ussd_menu.action_id)
                        {

                            case 109:
                            case 110:
                            case 111:
                            case 112:
                            case 113:
                            case 114:
                            case 115:
                            case 116:
                            case 117:
                            case 118:
                            case 119://enter dusun lottery numbers
                                String[] strlist = new string[] { };
                                bool validate_num_dusan = Api.CommonFuncations.B2TechCGMTN.ValidateDusanLottoInput(ussdString, ussd_menu.action_id, out strlist, ref lines);
                                if (validate_num_dusan)
                                {
                                    menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetConfirmDusanLottoMenu(ussd_menu.action_id, ussdString, out game_id, ref lines);
                                    rapidos_string = ussdString;
                                }
                                else
                                {
                                    menu_2_display = Api.CommonFuncations.B2TechCGMTN.WrongRapidosNumber();
                                }
                                break;
                            case 120:
                            case 121:
                            case 122:
                            case 123:
                            case 124:
                            case 125:
                            case 126:
                            case 127:
                            case 128:
                            case 129:
                            case 130://enter dusan lottery amount
                                switch (ussd_menu.action_id)
                                {
                                    case 120:
                                        game_id = 4;
                                        break;
                                    case 121:
                                        game_id = 3;
                                        break;
                                    case 122:
                                        game_id = 2;
                                        break;
                                    case 123:
                                        game_id = 1;
                                        break;
                                    case 124:
                                        game_id = 11;
                                        break;
                                    case 125:
                                        game_id = 10;
                                        break;
                                    case 126:
                                        game_id = 9;
                                        break;
                                    case 127:
                                        game_id = 5;
                                        break;
                                    case 128:
                                        game_id = 6;
                                        break;
                                    case 129:
                                        game_id = 7;
                                        break;
                                    case 130:
                                        game_id = 8;
                                        break;
                                }
                                ServiceClass lotto_service = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games_cg (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + rapidos_string + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "'," + ussdString + ", " + ussd_menu.service_id + ")", "DBConnectionString_104", ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;

                                menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetCloseDusanLotto(ref lines);

                                LoginRequest LoginRequestBody_lotto = new LoginRequest()
                                {
                                    ServiceID = lotto_service.service_id,
                                    Password = lotto_service.service_password
                                };
                                LoginResponse res_lotto = Login.DoLogin(LoginRequestBody_lotto);
                                if (res_lotto != null)
                                {
                                    if (res_lotto.ResultCode == 1000)
                                    {
                                        string token_id = res_lotto.TokenID;
                                        momo_request = new DYAReceiveMoneyRequest()
                                        {
                                            MSISDN = Convert.ToInt64(MSISDN),
                                            Amount = Convert.ToInt32(ussdString),
                                            ServiceID = lotto_service.service_id,
                                            TokenID = token_id,
                                            TransactionID = "DusanLotto_" + user_session_id
                                        };
                                    }
                                }
                                break;

                            case 80: //Foot Solider Check MSISDN and ask to enter full name 
                                is_close = true;
                                menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetFootSoldiersMSISDNMenu(MSISDN, ussdString, out is_close, service, ref lines);
                                if (is_close)
                                {
                                    msgType = "2";
                                    opType = "2";
                                }
                                else
                                {
                                    Api.DataLayer.DBQueries.ExecuteQuery("insert into ussd_footsoldiers_attempts (user_session_id, footsoldier_msisdn, user_msisdn, full_name, user_id, date_time) values('" + user_session_id + "', " + MSISDN + ", 242" + ussdString + ", '', 0, now())", ref lines);
                                }
                                break;
                            case 79: //Foot Soldier create user
                                is_close = true;
                                Int64 user_msisdn = Api.DataLayer.DBQueries.SelectQueryReturnInt64("SELECT u.user_msisdn from ussd_footsoldiers_attempts u WHERE u.user_session_id = '" + user_session_id + "' order by u.id desc limit 1", ref lines);
                                if (user_msisdn > 0)
                                {
                                    Api.CommonFuncations.B2TechCGMTN.CreateUserResponse create_user = new Api.CommonFuncations.B2TechCGMTN.CreateUserResponse();
                                    menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetFootSoldiersFullNameMenu(MSISDN, ussdString, out is_close, ussd_menu, user_msisdn.ToString(), out create_user, ref lines);
                                    if (is_close)
                                    {
                                        LoginRequest LoginRequestBody = new LoginRequest()
                                        {
                                            ServiceID = service.service_id,
                                            Password = service.service_password
                                        };
                                        LoginResponse res = Login.DoLogin(LoginRequestBody);
                                        if (res != null)
                                        {
                                            if (res.ResultCode == 1000)
                                            {

                                                Int64 rec_id = Api.DataLayer.DBQueries.SelectQueryReturnInt64("SELECT u.id from ussd_footsoldiers_attempts u WHERE u.user_session_id = '" + user_session_id + "' order by u.id desc limit 1", ref lines);
                                                Api.DataLayer.DBQueries.ExecuteQuery("update ussd_footsoldiers_attempts set user_id = " + create_user.userId + ", full_name = '" + ussdString + "' where id = " + rec_id, ref lines);
                                                string token_id = res.TokenID;
                                                string sms_text = "Felicitations, vous vous etes inscrit avec succes sur YellowBet. https://yellowbet.cg/ Mot de passe: " + create_user.password;
                                                Api.DataLayer.DBQueries.ExecuteQuery("insert into foot_soldiers_sms (date_time, msisdn, service_id, sms_text) values(now(), " + user_msisdn + "," + service.service_id + ",'" + sms_text + "');", ref lines);
                                                SendSMSRequest RequestSendSMSBody1 = new SendSMSRequest()
                                                {
                                                    ServiceID = service.service_id,
                                                    MSISDN = user_msisdn,
                                                    Text = sms_text,
                                                    TokenID = token_id,
                                                    TransactionID = "12345"
                                                };
                                                SendSMSResponse response_sendsms1 = SendSMS.DoSMS(RequestSendSMSBody1);
                                                if (response_sendsms1 != null)
                                                {
                                                    if (response_sendsms1.ResultCode == 1010 || response_sendsms1.ResultCode == 1000)
                                                    {
                                                        lines = Add2Log(lines, " Send SMS Was OK", 100, lines[0].ControlerName);
                                                    }
                                                    else
                                                    {
                                                        lines = Add2Log(lines, " Send SMS Failed", 100, lines[0].ControlerName);
                                                    }
                                                }
                                                else
                                                {
                                                    lines = Add2Log(lines, " Send SMS Failed", 100, lines[0].ControlerName);
                                                }
                                            }
                                        }
                                    }
                                }
                                else
                                {
                                    is_close = false;
                                    menu_2_display = "Error 78_2" + Environment.NewLine;
                                    menu_2_display = menu_2_display + Environment.NewLine + "M) ";// Menu Principal ";

                                }
                                break;
                            case 78: //Foot Soldier Main Menu asking to enter MSISDN
                                menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetFootSoldierMainMenu(MSISDN, ref lines);
                                break;

                            case 86:
                            case 87:
                                if (ussdString == "1")
                                {
                                    switch (ussd_menu.action_id)
                                    {
                                        case 86:
                                            game_id = 41;
                                            break;
                                        case 87:
                                            game_id = 42;
                                            break;
                                    }
                                    DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games_cg (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + rapidos_string + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',2000, " + service.service_id + ")", "DBConnectionString_104", ref lines);
                                    msgType = "2";
                                    opType = "2";
                                    is_close = true;
                                    status = 1;

                                    menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetCloseBet(ussd_session, amount, ref lines);
                                    LoginRequest LoginRequestBody = new LoginRequest()
                                    {
                                        ServiceID = service.service_id,
                                        Password = service.service_password
                                    };
                                    LoginResponse res = Login.DoLogin(LoginRequestBody);
                                    if (res != null)
                                    {
                                        if (res.ResultCode == 1000)
                                        {
                                            string token_id = res.TokenID;
                                            momo_request = new DYAReceiveMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = 2000,
                                                ServiceID = service.service_id,
                                                TokenID = token_id,
                                                TransactionID = "Rapidos_" + user_session_id
                                            };
                                        }
                                    }

                                }
                                break;
                            case 75:
                            case 76:
                            case 77:
                                bool placebet1 = false;
                                double num3;
                                int max_bet = 0;
                                bool check_amount = double.TryParse(ussdString, out num3);
                                if (check_amount == true)
                                {
                                    switch (ussd_menu.action_id)
                                    {
                                        case 75:
                                            game_id = 58;
                                            max_bet = 20000;
                                            break;
                                        case 76:
                                            game_id = 59;
                                            max_bet = 4000;
                                            break;
                                        case 77:
                                            game_id = 60;
                                            max_bet = 200;
                                            break;
                                    }
                                    if (num3 >= 50 && num3 <= max_bet)
                                    {
                                        DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games_cg (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + rapidos_string + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "'," + num3 + ", " + service.service_id + ")", "DBConnectionString_104", ref lines);
                                        placebet1 = true;
                                    }
                                    else
                                    {

                                        menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetWrongPriceBetRapidos(max_bet, ref lines);
                                        DataLayer.DBQueries.ExecuteQuery("delete from ussd_saved_games_cg where user_session_id = '" + user_session_id + "' order by id desc limit 1", "DBConnectionString_104", ref lines);
                                    }
                                }
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                //RequestForOrder
                                //bool req_for_order = GetRequestForOrder(ussd_session, ref lines);
                                if (placebet1)
                                {

                                    menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetCloseBet(ussd_session, amount, ref lines);
                                    LoginRequest LoginRequestBody = new LoginRequest()
                                    {
                                        ServiceID = service.service_id,
                                        Password = service.service_password
                                    };
                                    LoginResponse res = Login.DoLogin(LoginRequestBody);
                                    if (res != null)
                                    {
                                        if (res.ResultCode == 1000)
                                        {
                                            string token_id = res.TokenID;
                                            momo_request = new DYAReceiveMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(ussdString),
                                                ServiceID = service.service_id,
                                                TokenID = token_id,
                                                TransactionID = "Rapidos_" + user_session_id
                                            };
                                        }
                                    }
                                }

                                break;

                            case 72: //Confirm Rapidos
                            case 73:
                            case 74:
                                bool validate_num = Api.CommonFuncations.B2TechCGMTN.ValidateRapidosInput(ussdString, ussd_menu.action_id, out strlist, ref lines);
                                if (validate_num)
                                {
                                    menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetConfirmRapidosMenu(ussd_menu.action_id, ussdString, out game_id, ref lines);
                                    rapidos_string = ussdString;
                                }
                                else
                                {
                                    menu_2_display = Api.CommonFuncations.B2TechCGMTN.WrongRapidosNumber();
                                }
                                break;
                            case 84: //Confirm Lotto
                            case 85:
                                String[] strlist1 = new string[] { };
                                bool validate_num1 = Api.CommonFuncations.B2TechCGMTN.ValidateLottoInput(ussdString, ussd_menu.action_id, out strlist1, ref lines);
                                if (validate_num1)
                                {
                                    menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetConfirmLottoMenu(ussd_menu.action_id, ussdString, out game_id, ref lines);
                                    rapidos_string = ussdString;
                                }
                                else
                                {
                                    menu_2_display = Api.CommonFuncations.B2TechCGMTN.WrongRapidosNumber();
                                }
                                break;
                            case 55://EnterAmountForSubAgent
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                Int64 pos_trans_id = 0;
                                menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetAmountForSubAgentMenu(MSISDN, ussdString, selected_subagent_name, out pos_trans_id, ref lines);
                                if (pos_trans_id > 0)
                                {
                                    ServiceClass subscriber_service1 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                    LoginRequest LoginRequestBody = new LoginRequest()
                                    {
                                        ServiceID = subscriber_service1.service_id,
                                        Password = subscriber_service1.service_password
                                    };
                                    LoginResponse res = Login.DoLogin(LoginRequestBody);
                                    if (res != null)
                                    {
                                        if (res.ResultCode == 1000)
                                        {
                                            string token_id = res.TokenID;
                                            momo_request = new DYAReceiveMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(ussdString),
                                                ServiceID = ussd_menu.service_id,
                                                TokenID = token_id,
                                                TransactionID = "POSTrans_" + pos_trans_id

                                            };
                                        }
                                    }
                                }



                                break;
                            case 54:
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*")) && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetSlectedSubAgentMenu(MSISDN, page_number, ussdString, out selected_subagent_name, ref lines);
                                break;
                            case 53:
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*")) && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetAgentMainMenu(MSISDN, page_number, ref lines);
                                break;
                            case 34: //DepositMoney
                                user = Api.CommonFuncations.B2TechCGMTN.SearchUserNew(MSISDN, ref lines);
                                menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetDepositMoneyMenu(user, ussd_menu, MSISDN, ref lines);
                                break;
                            case 36: //StartDepositMoney
                                user = Api.CommonFuncations.B2TechCGMTN.SearchUserNew(MSISDN, ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetStartDepositMoneyMenu(service, user, ussd_menu, MSISDN, ussdString, out momo_request, ref lines);
                                break;
                            case 33: //WithdrawMoney
                                user = Api.CommonFuncations.B2TechCGMTN.SearchUserNew(MSISDN, ref lines);
                                menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetWithdrawMoneyMenu(user, ref lines);
                                break;
                            case 35: //StartWithdrawMoney
                                user = Api.CommonFuncations.B2TechCGMTN.SearchUserNew(MSISDN, ref lines);
                                menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetStartWithdrawMoneyMenu(user, false, false, false, ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                if (user.isValid == true)
                                {
                                    int number;
                                    bool su = int.TryParse(ussdString, out number);
                                    if (su)
                                    {
                                        if (Convert.ToInt32(ussdString) <= user.AvailableForWithdraw && Convert.ToInt32(ussdString) > 0)
                                        {

                                            menu_2_display = Api.CommonFuncations.B2TechCGMTN.CheckBeforeWithdrawMenu(service, MSISDN, ref lines);
                                            if (String.IsNullOrEmpty(menu_2_display))
                                            {
                                                //Refund user
                                                ServiceClass subscriber_service1 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                                LoginRequest LoginRequestBody1 = new LoginRequest()
                                                {
                                                    ServiceID = service.service_id,
                                                    Password = service.service_password
                                                };
                                                LoginResponse res1 = Login.DoLogin(LoginRequestBody1);
                                                if (res1 != null)
                                                {
                                                    if (res1.ResultCode == 1000)
                                                    {
                                                        string token_id = res1.TokenID;
                                                        DYATransferMoneyRequest momotransfer_request = new DYATransferMoneyRequest()
                                                        {
                                                            MSISDN = Convert.ToInt64(MSISDN),
                                                            Amount = Convert.ToInt32(ussdString),
                                                            ServiceID = service.service_id,
                                                            TokenID = token_id,
                                                            TransactionID = "USSDWithdraw_" + Guid.NewGuid().ToString()
                                                        };
                                                        string postBody = "", response_body = "";
                                                        //bool wd_result = StartWithdraw(user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                        bool do_withdraw = false;
                                                        string code = "";
                                                        if (user.AvailableForWithdraw > 0)
                                                        {
                                                            do_withdraw = true;
                                                            code = Api.CommonFuncations.B2TechCGMTN.StartWithdrawNew(user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                        }



                                                        menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetStartWithdrawMoneyMenu(user, true, true, false, ref lines);

                                                        if (code == "")
                                                        {
                                                            if (do_withdraw)
                                                            {
                                                                menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetStartWithdrawMoneyMenu(user, false, false, false, ref lines);
                                                                string mail_body = "<p><h2>Start Withdraw MTN Congo has failed</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>Json: </b>" + postBody + "<br><b>Response: </b>" + response_body + "<br></p>";
                                                                string mail_subject = "Start Withdraw MTN Congo has failed for user - " + user.id;
                                                                string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                                string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                                string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                                string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                                int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                                string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                                CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                                            }

                                                        }
                                                        else
                                                        {
                                                            DYATransferMoneyResponse momotransfer_response = CommonFuncations.DYATransferMoney.DoTransfer(momotransfer_request);
                                                            if (momotransfer_response.ResultCode == 1000)
                                                            {
                                                                postBody = "";
                                                                response_body = "";
                                                                bool end_withdraw = Api.CommonFuncations.B2TechCGMTN.EndWithdrawNew(momotransfer_response.Timestamp, momotransfer_response.TransactionID, true, code, user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                                if (!end_withdraw)
                                                                {
                                                                    menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetStartWithdrawMoneyMenu(user, false, false, false, ref lines);
                                                                    string mail_body = "", mail_subject = "";
                                                                    mail_body = "<p><h2>End Withdraw MTN Congo has failed but DYATransfer was ok</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>Request: </b>" + postBody + "<br>Response: " + response_body + "<br></p>";
                                                                    mail_subject = "End Withdraw MTN Congo has failed but DYATransfer was ok - " + user.id;
                                                                    string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                                    string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                                    string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                                    string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                                    int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                                    string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                                    CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                                                }
                                                                GoogleAnalytics.SendData2GoogleAnalytics("UA-154843894-1", "ussd", Base64.Reverse(MSISDN), System.Web.HttpContext.Current.Request.ServerVariables["REMOTE_ADDR"], "BJ", "event", "Withdraw", "MOMO", "-" + ussdString, "/", ref lines);
                                                            }
                                                            else
                                                            {
                                                                menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetStartWithdrawMoneyMenu(user, false, false, false, ref lines);
                                                                postBody = "";
                                                                response_body = "";
                                                                bool end_withdraw = B2TechCGMTN.EndWithdrawNew(momotransfer_response.Timestamp, momotransfer_response.TransactionID, false, code, user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                                string mail_body = "", mail_subject = "";
                                                                mail_body = "<p><h2>Withdraw MTN Congo has failed DYATransfer</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>MOMO Response: </b>" + momotransfer_response.ResultCode + " " + momotransfer_response.Description + "<br>User was refunded: " + end_withdraw + "<br><b>Request: </b>" + postBody + "<br><b>Response: </b>" + response_body + "</p>";
                                                                mail_subject = "Withdraw MTN Congo has failed DYATransfer for user - " + user.id;
                                                                string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                                string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                                string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                                string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                                int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                                string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                                CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                                            }
                                                        }



                                                    }
                                                }
                                            }


                                        }
                                        else
                                        {
                                            //user has requested more than allowed
                                            menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetStartWithdrawMoneyMenu(user, false, false, true, ref lines);
                                        }
                                    }
                                    else
                                    {
                                        menu_2_display = "Option invalide ";
                                    }

                                }
                                break;
                            case 25://CloseXXXBet
                            case 26:
                            case 27:
                                double num4 = 0;
                                bool check_amount4 = double.TryParse(amount, out num4);
                                if (num4 >= 50 && num4 <= 1000000)
                                {
                                    List<Int64> saved_ids = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, "_cg", ref lines);
                                    if (saved_ids != null)
                                    {
                                        foreach (Int64 s in saved_ids)
                                        {
                                            DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games_cg set amount = " + amount + " where id = " + s, "DBConnectionString_104", ref lines);
                                        }
                                    }
                                    msgType = "2";
                                    opType = "2";
                                    is_close = true;
                                    status = 1;
                                    //RequestForOrder
                                    //bool req_for_order = GetRequestForOrder(ussd_session, ref lines);
                                    bool req_for_order = Api.CommonFuncations.B2TechCGMTN.PlaceBet(ussd_session, ref lines);

                                    if (req_for_order == true)
                                    {
                                        menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetCloseBet(ussd_session, amount, ref lines);
                                        ServiceClass subscriber_service2 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                        LoginRequest LoginRequestBody = new LoginRequest()
                                        {
                                            ServiceID = subscriber_service2.service_id,
                                            Password = subscriber_service2.service_password
                                        };
                                        LoginResponse res = Login.DoLogin(LoginRequestBody);
                                        if (res != null)
                                        {
                                            if (res.ResultCode == 1000)
                                            {
                                                string token_id = res.TokenID;
                                                momo_request = new DYAReceiveMoneyRequest()
                                                {
                                                    MSISDN = Convert.ToInt64(MSISDN),
                                                    Amount = Convert.ToInt32(amount),
                                                    ServiceID = ussd_menu.service_id,
                                                    TokenID = token_id,
                                                    TransactionID = user_session_id

                                                };
                                            }
                                        }
                                    }
                                    else
                                    {
                                        menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetCloseBetFailed(ref lines);
                                    }
                                }
                                else
                                {
                                    menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetWrongPriceBetMeny(ref lines);
                                    DataLayer.DBQueries.ExecuteQuery("delete from ussd_saved_games_cg where user_session_id = '" + user_session_id + "' order by id desc limit 1", "DBConnectionString_104", ref lines);
                                }

                                break;
                            case 22: //ConfirmBetXXX
                            case 23:
                            case 24:
                                amount = ussdString;
                                double num1;
                                bool res_parse = double.TryParse(amount, out num1);
                                if (res_parse == true)
                                {
                                    if (num1 >= 50 && num1 <= 1000000)
                                    {
                                        menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetConfirmBet(ussd_session, amount, ref lines);
                                    }
                                    else
                                    {

                                        menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetWrongPriceBetMeny(ref lines);
                                        DataLayer.DBQueries.ExecuteQuery("delete from ussd_saved_games_cg where user_session_id = '" + user_session_id + "' order by id desc limit 1", "DBConnectionString_104", ref lines);
                                    }
                                }
                                odd_page = 0;

                                break;
                            case 19: //PayAndConfirmXXX
                            case 20:
                            case 21:
                                //need to check if user clicks back and then returns to this section.
                                //DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games_cg (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + ussdString + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',0, " + service.service_id + ")", ref lines);
                                menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetPayAndConfirm(ussd_session, ref lines);
                                odd_page = 0;
                                break;
                            case 32: //ticket status
                                page_number = (page_number == 0 ? 1 : page_number);
                                menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetCheckTicketMenu(MSISDN, page_number, ussdString, ref lines);
                                break;
                            case 31: //tickets status by phone
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*")) && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetCheckTicketsMenu(MSISDN, page_number, ref lines);
                                break;
                            case 52:
                                menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetPayoutBarcodeTicket(ussd_menu, MSISDN, ref lines);
                                if (String.IsNullOrEmpty(menu_2_display))
                                {
                                    msgType = "2";
                                    opType = "2";
                                    is_close = true;
                                    //Refund user
                                    ServiceClass subscriber_service2 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                    LoginRequest LoginRequestBody2 = new LoginRequest()
                                    {
                                        ServiceID = service.service_id,
                                        Password = service.service_password
                                    };
                                    LoginResponse res2 = Login.DoLogin(LoginRequestBody2);
                                    if (res2 != null)
                                    {
                                        if (res2.ResultCode == 1000)
                                        {
                                            string token_id = res2.TokenID;
                                            DYATransferMoneyRequest momotransfer_request = new DYATransferMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(amount_2_pay),
                                                ServiceID = service.service_id,
                                                TokenID = token_id,
                                                TransactionID = "POSTicketPayout_" + bar_code
                                            };
                                            DYATransferMoneyResponse momotransfer_response = CommonFuncations.DYATransferMoney.DoTransfer(momotransfer_request);

                                            if (momotransfer_response.ResultCode == 1000)
                                            {
                                                int cashier_id = Api.CommonFuncations.B2TechCGMTN.GetCashierID(MSISDN, ref lines);
                                                if (cashier_id > 0)
                                                {
                                                    DataLayer.DBQueries.ExecuteQuery("insert into casheir_transactions (cashier_id, bar_code, total_payout, date_time, dya_id) values(" + cashier_id + ", '" + bar_code + "', " + amount_2_pay + ", now()," + momotransfer_response.TransactionID + ");", ref lines);
                                                }
                                                GoogleAnalytics.SendData2GoogleAnalytics("UA-154843894-1", "ussd", Base64.Reverse(MSISDN), System.Web.HttpContext.Current.Request.ServerVariables["REMOTE_ADDR"], "BJ", "event", "PyoutPOSTicket", "MOMO", "-" + ussdString, "/", ref lines);
                                                //dopayout
                                                bool dopayout_res = Api.CommonFuncations.B2TechCGMTN.DoPayOutNew(momotransfer_response.Timestamp, momotransfer_response.TransactionID, bar_code, ref lines);
                                                //bool dopayout_res = iDoBet.DoPayout(bar_code, ref lines);
                                                menu_2_display = "Félicitations, le billet a été remboursé sur votre compte MTN MOMO.";

                                            }
                                            else
                                            {
                                                menu_2_display = "Le billet n'a pas été remboursé sur votre compte MTN MOMO." + Environment.NewLine;
                                                menu_2_display = menu_2_display + "Veuillez réessayer";
                                                string mail_body = "<p><h2>Payout MTN Congo has failed DYATransfer</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>MOMO Response: </b>" + momotransfer_response.ResultCode + " " + momotransfer_response.Description + "<br></p>";
                                                string mail_subject = "Payout MTN Congo has failed DYATransfer for user - " + user.id;
                                                string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                            }
                                        }
                                    }
                                }

                                break;
                            case 44: //search ticket
                                menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetCheckTicketByBarcodeMenu(MSISDN, ussdString, out amount_2_pay, ref lines);
                                bar_code = ussdString;
                                break;
                            case 39: //add another game
                                if (game_id > 0)
                                {
                                    //DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games_cg (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + ussdString + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',0, " + service.service_id + ")", ref lines);
                                    game_id = 0;
                                    selected_odd = 0;
                                    page_number = 1;
                                    odd_page = 0;
                                }
                                menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetSportsTypeMenu(ref lines);
                                break;
                            case 41: //Delete and Start Over
                                List<Int64> saved_ids1 = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, "_cg", ref lines);
                                if (saved_ids1 != null)
                                {
                                    foreach (Int64 s in saved_ids1)
                                    {
                                        DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games_cg set status = 3 where id = " + s, "DBConnectionString_104", ref lines);
                                    }
                                }

                                //DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games_cg set status = 3 where user_seesion_id = '" + user_session_id + "'", ref lines);
                                game_id = 0;
                                odd_page = 0;
                                selected_odd = 0;
                                page_number = 1;
                                menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetSportsTypeMenu(ref lines);
                                ussd_menu.action_id = 2;
                                break;
                            case 48:
                                menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetSoccerLeagueMenu(35, "0", ussd_menu.ussd_id, ref lines, out selected_league_id);
                                break;
                            case 47:
                                menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetSoccerLeagueMenu(32, "0", ussd_menu.ussd_id, ref lines, out selected_league_id);
                                break;
                            case 37: //display soccer leagu
                                menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetSoccerLeagueMenu(31, "0", ussd_menu.ussd_id, ref lines, out selected_league_id);
                                break;
                            case 49:
                            case 50:
                            case 38://selected league
                            case 28://Start Over
                            case 29:
                            case 30:
                            case 16://AddXXXGame or 
                            case 17:
                            case 18:
                            case 7: //DisplayXXXTopEvents   
                            case 8:
                            case 9:
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*")) && page_number > 0)
                                {
                                    page_number = page_number - 1;
                                }
                                if (ussd_menu.action_id == 28 || ussd_menu.action_id == 29 || ussd_menu.action_id == 30)
                                {
                                    List<Int64> saved_ids2 = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, "_cg", ref lines);
                                    if (saved_ids2 != null)
                                    {
                                        foreach (Int64 s in saved_ids2)
                                        {
                                            DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games_cg set status = 3 where id = " + s, "DBConnectionString_104", ref lines);
                                        }
                                    }
                                    //DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games_cg set status = 3 where user_seesion_id = '"+user_session_id+"'", ref lines);
                                    game_id = 0;
                                    selected_odd = 0;
                                    odd_page = 0;
                                    page_number = 1;

                                }
                                if (ussd_menu.action_id == 16 || ussd_menu.action_id == 17 || ussd_menu.action_id == 18)
                                {
                                    if (game_id > 0)
                                    {
                                        //DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games_cg (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + ussdString + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',0, " + service.service_id + ")", ref lines);
                                        game_id = 0;
                                        selected_odd = 0;
                                        page_number = 1;
                                        odd_page = 0;
                                    }

                                }
                                switch (ussd_menu.action_id)
                                {
                                    case 38:
                                        menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetEventsMenu(ussdString, 31, page_number, ref lines, out selected_league_id, selected_league_id, ussd_menu);
                                        break;
                                    case 49:
                                        menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetEventsMenu(ussdString, 32, page_number, ref lines, out selected_league_id, selected_league_id, ussd_menu);
                                        break;
                                    case 50:
                                        menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetEventsMenu(ussdString, 35, page_number, ref lines, out selected_league_id, selected_league_id, ussd_menu);
                                        break;
                                    case 28:
                                    case 16:
                                    case 7:
                                        menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetEventsMenu(31, page_number, ref lines);
                                        break;
                                    case 29:
                                    case 17:
                                    case 8:
                                        menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetEventsMenu(32, page_number, ref lines);
                                        break;
                                    case 30:
                                    case 18:
                                    case 9:
                                        menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetEventsMenu(35, page_number, ref lines);
                                        break;
                                }


                                break;
                            case 10: //DisplayXXXGame
                            case 11:
                            case 12:
                                page_number = (page_number == 0 ? 1 : page_number);
                                selected_odd = 0;
                                if (ussdString.Contains("#"))
                                {
                                    odd_page = odd_page + 1;
                                }
                                if ((ussdString.Contains("*")) && odd_page > 0)
                                {
                                    odd_page = odd_page - 1;
                                }
                                try
                                {
                                    switch (ussd_menu.action_id)
                                    {
                                        case 10:
                                            menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetGameOddsMenu(31, page_number, ussdString, game_id, odd_page, out game_id, selected_league_id, ref lines);
                                            break;
                                        case 11:
                                            menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetGameOddsMenu(32, page_number, ussdString, game_id, odd_page, out game_id, selected_league_id, ref lines);
                                            break;
                                        case 12:
                                            menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetGameOddsMenu(35, page_number, ussdString, game_id, odd_page, out game_id, selected_league_id, ref lines);
                                            break;
                                    }
                                }
                                catch(Exception ex)
                                {
                                    menu_2_display = "*) Retour";
                                    menu_2_display = menu_2_display + Environment.NewLine + "M) ";
                                }
                                break;
                            case 13: //ConfirmXXXGame (select odd)
                            case 14:
                            case 15:
                                switch (ussd_menu.action_id)
                                {
                                    case 13:
                                        menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetConfirmMenu(31, game_id, ussdString, odd_page, out selected_odd, out selected_bet_type_id, out selected_odd_name, out selected_odd_line, ref lines, ussd_session, MSISDN, service);
                                        break;
                                    case 14:
                                        menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetConfirmMenu(32, game_id, ussdString, odd_page, out selected_odd, out selected_bet_type_id, out selected_odd_name, out selected_odd_line, ref lines, ussd_session, MSISDN, service);
                                        break;
                                    case 15:
                                        menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetConfirmMenu(35, game_id, ussdString, odd_page, out selected_odd, out selected_bet_type_id, out selected_odd_name, out selected_odd_line, ref lines, ussd_session, MSISDN, service);
                                        break;
                                }
                                break;
                            case 92: //FreeBet
                                bool placebet2 = false;
                                USSDBonus ub = null;
                                menu_2_display = Api.CommonFuncations.B2TechCGMTN.CheckFreeBet(ussd_session, MSISDN, out placebet2, out ub, ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                if (String.IsNullOrEmpty(menu_2_display) && placebet2)
                                {
                                    List<Int64> saved_ids3 = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, "_cg", ref lines);
                                    if (saved_ids3 != null)
                                    {
                                        foreach (Int64 s in saved_ids3)
                                        {
                                            DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games_cg set amount = " + ub.amount + " where id = " + s, "DBConnectionString_104", ref lines);
                                        }
                                    }

                                    bool req_for_order = Api.CommonFuncations.B2TechCGMTN.PlaceBet(ussd_session, ref lines);
                                    if (req_for_order == true)
                                    {
                                        //final placebet
                                        Int64 dya_id = Api.DataLayer.DBQueries.ExecuteQueryReturnInt64("insert into dya_transactions (msisdn, service_id, date_time, amount, result, result_desc, dya_method, transaction_id) values(" + MSISDN + "," + service.service_id + ",now()," + ub.amount + ",'02','USSD Bonus',2,'" + ussd_session.user_seesion_id + "')", ref lines);
                                        DYATransactions dya_trans = UpdateGetDYAReciveTrans(dya_id, "02", "USSD Bonus", ref lines);
                                        ExecuteOrderDetails barcode = null;
                                        string postBody = "", response_body = "";
                                        if (dya_trans.partner_transid.Contains("Rapidos_"))
                                        {
                                            barcode = CommonFuncations.B2TechCGMTN.PlaceBetRapidos(dya_trans, out postBody, out response_body, ref lines);
                                        }
                                        else
                                        {
                                            barcode = CommonFuncations.B2TechCGMTN.GetExecuteOrderNew(dya_trans, out postBody, out response_body, ref lines);
                                        }
                                        if (barcode != null)
                                        {
                                            double total_ratio = (Convert.ToDouble(barcode.max_payout) / Convert.ToDouble(barcode.amount));
                                            Api.DataLayer.DBQueries.ExecuteQuery("insert into ussd_bonus_bets (ussd_bonus_user_id, amount, odd, selections, barcode, payout_dya_id, date_time) values(" + ub.bonus_user_id + "," + ub.amount + "," + total_ratio + "," + saved_ids3.Count() + ",'" + barcode.barcode + "',0,now())", ref lines);
                                            string text_msg_ms = "Bonjour, votre bonus pari a ete place avec succes.\n";// + Environment.NewLine;
                                            text_msg_ms = text_msg_ms + "Numero de commande: " + barcode.order_number + "\n";// Environment.NewLine;
                                            text_msg_ms = text_msg_ms + "Code a barre: " + barcode.barcode + "\n";//Environment.NewLine;
                                            text_msg_ms = text_msg_ms + "Montant: " + barcode.amount + "\n";//Environment.NewLine;
                                            text_msg_ms = text_msg_ms + "Gain Maximum: " + barcode.max_payout;//Environment.NewLine;
                                            lines = Add2Log(lines, " total_bonus =  " + barcode.total_bonus, 100, lines[0].ControlerName);
                                            if (!String.IsNullOrEmpty(barcode.total_bonus))
                                            {
                                                text_msg_ms = text_msg_ms + "\nBonus: " + barcode.total_bonus;//Environment.NewLine;
                                            }
                                            //send sms
                                            LoginRequest LoginRequestBody = new LoginRequest()
                                            {
                                                ServiceID = service.service_id,
                                                Password = service.service_password
                                            };
                                            LoginResponse res = Login.DoLogin(LoginRequestBody);
                                            if (res != null)
                                            {
                                                if (res.ResultCode == 1000)
                                                {
                                                    string token_id = res.TokenID;
                                                    SendSMSRequest RequestSendSMSBody1 = new SendSMSRequest()
                                                    {
                                                        ServiceID = service.service_id,
                                                        MSISDN = Convert.ToInt64(MSISDN),
                                                        Text = text_msg_ms,
                                                        TokenID = token_id,
                                                        TransactionID = "12345"
                                                    };
                                                    SendSMSResponse response_sendsms1 = SendSMS.DoSMS(RequestSendSMSBody1);
                                                    if (response_sendsms1 != null)
                                                    {
                                                        if (response_sendsms1.ResultCode == 1010 || response_sendsms1.ResultCode == 1000)
                                                        {
                                                            lines = Add2Log(lines, " Send SMS Was OK", 100, lines[0].ControlerName);
                                                        }
                                                        else
                                                        {
                                                            lines = Add2Log(lines, " Send SMS Failed", 100, lines[0].ControlerName);
                                                        }
                                                    }
                                                    else
                                                    {
                                                        lines = Add2Log(lines, " Send SMS Failed", 100, lines[0].ControlerName);
                                                    }
                                                }
                                            }
                                        }
                                        menu_2_display = Api.CommonFuncations.B2TechCGMTN.GetUSSDBonusCloseBet(barcode, ref lines);
                                    }
                                }

                                break;
                        }
                        lines = Add2Log(lines, " page_number = " + page_number, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " game_id = " + game_id, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " odd_page = " + odd_page, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " selected_odd = " + selected_odd, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " amount = " + amount, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " selected_league_id = " + selected_league_id, 100, "ivr_subscribe");
                        result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, menu_2_display, msgType, opType);
                        DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id, selected_odd, selected_bet_type_id,selected_odd_name, selected_odd_line, amount, selected_league_id, amount_2_pay, bar_code, selected_subagent_name, rapidos_string) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + "," + status + ", '" + ussdString + "', " + ussd_menu.action_id + ", " + page_number + "," + odd_page + "," + game_id + "," + topic_id + ",'" + user_session_id + "'," + selected_odd + "," + selected_bet_type_id + ",'" + selected_odd_name + "','" + selected_odd_line + "', " + amount + "," + selected_league_id + "," + amount_2_pay + ",'" + bar_code + "','" + selected_subagent_name + "', '" + rapidos_string + "');", "DBConnectionString_104", ref lines);
                        break;
                }
            }

            return result;
        }

        public static string AirtelCongoUSSDBehaviuer142(ServiceClass service, string ussdString, string ServiceID, string MSISDN, string linkid, string receiveCB, string senderCB, string serviceCode, USSDMenu ussd_menu, USSDSession ussd_session, out DYAReceiveMoneyRequest momo_request, ref List<LogLines> lines, out string menu_2_display, out bool is_close, string force_session_id)
        {
            momo_request = null;
            menu_2_display = "";
            is_close = false;
            string result = "";
            force_session_id = (String.IsNullOrEmpty(force_session_id) ? Guid.NewGuid().ToString() : force_session_id);
            string user_session_id = (ussd_session == null ? force_session_id : ussd_session.user_seesion_id);
            int topic_id = (ussd_session != null ? ussd_session.topic_id : ussd_menu.topic_id);
            if (!String.IsNullOrEmpty(ussd_menu.menu_2_display))
            {
                menu_2_display = ussd_menu.menu_2_display;
                result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, ussd_menu.menu_2_display, "1", "1");
                DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + ",0, '" + ussdString + "', " + ussd_menu.action_id + ", " + (ussd_session == null ? 0 : ussd_session.page_number) + "," + (ussd_session == null ? 0 : ussd_session.odd_page) + "," + (ussd_session == null ? 0 : ussd_session.game_id) + "," + topic_id + ",'" + user_session_id + "');", "DBConnectionString_104", ref lines);
            }
            if (ussd_menu.action_id == 3) //close
            {
                menu_2_display = ussd_menu.menu_2_display;
                is_close = true;
                result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, menu_2_display, "2", "2");
                DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + ",1, '" + ussdString + "', " + ussd_menu.action_id + ", " + (ussd_session == null ? 0 : ussd_session.page_number) + "," + (ussd_session == null ? 0 : ussd_session.odd_page) + "," + (ussd_session == null ? 0 : ussd_session.game_id) + "," + topic_id + ",'" + user_session_id + "');", "DBConnectionString_104", ref lines);
            }

            if (ussd_menu.action_id == 4 || ussd_menu.action_id == 5 || ussd_menu.action_id == 60) //subscribe or unsubscribe
            {
                ServiceClass subscriber_service = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                LoginRequest LoginRequestBody = new LoginRequest()
                {
                    ServiceID = subscriber_service.service_id,
                    Password = subscriber_service.service_password
                };
                LoginResponse res = Login.DoLogin(LoginRequestBody);

                menu_2_display = "Thank You ";

                is_close = true;
                //result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, "Thank You", "2", "2");
                //lines = Add2Log(lines, "Soap = " + result, 100, "ussd_mo");
                //string soap_url = Cache.ServerSettings.GetServerSettings("SDPUSSDPush_" + service.operator_id + (service.is_staging == true ? "_STG" : ""), ref lines);
                //lines = Add2Log(lines, "Sending to URL = " + soap_url, 100, "ussd_mo");
                //string response = CommonFuncations.CallSoap.CallSoapRequest(soap_url, result, ref lines);
                //lines = Add2Log(lines, "SendUSSD Response = " + response, 100, "ussd_mo");
                result = "";
                if (res != null)
                {
                    if (res.ResultCode == 1000)
                    {
                        string token_id = res.TokenID;
                        SubscribeRequest subscribe_RequestBody = new SubscribeRequest()
                        {
                            ServiceID = subscriber_service.service_id,
                            TokenID = token_id,
                            MSISDN = Convert.ToInt64(MSISDN),
                            TransactionID = "ussd_mo",
                            ActivationID = "3"
                        };
                        SubscribeResponse subscribe_response = null;
                        if (ussd_menu.action_id == 60)
                        {
                            subscribe_response = CommonFuncations.UnSubscribe.DoUnSubscribe(subscribe_RequestBody);
                            subscriber_service = GetServiceByServiceID(938, ref lines);
                            LoginRequestBody = new LoginRequest()
                            {
                                ServiceID = subscriber_service.service_id,
                                Password = subscriber_service.service_password
                            };
                            res = Login.DoLogin(LoginRequestBody);
                            if (res != null)
                            {
                                if (res.ResultCode == 1000)
                                {
                                    token_id = res.TokenID;
                                    subscribe_RequestBody = new SubscribeRequest()
                                    {
                                        ServiceID = subscriber_service.service_id,
                                        TokenID = token_id,
                                        MSISDN = Convert.ToInt64(MSISDN),
                                        TransactionID = "ussd_mo",
                                        ActivationID = "3"
                                    };
                                    subscribe_response = CommonFuncations.UnSubscribe.DoUnSubscribe(subscribe_RequestBody);

                                }
                            }
                            subscriber_service = GetServiceByServiceID(937, ref lines);
                            LoginRequestBody = new LoginRequest()
                            {
                                ServiceID = subscriber_service.service_id,
                                Password = subscriber_service.service_password
                            };
                            res = Login.DoLogin(LoginRequestBody);
                            if (res != null)
                            {
                                if (res.ResultCode == 1000)
                                {
                                    token_id = res.TokenID;
                                    subscribe_RequestBody = new SubscribeRequest()
                                    {
                                        ServiceID = subscriber_service.service_id,
                                        TokenID = token_id,
                                        MSISDN = Convert.ToInt64(MSISDN),
                                        TransactionID = "ussd_mo",
                                        ActivationID = "3"
                                    };
                                    subscribe_response = CommonFuncations.UnSubscribe.DoUnSubscribe(subscribe_RequestBody);
                                }
                            }
                        }
                        else
                        {
                            subscribe_response = (ussd_menu.action_id == 4 ? CommonFuncations.Subscribe.DoSubscribe(subscribe_RequestBody) : CommonFuncations.UnSubscribe.DoUnSubscribe(subscribe_RequestBody));
                        }

                        if (subscribe_response != null)
                        {
                            lines = Add2Log(lines, " ResultCode = " + subscribe_response.ResultCode + ", Description = " + subscribe_response.Description, 100, "ivr_subscribe");
                            if (ussd_menu.action_id == 4)
                            {
                                menu_2_display = Api.handlers.ussd_mo.SubscribeMultiServiceMenu(subscriber_service.service_id, subscribe_response.ResultCode, ref lines);
                            }
                            else
                            {
                                menu_2_display = "demande de désinscription prise en compte.";
                            }
                        }
                    }
                }
                DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + ",1, '" + ussdString + "', " + ussd_menu.action_id + ", " + (ussd_session == null ? 0 : ussd_session.page_number) + "," + (ussd_session == null ? 0 : ussd_session.odd_page) + "," + (ussd_session == null ? 0 : ussd_session.game_id) + "," + topic_id + ",'" + user_session_id + "');", "DBConnectionString_104", ref lines);
            }

            if (String.IsNullOrEmpty(result))
            {
                switch (topic_id)
                {
                    case 5:
                    case 2:
                    case 7:
                    case 12:
                    case 19:
                        int page_number = (ussd_session != null ? ussd_session.page_number : 1);
                        string rapidos_string = (ussd_session != null ? ussd_session.rapidos_string : "0");
                        int odd_page = (ussd_session != null ? ussd_session.odd_page : 0);
                        Int64 game_id = (ussd_session != null ? ussd_session.game_id : 0);
                        double selected_odd = (ussd_session != null ? ussd_session.selected_odd : 0);
                        int selected_bet_type_id = (ussd_session != null ? ussd_session.selected_bet_type_id : 0);
                        string selected_odd_name = (ussd_session != null ? ussd_session.selected_odd_name : "0");
                        string selected_odd_line = (ussd_session != null ? ussd_session.selected_odd_line : "null");
                        string amount = (ussd_session != null ? ussd_session.amount : "0");
                        int selected_league_id = (ussd_session != null ? ussd_session.selected_league_id : 0);
                        string msgType = "1", opType = "1";
                        int status = 0;
                        string amount_2_pay = (ussd_session != null ? ussd_session.amount_2_pay.ToString() : "0");
                        string bar_code = (ussd_session != null ? ussd_session.bar_code : "0");
                        string selected_subagent_name = (ussd_session != null ? ussd_session.selected_subagent_name : "0");
                        IdoBetUser user = new IdoBetUser();
                        switch (ussd_menu.action_id)
                        {

                            case 109:
                            case 110:
                            case 111:
                            case 112:
                            case 113:
                            case 114:
                            case 115:
                            case 116:
                            case 117:
                            case 118:
                            case 119://enter dusun lottery numbers
                                String[] strlist = new string[] { };
                                bool validate_num_dusan = Api.CommonFuncations.B2TechCGAirtel.ValidateDusanLottoInput(ussdString, ussd_menu.action_id, out strlist, ref lines);
                                if (validate_num_dusan)
                                {
                                    menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetConfirmDusanLottoMenu(ussd_menu.action_id, ussdString, out game_id, ref lines);
                                    rapidos_string = ussdString;
                                }
                                else
                                {
                                    menu_2_display = Api.CommonFuncations.B2TechCGAirtel.WrongRapidosNumber();
                                }
                                break;
                            case 120:
                            case 121:
                            case 122:
                            case 123:
                            case 124:
                            case 125:
                            case 126:
                            case 127:
                            case 128:
                            case 129:
                            case 130://enter dusan lottery amount
                                switch (ussd_menu.action_id)
                                {
                                    case 120:
                                        game_id = 4;
                                        break;
                                    case 121:
                                        game_id = 3;
                                        break;
                                    case 122:
                                        game_id = 2;
                                        break;
                                    case 123:
                                        game_id = 1;
                                        break;
                                    case 124:
                                        game_id = 11;
                                        break;
                                    case 125:
                                        game_id = 10;
                                        break;
                                    case 126:
                                        game_id = 9;
                                        break;
                                    case 127:
                                        game_id = 5;
                                        break;
                                    case 128:
                                        game_id = 6;
                                        break;
                                    case 129:
                                        game_id = 7;
                                        break;
                                    case 130:
                                        game_id = 8;
                                        break;
                                }
                                ServiceClass lotto_service = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games_cg (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + rapidos_string + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "'," + ussdString + ", " + ussd_menu.service_id + ")", "DBConnectionString_104", ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;

                                menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetCloseDusanLotto(ref lines);

                                LoginRequest LoginRequestBody_lotto = new LoginRequest()
                                {
                                    ServiceID = lotto_service.service_id,
                                    Password = lotto_service.service_password
                                };
                                LoginResponse res_lotto = Login.DoLogin(LoginRequestBody_lotto);
                                if (res_lotto != null)
                                {
                                    if (res_lotto.ResultCode == 1000)
                                    {
                                        string token_id = res_lotto.TokenID;
                                        momo_request = new DYAReceiveMoneyRequest()
                                        {
                                            MSISDN = Convert.ToInt64(MSISDN),
                                            Amount = Convert.ToInt32(ussdString),
                                            ServiceID = lotto_service.service_id,
                                            TokenID = token_id,
                                            TransactionID = "DusanLotto_" + user_session_id
                                        };
                                    }
                                }
                                break;

                            case 80: //Foot Solider Check MSISDN and ask to enter full name 
                                is_close = true;
                                menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetFootSoldiersMSISDNMenu(MSISDN, ussdString, out is_close, service, ref lines);
                                if (is_close)
                                {
                                    msgType = "2";
                                    opType = "2";
                                }
                                else
                                {
                                    Api.DataLayer.DBQueries.ExecuteQuery("insert into ussd_footsoldiers_attempts (user_session_id, footsoldier_msisdn, user_msisdn, full_name, user_id, date_time) values('" + user_session_id + "', " + MSISDN + ", 242" + ussdString + ", '', 0, now())", ref lines);
                                }
                                break;
                            case 79: //Foot Soldier create user
                                is_close = true;
                                Int64 user_msisdn = Api.DataLayer.DBQueries.SelectQueryReturnInt64("SELECT u.user_msisdn from ussd_footsoldiers_attempts u WHERE u.user_session_id = '" + user_session_id + "' order by u.id desc limit 1", ref lines);
                                if (user_msisdn > 0)
                                {
                                    Api.CommonFuncations.B2TechCGAirtel.CreateUserResponse create_user = new Api.CommonFuncations.B2TechCGAirtel.CreateUserResponse();
                                    menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetFootSoldiersFullNameMenu(MSISDN, ussdString, out is_close, ussd_menu, user_msisdn.ToString(), out create_user, ref lines);
                                    if (is_close)
                                    {
                                        LoginRequest LoginRequestBody = new LoginRequest()
                                        {
                                            ServiceID = service.service_id,
                                            Password = service.service_password
                                        };
                                        LoginResponse res = Login.DoLogin(LoginRequestBody);
                                        if (res != null)
                                        {
                                            if (res.ResultCode == 1000)
                                            {

                                                Int64 rec_id = Api.DataLayer.DBQueries.SelectQueryReturnInt64("SELECT u.id from ussd_footsoldiers_attempts u WHERE u.user_session_id = '" + user_session_id + "' order by u.id desc limit 1", ref lines);
                                                Api.DataLayer.DBQueries.ExecuteQuery("update ussd_footsoldiers_attempts set user_id = " + create_user.userId + ", full_name = '" + ussdString + "' where id = " + rec_id, ref lines);
                                                string token_id = res.TokenID;
                                                string sms_text = "Felicitations, vous vous etes inscrit avec succes sur YellowBet. https://yellowbet.cg/ Mot de passe: " + create_user.password;
                                                Api.DataLayer.DBQueries.ExecuteQuery("insert into foot_soldiers_sms (date_time, msisdn, service_id, sms_text) values(now(), " + user_msisdn + "," + service.service_id + ",'" + sms_text + "');", ref lines);
                                                SendSMSRequest RequestSendSMSBody1 = new SendSMSRequest()
                                                {
                                                    ServiceID = service.service_id,
                                                    MSISDN = user_msisdn,
                                                    Text = sms_text,
                                                    TokenID = token_id,
                                                    TransactionID = "12345"
                                                };
                                                SendSMSResponse response_sendsms1 = SendSMS.DoSMS(RequestSendSMSBody1);
                                                if (response_sendsms1 != null)
                                                {
                                                    if (response_sendsms1.ResultCode == 1010 || response_sendsms1.ResultCode == 1000)
                                                    {
                                                        lines = Add2Log(lines, " Send SMS Was OK", 100, lines[0].ControlerName);
                                                    }
                                                    else
                                                    {
                                                        lines = Add2Log(lines, " Send SMS Failed", 100, lines[0].ControlerName);
                                                    }
                                                }
                                                else
                                                {
                                                    lines = Add2Log(lines, " Send SMS Failed", 100, lines[0].ControlerName);
                                                }
                                            }
                                        }
                                    }
                                }
                                else
                                {
                                    is_close = false;
                                    menu_2_display = "Error 78_2" + Environment.NewLine;
                                    menu_2_display = menu_2_display + Environment.NewLine + "M) ";// Menu Principal ";

                                }
                                break;
                            case 78: //Foot Soldier Main Menu asking to enter MSISDN
                                menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetFootSoldierMainMenu(MSISDN, ref lines);
                                break;

                            case 86:
                            case 87:
                                if (ussdString == "1")
                                {
                                    switch (ussd_menu.action_id)
                                    {
                                        case 86:
                                            game_id = 41;
                                            break;
                                        case 87:
                                            game_id = 42;
                                            break;
                                    }
                                    DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games_cg (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + rapidos_string + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',2000, " + service.service_id + ")", "DBConnectionString_104", ref lines);
                                    msgType = "2";
                                    opType = "2";
                                    is_close = true;
                                    status = 1;

                                    menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetCloseBet(ussd_session, amount, ref lines);
                                    LoginRequest LoginRequestBody = new LoginRequest()
                                    {
                                        ServiceID = service.service_id,
                                        Password = service.service_password
                                    };
                                    LoginResponse res = Login.DoLogin(LoginRequestBody);
                                    if (res != null)
                                    {
                                        if (res.ResultCode == 1000)
                                        {
                                            string token_id = res.TokenID;
                                            momo_request = new DYAReceiveMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = 2000,
                                                ServiceID = service.service_id,
                                                TokenID = token_id,
                                                TransactionID = "Rapidos_" + user_session_id
                                            };
                                        }
                                    }

                                }
                                break;
                            case 75:
                            case 76:
                            case 77:
                                bool placebet1 = false;
                                double num3;
                                int max_bet = 0;
                                bool check_amount = double.TryParse(ussdString, out num3);
                                if (check_amount == true)
                                {
                                    switch (ussd_menu.action_id)
                                    {
                                        case 75:
                                            game_id = 58;
                                            max_bet = 20000;
                                            break;
                                        case 76:
                                            game_id = 59;
                                            max_bet = 4000;
                                            break;
                                        case 77:
                                            game_id = 60;
                                            max_bet = 200;
                                            break;
                                    }
                                    if (num3 >= 50 && num3 <= max_bet)
                                    {
                                        DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games_cg (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + rapidos_string + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "'," + num3 + ", " + service.service_id + ")", "DBConnectionString_104", ref lines);
                                        placebet1 = true;
                                    }
                                    else
                                    {

                                        menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetWrongPriceBetRapidos(max_bet, ref lines);
                                        DataLayer.DBQueries.ExecuteQuery("delete from ussd_saved_games_cg where user_session_id = '" + user_session_id + "' order by id desc limit 1", "DBConnectionString_104", ref lines);
                                    }
                                }
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                //RequestForOrder
                                //bool req_for_order = GetRequestForOrder(ussd_session, ref lines);
                                if (placebet1)
                                {

                                    menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetCloseBet(ussd_session, amount, ref lines);
                                    LoginRequest LoginRequestBody = new LoginRequest()
                                    {
                                        ServiceID = service.service_id,
                                        Password = service.service_password
                                    };
                                    LoginResponse res = Login.DoLogin(LoginRequestBody);
                                    if (res != null)
                                    {
                                        if (res.ResultCode == 1000)
                                        {
                                            string token_id = res.TokenID;
                                            momo_request = new DYAReceiveMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(ussdString),
                                                ServiceID = service.service_id,
                                                TokenID = token_id,
                                                TransactionID = "Rapidos_" + user_session_id
                                            };
                                        }
                                    }
                                }

                                break;

                            case 72: //Confirm Rapidos
                            case 73:
                            case 74:
                                bool validate_num = Api.CommonFuncations.B2TechCGAirtel.ValidateRapidosInput(ussdString, ussd_menu.action_id, out strlist, ref lines);
                                if (validate_num)
                                {
                                    menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetConfirmRapidosMenu(ussd_menu.action_id, ussdString, out game_id, ref lines);
                                    rapidos_string = ussdString;
                                }
                                else
                                {
                                    menu_2_display = Api.CommonFuncations.B2TechCGAirtel.WrongRapidosNumber();
                                }
                                break;
                            case 84: //Confirm Lotto
                            case 85:
                                String[] strlist1 = new string[] { };
                                bool validate_num1 = Api.CommonFuncations.B2TechCGAirtel.ValidateLottoInput(ussdString, ussd_menu.action_id, out strlist1, ref lines);
                                if (validate_num1)
                                {
                                    menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetConfirmLottoMenu(ussd_menu.action_id, ussdString, out game_id, ref lines);
                                    rapidos_string = ussdString;
                                }
                                else
                                {
                                    menu_2_display = Api.CommonFuncations.B2TechCGAirtel.WrongRapidosNumber();
                                }
                                break;
                            case 55://EnterAmountForSubAgent
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                Int64 pos_trans_id = 0;
                                menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetAmountForSubAgentMenu(MSISDN, ussdString, selected_subagent_name, out pos_trans_id, ref lines);
                                if (pos_trans_id > 0)
                                {
                                    ServiceClass subscriber_service1 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                    LoginRequest LoginRequestBody = new LoginRequest()
                                    {
                                        ServiceID = subscriber_service1.service_id,
                                        Password = subscriber_service1.service_password
                                    };
                                    LoginResponse res = Login.DoLogin(LoginRequestBody);
                                    if (res != null)
                                    {
                                        if (res.ResultCode == 1000)
                                        {
                                            string token_id = res.TokenID;
                                            momo_request = new DYAReceiveMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(ussdString),
                                                ServiceID = ussd_menu.service_id,
                                                TokenID = token_id,
                                                TransactionID = "POSTrans_" + pos_trans_id

                                            };
                                        }
                                    }
                                }



                                break;
                            case 54:
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetSlectedSubAgentMenu(MSISDN, page_number, ussdString, out selected_subagent_name, ref lines);
                                break;
                            case 53:
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetAgentMainMenu(MSISDN, page_number, ref lines);
                                break;
                            case 34: //DepositMoney
                                user = Api.CommonFuncations.B2TechCGAirtel.SearchUserNew(MSISDN, ref lines);
                                menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetDepositMoneyMenu(user, ussd_menu, MSISDN, ref lines);
                                break;
                            case 36: //StartDepositMoney
                                user = Api.CommonFuncations.B2TechCGAirtel.SearchUserNew(MSISDN, ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetStartDepositMoneyMenu(service, user, ussd_menu, MSISDN, ussdString, out momo_request, ref lines);
                                break;
                            case 33: //WithdrawMoney
                                user = Api.CommonFuncations.B2TechCGAirtel.SearchUserNew(MSISDN, ref lines);
                                menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetWithdrawMoneyMenu(user, ref lines);
                                break;
                            case 35: //StartWithdrawMoney
                                user = Api.CommonFuncations.B2TechCGAirtel.SearchUserNew(MSISDN, ref lines);
                                menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetStartWithdrawMoneyMenu(user, false, false, false, ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                if (user.isValid == true)
                                {
                                    if (Convert.ToInt32(ussdString) <= user.AvailableForWithdraw && Convert.ToInt32(ussdString) > 0)
                                    {
                                        menu_2_display = Api.CommonFuncations.B2TechCGAirtel.CheckBeforeWithdrawMenu(service, MSISDN, ref lines);
                                        if (String.IsNullOrEmpty(menu_2_display))
                                        {
                                            //Refund user
                                            ServiceClass subscriber_service1 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                            LoginRequest LoginRequestBody1 = new LoginRequest()
                                            {
                                                ServiceID = service.service_id,
                                                Password = service.service_password
                                            };
                                            LoginResponse res1 = Login.DoLogin(LoginRequestBody1);
                                            if (res1 != null)
                                            {
                                                if (res1.ResultCode == 1000)
                                                {
                                                    string token_id = res1.TokenID;
                                                    DYATransferMoneyRequest momotransfer_request = new DYATransferMoneyRequest()
                                                    {
                                                        MSISDN = Convert.ToInt64(MSISDN),
                                                        Amount = Convert.ToInt32(ussdString),
                                                        ServiceID = service.service_id,
                                                        TokenID = token_id,
                                                        TransactionID = "USSDWithdraw_" + Guid.NewGuid().ToString()
                                                    };
                                                    string postBody = "", response_body = "";
                                                    //bool wd_result = StartWithdraw(user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                    bool do_withdraw = false;
                                                    string code = "";
                                                    if (user.AvailableForWithdraw > 0)
                                                    {
                                                        do_withdraw = true;
                                                        code = Api.CommonFuncations.B2TechCGAirtel.StartWithdrawNew(user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                    }



                                                    menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetStartWithdrawMoneyMenu(user, true, true, false, ref lines);

                                                    if (code == "")
                                                    {
                                                        if (do_withdraw)
                                                        {
                                                            menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetStartWithdrawMoneyMenu(user, false, false, false, ref lines);
                                                            string mail_body = "<p><h2>Start Withdraw Airtel Congo has failed</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>Json: </b>" + postBody + "<br><b>Response: </b>" + response_body + "<br></p>";
                                                            string mail_subject = "Start Withdraw Airtel Congo has failed for user - " + user.id;
                                                            string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                            string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                            string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                            string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                            int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                            string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                            CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                                        }

                                                    }
                                                    else
                                                    {
                                                        DYATransferMoneyResponse momotransfer_response = CommonFuncations.DYATransferMoney.DoTransfer(momotransfer_request);
                                                        if (momotransfer_response.ResultCode == 1000)
                                                        {
                                                            postBody = "";
                                                            response_body = "";
                                                            bool end_withdraw = Api.CommonFuncations.B2TechCGAirtel.EndWithdrawNew(momotransfer_response.Timestamp, momotransfer_response.TransactionID, true, code, user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                            if (!end_withdraw)
                                                            {
                                                                menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetStartWithdrawMoneyMenu(user, false, false, false, ref lines);
                                                                string mail_body = "", mail_subject = "";
                                                                mail_body = "<p><h2>End Withdraw Airtel Congo has failed but DYATransfer was ok</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>Request: </b>" + postBody + "<br>Response: " + response_body + "<br></p>";
                                                                mail_subject = "End Withdraw Airtel Congo has failed but DYATransfer was ok - " + user.id;
                                                                string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                                string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                                string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                                string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                                int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                                string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                                CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                                            }
                                                            GoogleAnalytics.SendData2GoogleAnalytics("UA-154843894-1", "ussd", Base64.Reverse(MSISDN), System.Web.HttpContext.Current.Request.ServerVariables["REMOTE_ADDR"], "BJ", "event", "Withdraw", "MOMO", "-" + ussdString, "/", ref lines);
                                                        }
                                                        else
                                                        {
                                                            menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetStartWithdrawMoneyMenu(user, false, false, false, ref lines);
                                                            postBody = "";
                                                            response_body = "";
                                                            bool end_withdraw = B2TechCGAirtel.EndWithdrawNew(momotransfer_response.Timestamp, momotransfer_response.TransactionID, false, code, user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                            string mail_body = "", mail_subject = "";
                                                            mail_body = "<p><h2>Withdraw Airtel Congo has failed DYATransfer</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>MOMO Response: </b>" + momotransfer_response.ResultCode + " " + momotransfer_response.Description + "<br>User was refunded: " + end_withdraw + "<br><b>Request: </b>" + postBody + "<br><b>Response: </b>" + response_body + "</p>";
                                                            mail_subject = "Withdraw Airtel Congo has failed DYATransfer for user - " + user.id;
                                                            string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                            string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                            string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                            string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                            int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                            string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                            CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                                        }
                                                    }



                                                }
                                            }
                                        }


                                    }
                                    else
                                    {
                                        //user has requested more than allowed
                                        menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetStartWithdrawMoneyMenu(user, false, false, true, ref lines);
                                    }
                                }
                                break;
                            case 25://CloseXXXBet
                            case 26:
                            case 27:
                                double num4 = 0;
                                bool check_amount4 = double.TryParse(amount, out num4);
                                if (num4 >= 50 && num4 <= 1000000)
                                {
                                    List<Int64> saved_ids = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, "_cg", ref lines);
                                    if (saved_ids != null)
                                    {
                                        foreach (Int64 s in saved_ids)
                                        {
                                            DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games_cg set amount = " + amount + " where id = " + s, "DBConnectionString_104", ref lines);
                                        }
                                    }
                                    msgType = "2";
                                    opType = "2";
                                    is_close = true;
                                    status = 1;
                                    //RequestForOrder
                                    //bool req_for_order = GetRequestForOrder(ussd_session, ref lines);
                                    bool req_for_order = Api.CommonFuncations.B2TechCGAirtel.PlaceBet(ussd_session, ref lines);

                                    if (req_for_order == true)
                                    {
                                        menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetCloseBet(ussd_session, amount, ref lines);
                                        ServiceClass subscriber_service2 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                        LoginRequest LoginRequestBody = new LoginRequest()
                                        {
                                            ServiceID = subscriber_service2.service_id,
                                            Password = subscriber_service2.service_password
                                        };
                                        LoginResponse res = Login.DoLogin(LoginRequestBody);
                                        if (res != null)
                                        {
                                            if (res.ResultCode == 1000)
                                            {
                                                string token_id = res.TokenID;
                                                momo_request = new DYAReceiveMoneyRequest()
                                                {
                                                    MSISDN = Convert.ToInt64(MSISDN),
                                                    Amount = Convert.ToInt32(amount),
                                                    ServiceID = ussd_menu.service_id,
                                                    TokenID = token_id,
                                                    TransactionID = user_session_id

                                                };
                                            }
                                        }
                                    }
                                    else
                                    {
                                        menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetCloseBetFailed(ref lines);
                                    }
                                }
                                else
                                {
                                    menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetWrongPriceBetMeny(ref lines);
                                    DataLayer.DBQueries.ExecuteQuery("delete from ussd_saved_games_cg where user_session_id = '" + user_session_id + "' order by id desc limit 1", "DBConnectionString_104", ref lines);
                                }

                                break;
                            case 22: //ConfirmBetXXX
                            case 23:
                            case 24:
                                double num1;
                                amount = ussdString;
                                bool res_parse = double.TryParse(amount, out num1);
                                if (res_parse == true)
                                {
                                    if (num1 >= 50 && num1 <= 1000000)
                                    {
                                        menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetConfirmBet(ussd_session, amount, ref lines);
                                    }
                                    else
                                    {

                                        menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetWrongPriceBetMeny(ref lines);
                                        DataLayer.DBQueries.ExecuteQuery("delete from ussd_saved_games_cg where user_session_id = '" + user_session_id + "' order by id desc limit 1", "DBConnectionString_104", ref lines);
                                    }
                                }
                                odd_page = 0;

                                break;
                            case 19: //PayAndConfirmXXX
                            case 20:
                            case 21:
                                //need to check if user clicks back and then returns to this section.
                                //DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games_cg (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + ussdString + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',0, " + service.service_id + ")", ref lines);
                                menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetPayAndConfirm(ussd_session, ref lines);
                                odd_page = 0;
                                break;
                            case 32: //ticket status
                                page_number = (page_number == 0 ? 1 : page_number);
                                menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetCheckTicketMenu(MSISDN, page_number, ussdString, ref lines);
                                break;
                            case 31: //tickets status by phone
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetCheckTicketsMenu(MSISDN, page_number, ref lines);
                                break;
                            case 52:
                                menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetPayoutBarcodeTicket(ussd_menu, MSISDN, ref lines);
                                if (String.IsNullOrEmpty(menu_2_display))
                                {
                                    msgType = "2";
                                    opType = "2";
                                    is_close = true;
                                    //Refund user
                                    ServiceClass subscriber_service2 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                    LoginRequest LoginRequestBody2 = new LoginRequest()
                                    {
                                        ServiceID = service.service_id,
                                        Password = service.service_password
                                    };
                                    LoginResponse res2 = Login.DoLogin(LoginRequestBody2);
                                    if (res2 != null)
                                    {
                                        if (res2.ResultCode == 1000)
                                        {
                                            string token_id = res2.TokenID;
                                            DYATransferMoneyRequest momotransfer_request = new DYATransferMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(amount_2_pay),
                                                ServiceID = service.service_id,
                                                TokenID = token_id,
                                                TransactionID = "POSTicketPayout_" + bar_code
                                            };
                                            DYATransferMoneyResponse momotransfer_response = CommonFuncations.DYATransferMoney.DoTransfer(momotransfer_request);

                                            if (momotransfer_response.ResultCode == 1000)
                                            {
                                                int cashier_id = Api.CommonFuncations.B2TechCGAirtel.GetCashierID(MSISDN, ref lines);
                                                if (cashier_id > 0)
                                                {
                                                    DataLayer.DBQueries.ExecuteQuery("insert into casheir_transactions (cashier_id, bar_code, total_payout, date_time, dya_id) values(" + cashier_id + ", '" + bar_code + "', " + amount_2_pay + ", now()," + momotransfer_response.TransactionID + ");", ref lines);
                                                }
                                                GoogleAnalytics.SendData2GoogleAnalytics("UA-154843894-1", "ussd", Base64.Reverse(MSISDN), System.Web.HttpContext.Current.Request.ServerVariables["REMOTE_ADDR"], "BJ", "event", "PyoutPOSTicket", "MOMO", "-" + ussdString, "/", ref lines);
                                                //dopayout
                                                bool dopayout_res = Api.CommonFuncations.B2TechCGAirtel.DoPayOutNew(momotransfer_response.Timestamp, momotransfer_response.TransactionID, bar_code, ref lines);
                                                //bool dopayout_res = iDoBet.DoPayout(bar_code, ref lines);
                                                menu_2_display = "Félicitations, le billet a été remboursé sur votre compte Airtel MOMO.";

                                            }
                                            else
                                            {
                                                menu_2_display = "Le billet n'a pas été remboursé sur votre compte Airtel MOMO." + Environment.NewLine;
                                                menu_2_display = menu_2_display + "Veuillez réessayer";
                                                string mail_body = "<p><h2>Payout Airtel Congo has failed DYATransfer</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>MOMO Response: </b>" + momotransfer_response.ResultCode + " " + momotransfer_response.Description + "<br></p>";
                                                string mail_subject = "Payout Airtel Congo has failed DYATransfer for user - " + user.id;
                                                string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                            }
                                        }
                                    }
                                }

                                break;
                            case 44: //search ticket
                                menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetCheckTicketByBarcodeMenu(MSISDN, ussdString, out amount_2_pay, ref lines);
                                bar_code = ussdString;
                                break;
                            case 39: //add another game
                                if (game_id > 0)
                                {
                                    //DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games_cg (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + ussdString + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',0, " + service.service_id + ")", ref lines);
                                    game_id = 0;
                                    selected_odd = 0;
                                    page_number = 1;
                                    odd_page = 0;
                                }
                                menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetSportsTypeMenu(ref lines);
                                break;
                            case 41: //Delete and Start Over
                                List<Int64> saved_ids1 = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, "_cg", ref lines);
                                if (saved_ids1 != null)
                                {
                                    foreach (Int64 s in saved_ids1)
                                    {
                                        DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games_cg set status = 3 where id = " + s, "DBConnectionString_104", ref lines);
                                    }
                                }

                                //DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games_cg set status = 3 where user_seesion_id = '" + user_session_id + "'", ref lines);
                                game_id = 0;
                                odd_page = 0;
                                selected_odd = 0;
                                page_number = 1;
                                menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetSportsTypeMenu(ref lines);
                                ussd_menu.action_id = 2;
                                break;
                            case 48:
                                menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetSoccerLeagueMenu(35, "0", ussd_menu.ussd_id, ref lines, out selected_league_id);
                                break;
                            case 47:
                                menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetSoccerLeagueMenu(32, "0", ussd_menu.ussd_id, ref lines, out selected_league_id);
                                break;
                            case 37: //display soccer leagu
                                menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetSoccerLeagueMenu(31, "0", ussd_menu.ussd_id, ref lines, out selected_league_id);
                                break;
                            case 49:
                            case 50:
                            case 38://selected league
                            case 28://Start Over
                            case 29:
                            case 30:
                            case 16://AddXXXGame or 
                            case 17:
                            case 18:
                            case 7: //DisplayXXXTopEvents   
                            case 8:
                            case 9:
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && page_number > 0)
                                {
                                    page_number = page_number - 1;
                                }
                                if (ussd_menu.action_id == 28 || ussd_menu.action_id == 29 || ussd_menu.action_id == 30)
                                {
                                    List<Int64> saved_ids2 = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, "_cg", ref lines);
                                    if (saved_ids2 != null)
                                    {
                                        foreach (Int64 s in saved_ids2)
                                        {
                                            DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games_cg set status = 3 where id = " + s, "DBConnectionString_104", ref lines);
                                        }
                                    }
                                    //DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games_cg set status = 3 where user_seesion_id = '"+user_session_id+"'", ref lines);
                                    game_id = 0;
                                    selected_odd = 0;
                                    odd_page = 0;
                                    page_number = 1;

                                }
                                if (ussd_menu.action_id == 16 || ussd_menu.action_id == 17 || ussd_menu.action_id == 18)
                                {
                                    if (game_id > 0)
                                    {
                                        //DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games_cg (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + ussdString + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',0, " + service.service_id + ")", ref lines);
                                        game_id = 0;
                                        selected_odd = 0;
                                        page_number = 1;
                                        odd_page = 0;
                                    }

                                }
                                switch (ussd_menu.action_id)
                                {
                                    case 38:
                                        menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetEventsMenu(ussdString, 31, page_number, ref lines, out selected_league_id, selected_league_id, ussd_menu);
                                        break;
                                    case 49:
                                        menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetEventsMenu(ussdString, 32, page_number, ref lines, out selected_league_id, selected_league_id, ussd_menu);
                                        break;
                                    case 50:
                                        menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetEventsMenu(ussdString, 35, page_number, ref lines, out selected_league_id, selected_league_id, ussd_menu);
                                        break;
                                    case 28:
                                    case 16:
                                    case 7:
                                        menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetEventsMenu(31, page_number, ref lines);
                                        break;
                                    case 29:
                                    case 17:
                                    case 8:
                                        menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetEventsMenu(32, page_number, ref lines);
                                        break;
                                    case 30:
                                    case 18:
                                    case 9:
                                        menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetEventsMenu(35, page_number, ref lines);
                                        break;
                                }


                                break;
                            case 10: //DisplayXXXGame
                            case 11:
                            case 12:
                                page_number = (page_number == 0 ? 1 : page_number);
                                selected_odd = 0;
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    odd_page = odd_page + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && odd_page > 0)
                                {
                                    odd_page = odd_page - 1;
                                }
                                switch (ussd_menu.action_id)
                                {
                                    case 10:
                                        menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetGameOddsMenu(31, page_number, ussdString, game_id, odd_page, out game_id, selected_league_id, ref lines);
                                        break;
                                    case 11:
                                        menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetGameOddsMenu(32, page_number, ussdString, game_id, odd_page, out game_id, selected_league_id, ref lines);
                                        break;
                                    case 12:
                                        menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetGameOddsMenu(35, page_number, ussdString, game_id, odd_page, out game_id, selected_league_id, ref lines);
                                        break;
                                }
                                break;
                            case 13: //ConfirmXXXGame (select odd)
                            case 14:
                            case 15:
                                switch (ussd_menu.action_id)
                                {
                                    case 13:
                                        menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetConfirmMenu(31, game_id, ussdString, odd_page, out selected_odd, out selected_bet_type_id, out selected_odd_name, out selected_odd_line, ref lines, ussd_session, MSISDN, service);
                                        break;
                                    case 14:
                                        menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetConfirmMenu(32, game_id, ussdString, odd_page, out selected_odd, out selected_bet_type_id, out selected_odd_name, out selected_odd_line, ref lines, ussd_session, MSISDN, service);
                                        break;
                                    case 15:
                                        menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetConfirmMenu(35, game_id, ussdString, odd_page, out selected_odd, out selected_bet_type_id, out selected_odd_name, out selected_odd_line, ref lines, ussd_session, MSISDN, service);
                                        break;
                                }
                                break;
                            case 92: //FreeBet
                                bool placebet2 = false;
                                USSDBonus ub = null;
                                menu_2_display = Api.CommonFuncations.B2TechCGAirtel.CheckFreeBet(ussd_session, MSISDN, out placebet2, out ub, ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                if (String.IsNullOrEmpty(menu_2_display) && placebet2)
                                {
                                    List<Int64> saved_ids3 = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, "_cg", ref lines);
                                    if (saved_ids3 != null)
                                    {
                                        foreach (Int64 s in saved_ids3)
                                        {
                                            DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games_cg set amount = " + ub.amount + " where id = " + s, "DBConnectionString_104", ref lines);
                                        }
                                    }

                                    bool req_for_order = Api.CommonFuncations.B2TechCGAirtel.PlaceBet(ussd_session, ref lines);
                                    if (req_for_order == true)
                                    {
                                        //final placebet
                                        Int64 dya_id = Api.DataLayer.DBQueries.ExecuteQueryReturnInt64("insert into dya_transactions (msisdn, service_id, date_time, amount, result, result_desc, dya_method, transaction_id) values(" + MSISDN + "," + service.service_id + ",now()," + ub.amount + ",'02','USSD Bonus',2,'" + ussd_session.user_seesion_id + "')", ref lines);
                                        DYATransactions dya_trans = UpdateGetDYAReciveTrans(dya_id, "02", "USSD Bonus", ref lines);
                                        ExecuteOrderDetails barcode = null;
                                        string postBody = "", response_body = "";
                                        if (dya_trans.partner_transid.Contains("Rapidos_"))
                                        {
                                            barcode = CommonFuncations.B2TechCGAirtel.PlaceBetRapidos(dya_trans, out postBody, out response_body, ref lines);
                                        }
                                        else
                                        {
                                            barcode = CommonFuncations.B2TechCGAirtel.GetExecuteOrderNew(dya_trans, out postBody, out response_body, ref lines);
                                        }
                                        if (barcode != null)
                                        {
                                            double total_ratio = (Convert.ToDouble(barcode.max_payout) / Convert.ToDouble(barcode.amount));
                                            Api.DataLayer.DBQueries.ExecuteQuery("insert into ussd_bonus_bets (ussd_bonus_user_id, amount, odd, selections, barcode, payout_dya_id, date_time) values(" + ub.bonus_user_id + "," + ub.amount + "," + total_ratio + "," + saved_ids3.Count() + ",'" + barcode.barcode + "',0,now())", ref lines);
                                            string text_msg_ms = "Bonjour, votre bonus pari a ete place avec succes.\n";// + Environment.NewLine;
                                            text_msg_ms = text_msg_ms + "Numero de commande: " + barcode.order_number + "\n";// Environment.NewLine;
                                            text_msg_ms = text_msg_ms + "Code a barre: " + barcode.barcode + "\n";//Environment.NewLine;
                                            text_msg_ms = text_msg_ms + "Montant: " + barcode.amount + "\n";//Environment.NewLine;
                                            text_msg_ms = text_msg_ms + "Gain Maximum: " + barcode.max_payout;//Environment.NewLine;
                                            lines = Add2Log(lines, " total_bonus =  " + barcode.total_bonus, 100, lines[0].ControlerName);
                                            if (!String.IsNullOrEmpty(barcode.total_bonus))
                                            {
                                                text_msg_ms = text_msg_ms + "\nBonus: " + barcode.total_bonus;//Environment.NewLine;
                                            }
                                            //send sms
                                            LoginRequest LoginRequestBody = new LoginRequest()
                                            {
                                                ServiceID = service.service_id,
                                                Password = service.service_password
                                            };
                                            LoginResponse res = Login.DoLogin(LoginRequestBody);
                                            if (res != null)
                                            {
                                                if (res.ResultCode == 1000)
                                                {
                                                    string token_id = res.TokenID;
                                                    SendSMSRequest RequestSendSMSBody1 = new SendSMSRequest()
                                                    {
                                                        ServiceID = service.service_id,
                                                        MSISDN = Convert.ToInt64(MSISDN),
                                                        Text = text_msg_ms,
                                                        TokenID = token_id,
                                                        TransactionID = "12345"
                                                    };
                                                    SendSMSResponse response_sendsms1 = SendSMS.DoSMS(RequestSendSMSBody1);
                                                    if (response_sendsms1 != null)
                                                    {
                                                        if (response_sendsms1.ResultCode == 1010 || response_sendsms1.ResultCode == 1000)
                                                        {
                                                            lines = Add2Log(lines, " Send SMS Was OK", 100, lines[0].ControlerName);
                                                        }
                                                        else
                                                        {
                                                            lines = Add2Log(lines, " Send SMS Failed", 100, lines[0].ControlerName);
                                                        }
                                                    }
                                                    else
                                                    {
                                                        lines = Add2Log(lines, " Send SMS Failed", 100, lines[0].ControlerName);
                                                    }
                                                }
                                            }
                                        }
                                        menu_2_display = Api.CommonFuncations.B2TechCGAirtel.GetUSSDBonusCloseBet(barcode, ref lines);
                                    }
                                }

                                break;
                        }
                        lines = Add2Log(lines, " page_number = " + page_number, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " game_id = " + game_id, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " odd_page = " + odd_page, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " selected_odd = " + selected_odd, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " amount = " + amount, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " selected_league_id = " + selected_league_id, 100, "ivr_subscribe");
                        result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, menu_2_display, msgType, opType);
                        DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id, selected_odd, selected_bet_type_id,selected_odd_name, selected_odd_line, amount, selected_league_id, amount_2_pay, bar_code, selected_subagent_name, rapidos_string) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + "," + status + ", '" + ussdString + "', " + ussd_menu.action_id + ", " + page_number + "," + odd_page + "," + game_id + "," + topic_id + ",'" + user_session_id + "'," + selected_odd + "," + selected_bet_type_id + ",'" + selected_odd_name + "','" + selected_odd_line + "', " + amount + "," + selected_league_id + "," + amount_2_pay + ",'" + bar_code + "','" + selected_subagent_name + "', '" + rapidos_string + "');", "DBConnectionString_104", ref lines);
                        break;
                }
            }

            return result;
        }

        public static string MTNCameroonUSSDBehaviuer(ServiceClass service, string ussdString, string ServiceID, string MSISDN, string linkid, string receiveCB, string senderCB, string serviceCode, USSDMenu ussd_menu, USSDSession ussd_session, out DYAReceiveMoneyRequest momo_request, ref List<LogLines> lines, out string menu_2_display, out bool is_close, string force_session_id)
        {
            momo_request = null;
            menu_2_display = "";
            is_close = false;
            string result = "";
            force_session_id = (String.IsNullOrEmpty(force_session_id) ? Guid.NewGuid().ToString() : force_session_id);
            string user_session_id = (ussd_session == null ? force_session_id : ussd_session.user_seesion_id);
            string lang = Api.DataLayer.DBQueries.SelectQueryReturnString("SELECT m.lang FROM msisdn_preferred_lang m WHERE m.msisdn = " + MSISDN, ref lines);
            if (String.IsNullOrEmpty(lang))
            {
                lang = "fr";
                Api.DataLayer.DBQueries.ExecuteQuery("insert into msisdn_preferred_lang (msisdn, lang) values("+MSISDN+",'"+lang+"')", ref lines);
            }
            lang = (String.IsNullOrEmpty(lang) == true ? "fr" : lang);
            int topic_id = (ussd_session != null ? ussd_session.topic_id : ussd_menu.topic_id);
            if(ussd_menu.action_id == 91)
            {
                lang = (ussdString == "1" ? "fr" : "en");
                Api.DataLayer.DBQueries.ExecuteQuery("insert into msisdn_preferred_lang (msisdn, lang) values(" + MSISDN + ",'" + lang + "') ON DUPLICATE KEY UPDATE lang = '" + lang + "' ", ref lines);
                ussd_menu.action_id = 1;
            }
            if (!String.IsNullOrEmpty(ussd_menu.menu_2_display))
            {
                menu_2_display = (lang == "fr" ? ussd_menu.menu_2_display : ussd_menu.menu_2_display_ln);
                result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, ussd_menu.menu_2_display, "1", "1");
                DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + ",0, '" + ussdString + "', " + ussd_menu.action_id + ", " + (ussd_session == null ? 0 : ussd_session.page_number) + "," + (ussd_session == null ? 0 : ussd_session.odd_page) + "," + (ussd_session == null ? 0 : ussd_session.game_id) + "," + topic_id + ",'" + user_session_id + "');", "DBConnectionString_104", ref lines);
            }
            if (ussd_menu.action_id == 3) //close
            {
                menu_2_display = (lang == "fr" ? ussd_menu.menu_2_display : ussd_menu.menu_2_display_ln);
                is_close = true;
                result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, menu_2_display, "2", "2");
                DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + ",1, '" + ussdString + "', " + ussd_menu.action_id + ", " + (ussd_session == null ? 0 : ussd_session.page_number) + "," + (ussd_session == null ? 0 : ussd_session.odd_page) + "," + (ussd_session == null ? 0 : ussd_session.game_id) + "," + topic_id + ",'" + user_session_id + "');", "DBConnectionString_104", ref lines);
            }

            if (ussd_menu.action_id == 4 || ussd_menu.action_id == 5) //subscribe or unsubscribe
            {
                ServiceClass subscriber_service = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                LoginRequest LoginRequestBody = new LoginRequest()
                {
                    ServiceID = subscriber_service.service_id,
                    Password = subscriber_service.service_password
                };
                LoginResponse res = Login.DoLogin(LoginRequestBody);

                menu_2_display = "Thank You ";

                is_close = true;
                //result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, "Thank You", "2", "2");
                //lines = Add2Log(lines, "Soap = " + result, 100, "ussd_mo");
                //string soap_url = Cache.ServerSettings.GetServerSettings("SDPUSSDPush_" + service.operator_id + (service.is_staging == true ? "_STG" : ""), ref lines);
                //lines = Add2Log(lines, "Sending to URL = " + soap_url, 100, "ussd_mo");
                //string response = CommonFuncations.CallSoap.CallSoapRequest(soap_url, result, ref lines);
                //lines = Add2Log(lines, "SendUSSD Response = " + response, 100, "ussd_mo");
                result = "";
                if (res != null)
                {
                    if (res.ResultCode == 1000)
                    {
                        string token_id = res.TokenID;
                        SubscribeRequest subscribe_RequestBody = new SubscribeRequest()
                        {
                            ServiceID = subscriber_service.service_id,
                            TokenID = token_id,
                            MSISDN = Convert.ToInt64(MSISDN),
                            TransactionID = "ussd_mo",
                            ActivationID = "3"
                        };
                        SubscribeResponse subscribe_response = (ussd_menu.action_id == 4 ? CommonFuncations.Subscribe.DoSubscribe(subscribe_RequestBody) : CommonFuncations.UnSubscribe.DoUnSubscribe(subscribe_RequestBody));
                        if (subscribe_response != null)
                        {
                            lines = Add2Log(lines, " ResultCode = " + subscribe_response.ResultCode + ", Description = " + subscribe_response.Description, 100, "ivr_subscribe");
                            if (ussd_menu.action_id == 4)
                            {
                                menu_2_display = Api.handlers.ussd_mo.SubscribeMultiServiceMenu(subscriber_service.service_id, subscribe_response.ResultCode, ref lines);
                            }
                        }
                    }
                }
                DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + ",1, '" + ussdString + "', " + ussd_menu.action_id + ", " + (ussd_session == null ? 0 : ussd_session.page_number) + "," + (ussd_session == null ? 0 : ussd_session.odd_page) + "," + (ussd_session == null ? 0 : ussd_session.game_id) + "," + topic_id + ",'" + user_session_id + "');", "DBConnectionString_104", ref lines);
            }

            if (String.IsNullOrEmpty(result))
            {
                switch (topic_id)
                {
                    case 5:
                    case 2:
                    case 7:
                    case 11:
                        int page_number = (ussd_session != null ? ussd_session.page_number : 1);
                        string rapidos_string = (ussd_session != null ? ussd_session.rapidos_string : "0");
                        int odd_page = (ussd_session != null ? ussd_session.odd_page : 0);
                        Int64 game_id = (ussd_session != null ? ussd_session.game_id : 0);
                        double selected_odd = (ussd_session != null ? ussd_session.selected_odd : 0);
                        int selected_bet_type_id = (ussd_session != null ? ussd_session.selected_bet_type_id : 0);
                        string selected_odd_name = (ussd_session != null ? ussd_session.selected_odd_name : "0");
                        string selected_odd_line = (ussd_session != null ? ussd_session.selected_odd_line : "null");
                        string amount = (ussd_session != null ? ussd_session.amount : "0");
                        int selected_league_id = (ussd_session != null ? ussd_session.selected_league_id : 0);
                        string msgType = "1", opType = "1";
                        int status = 0;
                        string amount_2_pay = (ussd_session != null ? ussd_session.amount_2_pay.ToString() : "0");
                        string bar_code = (ussd_session != null ? ussd_session.bar_code : "0");
                        string selected_subagent_name = (ussd_session != null ? ussd_session.selected_subagent_name : "0");
                        IdoBetUser user = new IdoBetUser();
                        switch (ussd_menu.action_id)
                        {
                            case 80: //Foot Solider Check MSISDN and ask to enter full name 
                                is_close = true;
                                menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetFootSoldiersMSISDNMenu(MSISDN, ussdString, out is_close, service, ref lines);
                                if (is_close)
                                {
                                    msgType = "2";
                                    opType = "2";
                                }
                                else
                                {
                                    Api.DataLayer.DBQueries.ExecuteQuery("insert into ussd_footsoldiers_attempts (user_session_id, footsoldier_msisdn, user_msisdn, full_name, user_id, date_time) values('" + user_session_id + "', " + MSISDN + ", 237" + ussdString + ", '', 0, now())", ref lines);
                                }
                                break;
                            case 79: //Foot Soldier create user
                                is_close = true;
                                Int64 user_msisdn = Api.DataLayer.DBQueries.SelectQueryReturnInt64("SELECT u.user_msisdn from ussd_footsoldiers_attempts u WHERE u.user_session_id = '" + user_session_id + "' order by u.id desc limit 1", ref lines);
                                if (user_msisdn > 0)
                                {
                                    Api.CommonFuncations.iDoBetMTNCameroon.CreateUserResponse create_user = new Api.CommonFuncations.iDoBetMTNCameroon.CreateUserResponse();
                                    menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetFootSoldiersFullNameMenu(MSISDN, ussdString, out is_close, ussd_menu, user_msisdn.ToString(), out create_user, ref lines);
                                    if (is_close)
                                    {
                                        LoginRequest LoginRequestBody = new LoginRequest()
                                        {
                                            ServiceID = service.service_id,
                                            Password = service.service_password
                                        };
                                        LoginResponse res = Login.DoLogin(LoginRequestBody);
                                        if (res != null)
                                        {
                                            if (res.ResultCode == 1000)
                                            {

                                                Int64 rec_id = Api.DataLayer.DBQueries.SelectQueryReturnInt64("SELECT u.id from ussd_footsoldiers_attempts u WHERE u.user_session_id = '" + user_session_id + "' order by u.id desc limit 1", ref lines);
                                                Api.DataLayer.DBQueries.ExecuteQuery("update ussd_footsoldiers_attempts set user_id = " + create_user.userId + ", full_name = '" + ussdString + "' where id = " + rec_id, ref lines);
                                                string token_id = res.TokenID;
                                                string sms_text = "Bravo! Vous beneficiez de 200% de bonus des votre 1er depot sur votre compte Yellowbet. Mot de passe: " + create_user.password + " .Placez vos paris et de tenter de gagner en cliquant ici: https://m.yellowbet.cm/#/login";
                                                Api.DataLayer.DBQueries.ExecuteQuery("insert into foot_soldiers_sms (date_time, msisdn, service_id, sms_text) values(now(), " + user_msisdn + "," + service.service_id + ",'" + sms_text + "');", ref lines);
                                                SendSMSRequest RequestSendSMSBody1 = new SendSMSRequest()
                                                {
                                                    ServiceID = service.service_id,
                                                    MSISDN = user_msisdn,
                                                    Text = sms_text,
                                                    TokenID = token_id,
                                                    TransactionID = "12345"
                                                };
                                                SendSMSResponse response_sendsms1 = SendSMS.DoSMS(RequestSendSMSBody1);
                                                if (response_sendsms1 != null)
                                                {
                                                    if (response_sendsms1.ResultCode == 1010 || response_sendsms1.ResultCode == 1000)
                                                    {
                                                        lines = Add2Log(lines, " Send SMS Was OK", 100, lines[0].ControlerName);
                                                    }
                                                    else
                                                    {
                                                        lines = Add2Log(lines, " Send SMS Failed", 100, lines[0].ControlerName);
                                                    }
                                                }
                                                else
                                                {
                                                    lines = Add2Log(lines, " Send SMS Failed", 100, lines[0].ControlerName);
                                                }
                                            }
                                        }
                                    }
                                }
                                else
                                {
                                    is_close = false;
                                    menu_2_display = "Error 78_2" + Environment.NewLine;
                                    menu_2_display = menu_2_display + Environment.NewLine + "M) ";// Menu Principal ";

                                }
                                break;
                            case 78: //Foot Soldier Main Menu asking to enter MSISDN
                                menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetFootSoldierMainMenu(MSISDN, ref lines);
                                break;
                            case 91:
                                lang = (ussdString == "1" ? "fr" : "en");
                                Api.DataLayer.DBQueries.ExecuteQuery("insert into msisdn_preferred_lang (msisdn, lang) values(" + MSISDN + ",'" + lang + "') ON DUPLICATE KEY UPDATE lang = '"+lang+"' ", ref lines);
                                break;
                            case 86:
                            case 87:
                                if (ussdString == "1")
                                {
                                    switch (ussd_menu.action_id)
                                    {
                                        case 86:
                                            game_id = 41;
                                            break;
                                        case 87:
                                            game_id = 42;
                                            break;
                                    }
                                    DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + rapidos_string + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',2000, " + service.service_id + ")", ref lines);
                                    msgType = "2";
                                    opType = "2";
                                    is_close = true;
                                    status = 1;

                                    menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetCloseBet(ussd_session, amount, lang, ref lines);
                                    LoginRequest LoginRequestBody = new LoginRequest()
                                    {
                                        ServiceID = service.service_id,
                                        Password = service.service_password
                                    };
                                    LoginResponse res = Login.DoLogin(LoginRequestBody);
                                    if (res != null)
                                    {
                                        if (res.ResultCode == 1000)
                                        {
                                            string token_id = res.TokenID;
                                            momo_request = new DYAReceiveMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = 2000,
                                                ServiceID = service.service_id,
                                                TokenID = token_id,
                                                TransactionID = "Rapidos_" + user_session_id
                                            };
                                        }
                                    }

                                }
                                break;
                            case 75:
                            case 76:
                            case 77:
                                bool placebet1 = false;
                                double num3;
                                int max_bet = 0;
                                bool check_amount = double.TryParse(ussdString, out num3);
                                if (check_amount == true)
                                {
                                    switch (ussd_menu.action_id)
                                    {
                                        case 75:
                                            game_id = 46;
                                            max_bet = 20000;
                                            break;
                                        case 76:
                                            game_id = 47;
                                            max_bet = 4000;
                                            break;
                                        case 77:
                                            game_id = 48;
                                            max_bet = 200;
                                            break;
                                    }
                                    if (num3 >= 100 && num3 <= max_bet)
                                    {
                                        DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + rapidos_string + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "'," + num3 + ", " + service.service_id + ")", ref lines);
                                        placebet1 = true;
                                    }
                                    else
                                    {

                                        menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetWrongPriceBetRapidos(max_bet, lang, ref lines);
                                        DataLayer.DBQueries.ExecuteQuery("delete from ussd_saved_games where user_session_id = '" + user_session_id + "' order by id desc limit 1", ref lines);
                                    }
                                }
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                //RequestForOrder
                                //bool req_for_order = GetRequestForOrder(ussd_session, ref lines);
                                if (placebet1)
                                {

                                    menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetCloseBet(ussd_session, amount, lang, ref lines);
                                    LoginRequest LoginRequestBody = new LoginRequest()
                                    {
                                        ServiceID = service.service_id,
                                        Password = service.service_password
                                    };
                                    LoginResponse res = Login.DoLogin(LoginRequestBody);
                                    if (res != null)
                                    {
                                        if (res.ResultCode == 1000)
                                        {
                                            string token_id = res.TokenID;
                                            momo_request = new DYAReceiveMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(ussdString),
                                                ServiceID = service.service_id,
                                                TokenID = token_id,
                                                TransactionID = "Rapidos_" + user_session_id
                                            };
                                        }
                                    }
                                }

                                break;

                            case 72: //Confirm Rapidos
                            case 73:
                            case 74:
                                String[] strlist = new string[] { };
                                bool validate_num = Api.CommonFuncations.iDoBetMTNCameroon.ValidateRapidosInput(ussdString, ussd_menu.action_id, out strlist, ref lines);
                                if (validate_num)
                                {
                                    menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetConfirmRapidosMenu(ussd_menu.action_id, ussdString, out game_id, lang, ref lines);
                                    rapidos_string = ussdString;
                                }
                                else
                                {
                                    menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.WrongRapidosNumber(lang);
                                }
                                break;
                            case 84: //Confirm Lotto
                            case 85:
                                String[] strlist1 = new string[] { };
                                bool validate_num1 = Api.CommonFuncations.iDoBetMTNCameroon.ValidateLottoInput(ussdString, ussd_menu.action_id, out strlist1, ref lines);
                                if (validate_num1)
                                {
                                    menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetConfirmLottoMenu(ussd_menu.action_id, ussdString, out game_id, ref lines);
                                    rapidos_string = ussdString;
                                }
                                else
                                {
                                    menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.WrongRapidosNumber(lang);
                                }
                                break;
                            case 55://EnterAmountForSubAgent
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                Int64 pos_trans_id = 0;
                                menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetAmountForSubAgentMenu(MSISDN, ussdString, selected_subagent_name, out pos_trans_id, ref lines);
                                if (pos_trans_id > 0)
                                {
                                    ServiceClass subscriber_service1 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                    LoginRequest LoginRequestBody = new LoginRequest()
                                    {
                                        ServiceID = subscriber_service1.service_id,
                                        Password = subscriber_service1.service_password
                                    };
                                    LoginResponse res = Login.DoLogin(LoginRequestBody);
                                    if (res != null)
                                    {
                                        if (res.ResultCode == 1000)
                                        {
                                            string token_id = res.TokenID;
                                            momo_request = new DYAReceiveMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(ussdString),
                                                ServiceID = ussd_menu.service_id,
                                                TokenID = token_id,
                                                TransactionID = "POSTrans_" + pos_trans_id

                                            };
                                        }
                                    }
                                }



                                break;
                            case 54:
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*")) && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetSlectedSubAgentMenu(MSISDN, page_number, ussdString, out selected_subagent_name, ref lines);
                                break;
                            case 53:
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetAgentMainMenu(MSISDN, page_number, ref lines);
                                break;
                            case 34: //DepositMoney
                                user = Api.CommonFuncations.iDoBetMTNCameroon.SearchUserNew(MSISDN, ref lines);
                                menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetDepositMoneyMenu(user, ussd_menu, MSISDN, lang, ref lines);
                                break;
                            case 36: //StartDepositMoney
                                user = Api.CommonFuncations.iDoBetMTNCameroon.SearchUserNew(MSISDN, ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetStartDepositMoneyMenu(service, user, ussd_menu, MSISDN, ussdString, out momo_request, lang, ref lines);
                                break;
                            case 33: //WithdrawMoney
                                user = Api.CommonFuncations.iDoBetMTNCameroon.SearchUserNew(MSISDN, ref lines);
                                menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetWithdrawMoneyMenu(user, lang, ref lines);
                                break;
                            case 35: //StartWithdrawMoney
                                user = Api.CommonFuncations.iDoBetMTNCameroon.SearchUserNew(MSISDN, ref lines);
                                menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetStartWithdrawMoneyMenu(user, false, false, false, lang, ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                if (user.isValid == true)
                                {
                                    if (Convert.ToInt32(ussdString) <= user.AvailableForWithdraw && Convert.ToInt32(ussdString) > 0)
                                    {
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.CheckBeforeWithdrawMenu(service, MSISDN, lang, ref lines);
                                        if (String.IsNullOrEmpty(menu_2_display))
                                        {
                                            //Refund user
                                            ServiceClass subscriber_service1 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                            LoginRequest LoginRequestBody1 = new LoginRequest()
                                            {
                                                ServiceID = service.service_id,
                                                Password = service.service_password
                                            };
                                            LoginResponse res1 = Login.DoLogin(LoginRequestBody1);
                                            if (res1 != null)
                                            {
                                                if (res1.ResultCode == 1000)
                                                {
                                                    string token_id = res1.TokenID;
                                                    DYATransferMoneyRequest momotransfer_request = new DYATransferMoneyRequest()
                                                    {
                                                        MSISDN = Convert.ToInt64(MSISDN),
                                                        Amount = Convert.ToInt32(ussdString),
                                                        ServiceID = service.service_id,
                                                        TokenID = token_id,
                                                        TransactionID = "USSDWithdraw_" + Guid.NewGuid().ToString()
                                                    };
                                                    string postBody = "", response_body = "";
                                                    //bool wd_result = StartWithdraw(user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                    bool do_withdraw = false;
                                                    string code = "";
                                                    if (user.AvailableForWithdraw > 0)
                                                    {
                                                        do_withdraw = true;
                                                        code = Api.CommonFuncations.iDoBetMTNCameroon.StartWithdrawNew(user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                    }



                                                    menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetStartWithdrawMoneyMenu(user, true, true, false, lang, ref lines);

                                                    if (code == "")
                                                    {
                                                        if (do_withdraw)
                                                        {
                                                            menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetStartWithdrawMoneyMenu(user, false, false, false, lang, ref lines);
                                                            string mail_body = "<p><h2>Start Withdraw MTN Cameroon has failed</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>Json: </b>" + postBody + "<br><b>Response: </b>" + response_body + "<br></p>";
                                                            string mail_subject = "Start Withdraw MTN Cameroon has failed for user - " + user.id;
                                                            string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                            string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                            string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                            string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                            int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                            string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                            CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                                        }

                                                    }
                                                    else
                                                    {
                                                        DYATransferMoneyResponse momotransfer_response = CommonFuncations.DYATransferMoney.DoTransfer(momotransfer_request);
                                                        if (momotransfer_response.ResultCode == 1000)
                                                        {
                                                            postBody = "";
                                                            response_body = "";
                                                            bool end_withdraw = Api.CommonFuncations.iDoBetMTNCameroon.EndWithdrawNew(momotransfer_response.Timestamp, momotransfer_response.TransactionID, true, code, user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                            if (!end_withdraw)
                                                            {
                                                                menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetStartWithdrawMoneyMenu(user, false, false, false, lang, ref lines);
                                                                string mail_body = "", mail_subject = "";
                                                                mail_body = "<p><h2>End Withdraw MTN Cameroon has failed but DYATransfer was ok</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>Request: </b>" + postBody + "<br>Response: " + response_body + "<br></p>";
                                                                mail_subject = "End Withdraw MTN Cameroon has failed but DYATransfer was ok - " + user.id;
                                                                string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                                string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                                string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                                string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                                int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                                string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                                CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                                            }
                                                            GoogleAnalytics.SendData2GoogleAnalytics("UA-154843894-1", "ussd", Base64.Reverse(MSISDN), System.Web.HttpContext.Current.Request.ServerVariables["REMOTE_ADDR"], "BJ", "event", "Withdraw", "MOMO", "-" + ussdString, "/", ref lines);
                                                        }
                                                        else
                                                        {
                                                            menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetStartWithdrawMoneyMenu(user, false, false, false, lang, ref lines);
                                                            postBody = "";
                                                            response_body = "";
                                                            bool end_withdraw = iDoBetMTNCameroon.EndWithdrawNew(momotransfer_response.Timestamp, momotransfer_response.TransactionID, false, code, user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                            string mail_body = "", mail_subject = "";
                                                            mail_body = "<p><h2>Withdraw MTN Cameroon has failed DYATransfer</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>MOMO Response: </b>" + momotransfer_response.ResultCode + " " + momotransfer_response.Description + "<br>User was refunded: " + end_withdraw + "<br><b>Request: </b>" + postBody + "<br><b>Response: </b>" + response_body + "</p>";
                                                            mail_subject = "Withdraw MTN Cameroon has failed DYATransfer for user - " + user.id;
                                                            string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                            string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                            string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                            string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                            int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                            string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                            CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                                        }
                                                    }



                                                }
                                            }
                                        }


                                    }
                                    else
                                    {
                                        //user has requested more than allowed
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetStartWithdrawMoneyMenu(user, false, false, true, lang, ref lines);
                                    }
                                }
                                break;
                            case 25://CloseXXXBet
                            case 26:
                            case 27:
                                double num4 = 0;
                                bool check_amount4 = double.TryParse(amount, out num4);
                                if (num4 >= 100 && num4 <= 1000000)
                                {
                                    List<Int64> saved_ids = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, ref lines);
                                    if (saved_ids != null)
                                    {
                                        foreach (Int64 s in saved_ids)
                                        {
                                            DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set amount = " + amount + " where id = " + s, ref lines);
                                        }
                                    }
                                    msgType = "2";
                                    opType = "2";
                                    is_close = true;
                                    status = 1;
                                    //RequestForOrder
                                    //bool req_for_order = GetRequestForOrder(ussd_session, ref lines);
                                    bool req_for_order = Api.CommonFuncations.iDoBetMTNCameroon.PlaceBet(ussd_session, ref lines);

                                    if (req_for_order == true)
                                    {
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetCloseBet(ussd_session, amount, lang, ref lines);
                                        ServiceClass subscriber_service2 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                        LoginRequest LoginRequestBody = new LoginRequest()
                                        {
                                            ServiceID = subscriber_service2.service_id,
                                            Password = subscriber_service2.service_password
                                        };
                                        LoginResponse res = Login.DoLogin(LoginRequestBody);
                                        if (res != null)
                                        {
                                            if (res.ResultCode == 1000)
                                            {
                                                string token_id = res.TokenID;
                                                momo_request = new DYAReceiveMoneyRequest()
                                                {
                                                    MSISDN = Convert.ToInt64(MSISDN),
                                                    Amount = Convert.ToInt32(amount),
                                                    ServiceID = ussd_menu.service_id,
                                                    TokenID = token_id,
                                                    TransactionID = user_session_id

                                                };
                                            }
                                        }
                                    }
                                    else
                                    {
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetCloseBetFailed(lang, ref lines);
                                    }
                                }
                                else
                                {
                                    menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetWrongPriceBetMeny(lang, ref lines);
                                    DataLayer.DBQueries.ExecuteQuery("delete from ussd_saved_games where user_session_id = '" + user_session_id + "' order by id desc limit 1", ref lines);
                                }

                                break;
                            case 22: //ConfirmBetXXX
                            case 23:
                            case 24:
                                amount = ussdString;
                                double num1;
                                bool res_parse = double.TryParse(amount, out num1);
                                if (res_parse == true)
                                {
                                    if (num1 >= 200 && num1 <= 1000000)
                                    {
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetConfirmBet(ussd_session, amount, lang, ref lines);
                                    }
                                    else
                                    {

                                        menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetWrongPriceBetMeny(lang, ref lines);
                                        DataLayer.DBQueries.ExecuteQuery("delete from ussd_saved_games where user_session_id = '" + user_session_id + "' order by id desc limit 1", ref lines);
                                    }
                                }
                                odd_page = 0;

                                break;
                            case 19: //PayAndConfirmXXX
                            case 20:
                            case 21:
                                //need to check if user clicks back and then returns to this section.
                                //DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + ussdString + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',0, " + service.service_id + ")", ref lines);
                                menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetPayAndConfirm(ussd_session, lang, ref lines);
                                odd_page = 0;
                                break;
                            case 32: //ticket status
                                page_number = (page_number == 0 ? 1 : page_number);
                                menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetCheckTicketMenu(MSISDN, page_number, ussdString, lang, ref lines);
                                break;
                            case 31: //tickets status by phone
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetCheckTicketsMenu(MSISDN, page_number, lang, ref lines);
                                break;
                            case 52:
                                menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetPayoutBarcodeTicket(ussd_menu, MSISDN, ref lines);
                                if (String.IsNullOrEmpty(menu_2_display))
                                {
                                    msgType = "2";
                                    opType = "2";
                                    is_close = true;
                                    //Refund user
                                    ServiceClass subscriber_service2 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                    LoginRequest LoginRequestBody2 = new LoginRequest()
                                    {
                                        ServiceID = service.service_id,
                                        Password = service.service_password
                                    };
                                    LoginResponse res2 = Login.DoLogin(LoginRequestBody2);
                                    if (res2 != null)
                                    {
                                        if (res2.ResultCode == 1000)
                                        {
                                            string token_id = res2.TokenID;
                                            DYATransferMoneyRequest momotransfer_request = new DYATransferMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(amount_2_pay),
                                                ServiceID = service.service_id,
                                                TokenID = token_id,
                                                TransactionID = "POSTicketPayout_" + bar_code
                                            };
                                            DYATransferMoneyResponse momotransfer_response = CommonFuncations.DYATransferMoney.DoTransfer(momotransfer_request);

                                            if (momotransfer_response.ResultCode == 1000)
                                            {
                                                int cashier_id = Api.CommonFuncations.iDoBetMTNCameroon.GetCashierID(MSISDN, ref lines);
                                                if (cashier_id > 0)
                                                {
                                                    DataLayer.DBQueries.ExecuteQuery("insert into casheir_transactions (cashier_id, bar_code, total_payout, date_time, dya_id) values(" + cashier_id + ", '" + bar_code + "', " + amount_2_pay + ", now()," + momotransfer_response.TransactionID + ");", ref lines);
                                                }
                                                GoogleAnalytics.SendData2GoogleAnalytics("UA-154843894-1", "ussd", Base64.Reverse(MSISDN), System.Web.HttpContext.Current.Request.ServerVariables["REMOTE_ADDR"], "BJ", "event", "PyoutPOSTicket", "MOMO", "-" + ussdString, "/", ref lines);
                                                //dopayout
                                                bool dopayout_res = Api.CommonFuncations.iDoBetMTNCameroon.DoPayOutNew(momotransfer_response.Timestamp, momotransfer_response.TransactionID, bar_code, ref lines);
                                                //bool dopayout_res = iDoBet.DoPayout(bar_code, ref lines);
                                                menu_2_display = "Félicitations, le billet a été remboursé sur votre compte MTN MOMO.";

                                            }
                                            else
                                            {
                                                menu_2_display = "Le billet n'a pas été remboursé sur votre compte MTN MOMO." + Environment.NewLine;
                                                menu_2_display = menu_2_display + "Veuillez réessayer";
                                                string mail_body = "<p><h2>Payout MTN Cameroon has failed DYATransfer</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>MOMO Response: </b>" + momotransfer_response.ResultCode + " " + momotransfer_response.Description + "<br></p>";
                                                string mail_subject = "Payout MTN Cameroon has failed DYATransfer for user - " + user.id;
                                                string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                            }
                                        }
                                    }
                                }

                                break;
                            case 44: //search ticket
                                menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetCheckTicketByBarcodeMenu(MSISDN, ussdString, out amount_2_pay, lang, ref lines);
                                bar_code = ussdString;
                                break;
                            case 39: //add another game
                                if (game_id > 0)
                                {
                                    //DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + ussdString + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',0, " + service.service_id + ")", ref lines);
                                    game_id = 0;
                                    selected_odd = 0;
                                    page_number = 1;
                                    odd_page = 0;
                                }
                                menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetSportsTypeMenu(lang, ref lines);
                                break;
                            case 41: //Delete and Start Over
                                List<Int64> saved_ids1 = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, ref lines);
                                if (saved_ids1 != null)
                                {
                                    foreach (Int64 s in saved_ids1)
                                    {
                                        DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set status = 3 where id = " + s, ref lines);
                                    }
                                }

                                //DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set status = 3 where user_seesion_id = '" + user_session_id + "'", ref lines);
                                game_id = 0;
                                odd_page = 0;
                                selected_odd = 0;
                                page_number = 1;
                                menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetSportsTypeMenu(lang, ref lines);
                                ussd_menu.action_id = 2;
                                break;
                            case 48:
                                menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetSoccerLeagueMenu(35, "0", ussd_menu.ussd_id, ref lines, out selected_league_id, lang);
                                break;
                            case 47:
                                menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetSoccerLeagueMenu(32, "0", ussd_menu.ussd_id, ref lines, out selected_league_id, lang);
                                break;
                            case 37: //display soccer leagu
                                menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetSoccerLeagueMenu(31, "0", ussd_menu.ussd_id, ref lines, out selected_league_id, lang);
                                break;
                            case 49:
                            case 50:
                            case 38://selected league
                            case 28://Start Over
                            case 29:
                            case 30:
                            case 16://AddXXXGame or 
                            case 17:
                            case 18:
                            case 7: //DisplayXXXTopEvents   
                            case 8:
                            case 9:
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && page_number > 0)
                                {
                                    page_number = page_number - 1;
                                }
                                if (ussd_menu.action_id == 28 || ussd_menu.action_id == 29 || ussd_menu.action_id == 30)
                                {
                                    List<Int64> saved_ids2 = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, ref lines);
                                    if (saved_ids2 != null)
                                    {
                                        foreach (Int64 s in saved_ids2)
                                        {
                                            DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set status = 3 where id = " + s, ref lines);
                                        }
                                    }
                                    //DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set status = 3 where user_seesion_id = '"+user_session_id+"'", ref lines);
                                    game_id = 0;
                                    selected_odd = 0;
                                    odd_page = 0;
                                    page_number = 1;

                                }
                                if (ussd_menu.action_id == 16 || ussd_menu.action_id == 17 || ussd_menu.action_id == 18)
                                {
                                    if (game_id > 0)
                                    {
                                        //DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + ussdString + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',0, " + service.service_id + ")", ref lines);
                                        game_id = 0;
                                        selected_odd = 0;
                                        page_number = 1;
                                        odd_page = 0;
                                    }

                                }
                                switch (ussd_menu.action_id)
                                {
                                    case 38:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetEventsMenu(ussdString, 31, page_number, ref lines, out selected_league_id, selected_league_id, ussd_menu, lang);
                                        break;
                                    case 49:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetEventsMenu(ussdString, 32, page_number, ref lines, out selected_league_id, selected_league_id, ussd_menu, lang);
                                        break;
                                    case 50:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetEventsMenu(ussdString, 35, page_number, ref lines, out selected_league_id, selected_league_id, ussd_menu, lang);
                                        break;
                                    case 28:
                                    case 16:
                                    case 7:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetEventsMenu(31, page_number, lang, ref lines);
                                        break;
                                    case 29:
                                    case 17:
                                    case 8:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetEventsMenu(32, page_number, lang, ref lines);
                                        break;
                                    case 30:
                                    case 18:
                                    case 9:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetEventsMenu(35, page_number, lang, ref lines);
                                        break;
                                }


                                break;
                            case 10: //DisplayXXXGame
                            case 11:
                            case 12:
                                page_number = (page_number == 0 ? 1 : page_number);
                                selected_odd = 0;
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    odd_page = odd_page + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && odd_page > 0)
                                {
                                    odd_page = odd_page - 1;
                                }
                                switch (ussd_menu.action_id)
                                {
                                    case 10:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetGameOddsMenu(31, page_number, ussdString, game_id, odd_page, out game_id, selected_league_id, lang, ref lines);
                                        break;
                                    case 11:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetGameOddsMenu(32, page_number, ussdString, game_id, odd_page, out game_id, selected_league_id, lang, ref lines);
                                        break;
                                    case 12:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetGameOddsMenu(35, page_number, ussdString, game_id, odd_page, out game_id, selected_league_id, lang, ref lines);
                                        break;
                                }
                                break;
                            case 13: //ConfirmXXXGame (select odd)
                            case 14:
                            case 15:
                                switch (ussd_menu.action_id)
                                {
                                    case 13:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetConfirmMenu(31, game_id, ussdString, odd_page, out selected_odd, out selected_bet_type_id, out selected_odd_name, out selected_odd_line, lang, ref lines, ussd_session, MSISDN, service);
                                        break;
                                    case 14:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetConfirmMenu(32, game_id, ussdString, odd_page, out selected_odd, out selected_bet_type_id, out selected_odd_name, out selected_odd_line, lang, ref lines, ussd_session, MSISDN, service);
                                        break;
                                    case 15:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetConfirmMenu(35, game_id, ussdString, odd_page, out selected_odd, out selected_bet_type_id, out selected_odd_name, out selected_odd_line, lang, ref lines, ussd_session, MSISDN, service);
                                        break;
                                }
                                break;
                            case 92: //FreeBet
                                bool placebet2 = false;
                                USSDBonus ub = null;
                                menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.CheckFreeBet(ussd_session, MSISDN, out placebet2, out ub, ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                if (String.IsNullOrEmpty(menu_2_display) && placebet2)
                                {
                                    List<Int64> saved_ids3 = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, ref lines);
                                    if (saved_ids3 != null)
                                    {
                                        foreach (Int64 s in saved_ids3)
                                        {
                                            DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set amount = " + ub.amount + " where id = " + s, ref lines);
                                        }
                                    }

                                    bool req_for_order = Api.CommonFuncations.iDoBetMTNCameroon.PlaceBet(ussd_session, ref lines);
                                    if (req_for_order == true)
                                    {
                                        //final placebet
                                        Int64 dya_id = Api.DataLayer.DBQueries.ExecuteQueryReturnInt64("insert into dya_transactions (msisdn, service_id, date_time, amount, result, result_desc, dya_method, transaction_id) values(" + MSISDN + "," + service.service_id + ",now()," + ub.amount + ",'02','USSD Bonus',2,'" + ussd_session.user_seesion_id + "')", ref lines);
                                        DYATransactions dya_trans = UpdateGetDYAReciveTrans(dya_id, "02", "USSD Bonus", ref lines);
                                        ExecuteOrderDetails barcode = null;
                                        string postBody = "", response_body = "";
                                        if (dya_trans.partner_transid.Contains("Rapidos_"))
                                        {
                                            barcode = CommonFuncations.iDoBetMTNCameroon.PlaceBetRapidos(dya_trans, out postBody, out response_body, ref lines);
                                        }
                                        else
                                        {
                                            barcode = CommonFuncations.iDoBetMTNCameroon.GetExecuteOrderNew(dya_trans, out postBody, out response_body, ref lines);
                                        }
                                        if (barcode != null)
                                        {
                                            double total_ratio = (Convert.ToDouble(barcode.max_payout) / Convert.ToDouble(barcode.amount));
                                            Api.DataLayer.DBQueries.ExecuteQuery("insert into ussd_bonus_bets (ussd_bonus_user_id, amount, odd, selections, barcode, payout_dya_id, date_time) values(" + ub.bonus_user_id + "," + ub.amount + "," + total_ratio + "," + saved_ids3.Count() + ",'" + barcode.barcode + "',0,now())", ref lines);
                                            string text_msg_ms = "Bonjour, votre bonus pari a ete place avec succes.\n";// + Environment.NewLine;
                                            text_msg_ms = text_msg_ms + "Numero de commande: " + barcode.order_number + "\n";// Environment.NewLine;
                                            text_msg_ms = text_msg_ms + "Code a barre: " + barcode.barcode + "\n";//Environment.NewLine;
                                            text_msg_ms = text_msg_ms + "Montant: " + barcode.amount + "\n";//Environment.NewLine;
                                            text_msg_ms = text_msg_ms + "Gain Maximum: " + barcode.max_payout;//Environment.NewLine;
                                            lines = Add2Log(lines, " total_bonus =  " + barcode.total_bonus, 100, lines[0].ControlerName);
                                            if (!String.IsNullOrEmpty(barcode.total_bonus))
                                            {
                                                text_msg_ms = text_msg_ms + "\nBonus: " + barcode.total_bonus;//Environment.NewLine;
                                            }
                                            //send sms
                                            LoginRequest LoginRequestBody = new LoginRequest()
                                            {
                                                ServiceID = service.service_id,
                                                Password = service.service_password
                                            };
                                            LoginResponse res = Login.DoLogin(LoginRequestBody);
                                            if (res != null)
                                            {
                                                if (res.ResultCode == 1000)
                                                {
                                                    string token_id = res.TokenID;
                                                    SendSMSRequest RequestSendSMSBody1 = new SendSMSRequest()
                                                    {
                                                        ServiceID = service.service_id,
                                                        MSISDN = Convert.ToInt64(MSISDN),
                                                        Text = text_msg_ms,
                                                        TokenID = token_id,
                                                        TransactionID = "12345"
                                                    };
                                                    SendSMSResponse response_sendsms1 = SendSMS.DoSMS(RequestSendSMSBody1);
                                                    if (response_sendsms1 != null)
                                                    {
                                                        if (response_sendsms1.ResultCode == 1010 || response_sendsms1.ResultCode == 1000)
                                                        {
                                                            lines = Add2Log(lines, " Send SMS Was OK", 100, lines[0].ControlerName);
                                                        }
                                                        else
                                                        {
                                                            lines = Add2Log(lines, " Send SMS Failed", 100, lines[0].ControlerName);
                                                        }
                                                    }
                                                    else
                                                    {
                                                        lines = Add2Log(lines, " Send SMS Failed", 100, lines[0].ControlerName);
                                                    }
                                                }
                                            }
                                        }
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNCameroon.GetUSSDBonusCloseBet(barcode, ref lines);
                                    }
                                }

                                break;
                        }
                        lines = Add2Log(lines, " page_number = " + page_number, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " game_id = " + game_id, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " odd_page = " + odd_page, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " selected_odd = " + selected_odd, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " amount = " + amount, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " selected_league_id = " + selected_league_id, 100, "ivr_subscribe");
                        result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, menu_2_display, msgType, opType);
                        DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id, selected_odd, selected_bet_type_id,selected_odd_name, selected_odd_line, amount, selected_league_id, amount_2_pay, bar_code, selected_subagent_name, rapidos_string) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + "," + status + ", '" + ussdString + "', " + ussd_menu.action_id + ", " + page_number + "," + odd_page + "," + game_id + "," + topic_id + ",'" + user_session_id + "'," + selected_odd + "," + selected_bet_type_id + ",'" + selected_odd_name + "','" + selected_odd_line + "', " + amount + "," + selected_league_id + "," + amount_2_pay + ",'" + bar_code + "','" + selected_subagent_name + "', '" + rapidos_string + "');", "DBConnectionString_104", ref lines);
                        break;
                }
            }

            return result;
        }

        public static string MTNGuineaUSSDBehaviuer(ServiceClass service, string ussdString, string ServiceID, string MSISDN, string linkid, string receiveCB, string senderCB, string serviceCode, USSDMenu ussd_menu, USSDSession ussd_session, out DYAReceiveMoneyRequest momo_request, ref List<LogLines> lines, out string menu_2_display, out bool is_close, string force_session_id)
        {
            momo_request = null;
            menu_2_display = "";
            is_close = false;
            string result = "";
            force_session_id = (String.IsNullOrEmpty(force_session_id) ? Guid.NewGuid().ToString() : force_session_id);
            string user_session_id = (ussd_session == null ? force_session_id : ussd_session.user_seesion_id);
            int topic_id = (ussd_session != null ? ussd_session.topic_id : ussd_menu.topic_id);
            if (!String.IsNullOrEmpty(ussd_menu.menu_2_display))
            {
                menu_2_display = ussd_menu.menu_2_display;
                result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, ussd_menu.menu_2_display, "1", "1");
                DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + ",0, '" + ussdString + "', " + ussd_menu.action_id + ", " + (ussd_session == null ? 0 : ussd_session.page_number) + "," + (ussd_session == null ? 0 : ussd_session.odd_page) + "," + (ussd_session == null ? 0 : ussd_session.game_id) + "," + topic_id + ",'" + user_session_id + "');", "DBConnectionString_104", ref lines);
            }
            if (ussd_menu.action_id == 3) //close
            {
                menu_2_display = ussd_menu.menu_2_display;
                is_close = true;
                result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, menu_2_display, "2", "2");
                DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + ",1, '" + ussdString + "', " + ussd_menu.action_id + ", " + (ussd_session == null ? 0 : ussd_session.page_number) + "," + (ussd_session == null ? 0 : ussd_session.odd_page) + "," + (ussd_session == null ? 0 : ussd_session.game_id) + "," + topic_id + ",'" + user_session_id + "');", "DBConnectionString_104", ref lines);
            }

            if (String.IsNullOrEmpty(result))
            {
                switch (topic_id)
                {
                    case 5:
                    case 2:
                    case 7:
                        int page_number = (ussd_session != null ? ussd_session.page_number : 1);
                        int odd_page = (ussd_session != null ? ussd_session.odd_page : 0);
                        Int64 game_id = (ussd_session != null ? ussd_session.game_id : 0);
                        string rapidos_string = (ussd_session != null ? ussd_session.rapidos_string : "0");
                        double selected_odd = (ussd_session != null ? ussd_session.selected_odd : 0);
                        int selected_bet_type_id = (ussd_session != null ? ussd_session.selected_bet_type_id : 0);
                        string selected_odd_name = (ussd_session != null ? ussd_session.selected_odd_name : "0");
                        string selected_odd_line = (ussd_session != null ? ussd_session.selected_odd_line : "null");
                        string amount = (ussd_session != null ? ussd_session.amount : "0");
                        int selected_league_id = (ussd_session != null ? ussd_session.selected_league_id : 0);
                        string msgType = "1", opType = "1";
                        int status = 0;
                        string amount_2_pay = (ussd_session != null ? ussd_session.amount_2_pay.ToString() : "0");
                        string bar_code = (ussd_session != null ? ussd_session.bar_code : "0");
                        string selected_subagent_name = (ussd_session != null ? ussd_session.selected_subagent_name : "0");
                        IdoBetUser user = new IdoBetUser();
                        switch (ussd_menu.action_id)
                        {
                            case 86:
                            case 87:
                                if (ussdString =="1")
                                {
                                    switch (ussd_menu.action_id)
                                    {
                                        case 86:
                                            game_id = 41;
                                            break;
                                        case 87:
                                            game_id = 42;
                                            break;
                                    }
                                    DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games_mgn (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + rapidos_string + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',2000, " + service.service_id + ")", "DBConnectionString_104", ref lines);
                                    msgType = "2";
                                    opType = "2";
                                    is_close = true;
                                    status = 1;

                                    menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetCloseBet(ussd_session, amount, ref lines);
                                    LoginRequest LoginRequestBody = new LoginRequest()
                                    {
                                        ServiceID = service.service_id,
                                        Password = service.service_password
                                    };
                                    LoginResponse res = Login.DoLogin(LoginRequestBody);
                                    if (res != null)
                                    {
                                        if (res.ResultCode == 1000)
                                        {
                                            string token_id = res.TokenID;
                                            momo_request = new DYAReceiveMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = 2000,
                                                ServiceID = service.service_id,
                                                TokenID = token_id,
                                                TransactionID = "Rapidos_" + user_session_id
                                            };
                                        }
                                    }

                                }
                                break;
                            case 75:
                            case 76:
                            case 77:
                                bool placebet1 = false;
                                double num3;
                                int max_bet = 0;
                                bool check_amount = double.TryParse(ussdString, out num3);
                                if (check_amount == true)
                                {
                                    switch (ussd_menu.action_id)
                                    {
                                        case 75:
                                            game_id = 35;
                                            max_bet = 340000;
                                            break;
                                        case 76:
                                            game_id = 36;
                                            max_bet = 65000;
                                            break;
                                        case 77:
                                            game_id = 37;
                                            max_bet = 4000;
                                            break;
                                    }
                                    if (num3 >= 1200 && num3 <= max_bet)
                                    {
                                        DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games_mgn (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + rapidos_string + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',"+ num3 + ", " + service.service_id + ")", "DBConnectionString_104", ref lines);
                                        placebet1 = true;
                                    }
                                    else
                                    {

                                        menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetWrongPriceBetRapidos(max_bet, ref lines);
                                        DataLayer.DBQueries.ExecuteQuery("delete from ussd_saved_games_mgn where user_session_id = '" + user_session_id + "' order by id desc limit 1", "DBConnectionString_104", ref lines);
                                    }
                                }
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                //RequestForOrder
                                //bool req_for_order = GetRequestForOrder(ussd_session, ref lines);
                                if (placebet1)
                                {
                                    
                                    menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetCloseBet(ussd_session, amount, ref lines);
                                    LoginRequest LoginRequestBody = new LoginRequest()
                                    {
                                        ServiceID = service.service_id,
                                        Password = service.service_password
                                    };
                                    LoginResponse res = Login.DoLogin(LoginRequestBody);
                                    if (res != null)
                                    {
                                        if (res.ResultCode == 1000)
                                        {
                                            string token_id = res.TokenID;
                                            momo_request = new DYAReceiveMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(ussdString),
                                                ServiceID = service.service_id,
                                                TokenID = token_id,
                                                TransactionID = "Rapidos_"+user_session_id
                                            };
                                        }
                                    }
                                }

                                break;

                            case 72: //Confirm Rapidos
                            case 73:
                            case 74:
                                String[] strlist = new string[] { };
                                bool validate_num = Api.CommonFuncations.iDoBetMTNGuinea.ValidateRapidosInput(ussdString, ussd_menu.action_id, out strlist, ref lines);
                                if (validate_num)
                                {
                                    menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetConfirmRapidosMenu(ussd_menu.action_id, ussdString, out game_id, ref lines);
                                    rapidos_string = ussdString;
                                }
                                else
                                {
                                    menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.WrongRapidosNumber();
                                }
                                break;
                            case 109:
                            case 110:
                            case 111:
                            case 112:
                            case 113:
                            case 114:
                            case 115:
                            case 116:
                            case 117:
                            case 118:
                            case 119://enter dusun lottery numbers
                                bool validate_num_dusan = Api.CommonFuncations.iDoBetMTNGuinea.ValidateDusanLottoInput(ussdString, ussd_menu.action_id, out strlist, ref lines);
                                if (validate_num_dusan)
                                {
                                    menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetConfirmDusanLottoMenu(ussd_menu.action_id, ussdString, out game_id, ref lines);
                                    rapidos_string = ussdString;
                                }
                                else
                                {
                                    menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.WrongRapidosNumber();
                                }
                                break;
                            case 120:
                            case 121:
                            case 122:
                            case 123:
                            case 124:
                            case 125:
                            case 126:
                            case 127:
                            case 128:
                            case 129:
                            case 130://enter dusan lottery amount
                                switch (ussd_menu.action_id)
                                {
                                    case 120:
                                        game_id = 4;
                                        break;
                                    case 121:
                                        game_id = 3;
                                        break;
                                    case 122:
                                        game_id = 2;
                                        break;
                                    case 123:
                                        game_id = 1;
                                        break;
                                    case 124:
                                        game_id = 11;
                                        break;
                                    case 125:
                                        game_id = 10;
                                        break;
                                    case 126:
                                        game_id = 9;
                                        break;
                                    case 127:
                                        game_id = 5;
                                        break;
                                    case 128:
                                        game_id = 6;
                                        break;
                                    case 129:
                                        game_id = 7;
                                        break;
                                    case 130:
                                        game_id = 8;
                                        break;
                                }
                                ServiceClass lotto_service = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games_mgn (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + rapidos_string + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',"+ussdString+", " + ussd_menu.service_id + ")", "DBConnectionString_104", ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;

                                menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetCloseDusanLotto(ref lines);
                                
                                LoginRequest LoginRequestBody_lotto = new LoginRequest()
                                {
                                    ServiceID = lotto_service.service_id,
                                    Password = lotto_service.service_password
                                };
                                LoginResponse res_lotto = Login.DoLogin(LoginRequestBody_lotto);
                                if (res_lotto != null)
                                {
                                    if (res_lotto.ResultCode == 1000)
                                    {
                                        string token_id = res_lotto.TokenID;
                                        momo_request = new DYAReceiveMoneyRequest()
                                        {
                                            MSISDN = Convert.ToInt64(MSISDN),
                                            Amount = Convert.ToInt32(ussdString),
                                            ServiceID = lotto_service.service_id,
                                            TokenID = token_id,
                                            TransactionID = "DusanLotto_" + user_session_id
                                        };
                                    }
                                }
                                break;
                            case 84: //Confirm Lotto
                            case 85:
                                String[] strlist1 = new string[] { };
                                bool validate_num1 = Api.CommonFuncations.iDoBetMTNGuinea.ValidateLottoInput(ussdString, ussd_menu.action_id, out strlist1, ref lines);
                                if (validate_num1)
                                {
                                    menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetConfirmLottoMenu(ussd_menu.action_id, ussdString, out game_id, ref lines);
                                    rapidos_string = ussdString;
                                }
                                else
                                {
                                    menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.WrongRapidosNumber();
                                }
                                break;
                            case 55://EnterAmountForSubAgent
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                Int64 pos_trans_id = 0;
                                menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetAmountForSubAgentMenu(MSISDN, ussdString, selected_subagent_name, out pos_trans_id, ref lines);
                                if (pos_trans_id > 0)
                                {
                                    ServiceClass subscriber_service1 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                    LoginRequest LoginRequestBody = new LoginRequest()
                                    {
                                        ServiceID = subscriber_service1.service_id,
                                        Password = subscriber_service1.service_password
                                    };
                                    LoginResponse res = Login.DoLogin(LoginRequestBody);
                                    if (res != null)
                                    {
                                        if (res.ResultCode == 1000)
                                        {
                                            string token_id = res.TokenID;
                                            momo_request = new DYAReceiveMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(ussdString),
                                                ServiceID = ussd_menu.service_id,
                                                TokenID = token_id,
                                                TransactionID = "POSTrans_" + pos_trans_id

                                            };
                                        }
                                    }
                                }



                                break;
                            case 54:
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetSlectedSubAgentMenu(MSISDN, page_number, ussdString, out selected_subagent_name, ref lines);
                                break;
                            case 80: //Foot Solider Check MSISDN and ask to enter full name 
                                is_close = true;
                                menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetFootSoldiersMSISDNMenu(MSISDN, ussdString, out is_close, service, ref lines);
                                if (is_close)
                                {
                                    msgType = "2";
                                    opType = "2";
                                }
                                else
                                {
                                    Api.DataLayer.DBQueries.ExecuteQuery("insert into ussd_footsoldiers_attempts (user_session_id, footsoldier_msisdn, user_msisdn, full_name, user_id, date_time) values('"+ user_session_id + "', "+MSISDN+", 224"+ussdString+", '', 0, now())", ref lines);
                                }
                                break;
                            case 79: //Foot Soldier create user
                                is_close = true;
                                Int64 user_msisdn = Api.DataLayer.DBQueries.SelectQueryReturnInt64("SELECT u.user_msisdn from ussd_footsoldiers_attempts u WHERE u.user_session_id = '" + user_session_id + "' order by u.id desc limit 1", ref lines);
                                if (user_msisdn > 0)
                                {
                                    CreateUserResponse create_user = new CreateUserResponse();
                                    menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetFootSoldiersFullNameMenu(MSISDN, ussdString, out is_close, ussd_menu, user_msisdn.ToString(), out create_user, ref lines);
                                    if (is_close)
                                    {
                                        LoginRequest LoginRequestBody = new LoginRequest()
                                        {
                                            ServiceID = service.service_id,
                                            Password = service.service_password
                                        };
                                        LoginResponse res = Login.DoLogin(LoginRequestBody);
                                        if (res != null)
                                        {
                                            if (res.ResultCode == 1000)
                                            {
                                                
                                                Int64 rec_id = Api.DataLayer.DBQueries.SelectQueryReturnInt64("SELECT u.id from ussd_footsoldiers_attempts u WHERE u.user_session_id = '" + user_session_id + "' order by u.id desc limit 1", ref lines);
                                                Api.DataLayer.DBQueries.ExecuteQuery("update ussd_footsoldiers_attempts set user_id = " +create_user.userId+", full_name = '"+ussdString+"' where id = " + rec_id, ref lines);
                                                string token_id = res.TokenID;
                                                string sms_text = "Felicitations, vous vous etes inscrit avec succes sur YellowBet. https://m.yellowbet.com.gn/#/login Mot de passe: " + create_user.password;
                                                Api.DataLayer.DBQueries.ExecuteQuery("insert into foot_soldiers_sms (date_time, msisdn, service_id, sms_text) values(now(), "+user_msisdn+","+service.service_id+",'"+sms_text+"');", ref lines);
                                                SendSMSRequest RequestSendSMSBody1 = new SendSMSRequest()
                                                {
                                                    ServiceID = service.service_id,
                                                    MSISDN = user_msisdn,
                                                    Text = sms_text,
                                                    TokenID = token_id,
                                                    TransactionID = "12345"
                                                };
                                                SendSMSResponse response_sendsms1 = SendSMS.DoSMS(RequestSendSMSBody1);
                                                if (response_sendsms1 != null)
                                                {
                                                    if (response_sendsms1.ResultCode == 1010 || response_sendsms1.ResultCode == 1000)
                                                    {
                                                        lines = Add2Log(lines, " Send SMS Was OK", 100, lines[0].ControlerName);
                                                    }
                                                    else
                                                    {
                                                        lines = Add2Log(lines, " Send SMS Failed", 100, lines[0].ControlerName);
                                                    }
                                                }
                                                else
                                                {
                                                    lines = Add2Log(lines, " Send SMS Failed", 100, lines[0].ControlerName);
                                                }
                                            }
                                        }
                                    }
                                }
                                else
                                {
                                    is_close = false;
                                    menu_2_display = "Error 78_2" + Environment.NewLine;
                                    menu_2_display = menu_2_display + Environment.NewLine + "M) ";// Menu Principal ";
                                    
                                }
                                break;
                            case 78: //Foot Soldier Main Menu asking to enter MSISDN
                                menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetFootSoldierMainMenu(MSISDN, ref lines);
                                break;
                            case 53:
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetAgentMainMenu(MSISDN, page_number, ref lines);
                                break;
                            case 34: //DepositMoney
                                user = Api.CommonFuncations.iDoBetMTNGuinea.SearchUserNew(MSISDN, ref lines);
                                menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetDepositMoneyMenu(user, ussd_menu, MSISDN, ref lines);
                                break;
                            case 36: //StartDepositMoney
                                user = Api.CommonFuncations.iDoBetMTNGuinea.SearchUserNew(MSISDN, ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetStartDepositMoneyMenu(service, user, ussd_menu, MSISDN, ussdString, out momo_request, ref lines);
                                break;
                            case 33: //WithdrawMoney
                                user = Api.CommonFuncations.iDoBetMTNGuinea.SearchUserNew(MSISDN, ref lines);
                                menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetWithdrawMoneyMenu(user, ref lines);
                                break;
                            case 35: //StartWithdrawMoney
                                user = Api.CommonFuncations.iDoBetMTNGuinea.SearchUserNew(MSISDN, ref lines);
                                menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetStartWithdrawMoneyMenu(user, false, false, false, ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                if (user.isValid == true)
                                {
                                    if (Convert.ToInt32(ussdString) <= user.AvailableForWithdraw && Convert.ToInt32(ussdString) > 0)
                                    {
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.CheckBeforeWithdrawMenu(service, MSISDN, ref lines);
                                        if (String.IsNullOrEmpty(menu_2_display))
                                        {
                                            //Refund user
                                            ServiceClass subscriber_service1 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                            LoginRequest LoginRequestBody1 = new LoginRequest()
                                            {
                                                ServiceID = service.service_id,
                                                Password = service.service_password
                                            };
                                            LoginResponse res1 = Login.DoLogin(LoginRequestBody1);
                                            if (res1 != null)
                                            {
                                                if (res1.ResultCode == 1000)
                                                {
                                                    string token_id = res1.TokenID;
                                                    DYATransferMoneyRequest momotransfer_request = new DYATransferMoneyRequest()
                                                    {
                                                        MSISDN = Convert.ToInt64(MSISDN),
                                                        Amount = Convert.ToInt32(ussdString),
                                                        ServiceID = service.service_id,
                                                        TokenID = token_id,
                                                        TransactionID = "USSDWithdraw_" + Guid.NewGuid().ToString()
                                                    };
                                                    string postBody = "", response_body = "";
                                                    //bool wd_result = StartWithdraw(user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                    bool do_withdraw = false;
                                                    string code = "";
                                                    if (user.AvailableForWithdraw > 0)
                                                    {
                                                        do_withdraw = true;
                                                        code = Api.CommonFuncations.iDoBetMTNGuinea.StartWithdrawNew(user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                    }



                                                    menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetStartWithdrawMoneyMenu(user, true, true, false, ref lines);

                                                    if (code == "")
                                                    {
                                                        if (do_withdraw)
                                                        {
                                                            menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetStartWithdrawMoneyMenu(user, false, false, false, ref lines);
                                                            string mail_body = "<p><h2>Start Withdraw MTN Guinea has failed</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>Json: </b>" + postBody + "<br><b>Response: </b>" + response_body + "<br></p>";
                                                            string mail_subject = "Start Withdraw MTN Guinea has failed for user - " + user.id;
                                                            string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                            string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                            string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                            string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                            int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                            string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                            CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                                        }

                                                    }
                                                    else
                                                    {
                                                        DYATransferMoneyResponse momotransfer_response = CommonFuncations.DYATransferMoney.DoTransfer(momotransfer_request);
                                                        if (momotransfer_response.ResultCode == 1000)
                                                        {
                                                            postBody = "";
                                                            response_body = "";
                                                            bool end_withdraw = Api.CommonFuncations.iDoBetMTNGuinea.EndWithdrawNew(momotransfer_response.Timestamp, momotransfer_response.TransactionID, true, code, user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                            if (!end_withdraw)
                                                            {
                                                                menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetStartWithdrawMoneyMenu(user, false, false, false, ref lines);
                                                                string mail_body = "", mail_subject = "";
                                                                mail_body = "<p><h2>End Withdraw MTN Guinea has failed but DYATransfer was ok</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>Request: </b>" + postBody + "<br>Response: " + response_body + "<br></p>";
                                                                mail_subject = "End Withdraw MTN Guinea has failed but DYATransfer was ok - " + user.id;
                                                                string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                                string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                                string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                                string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                                int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                                string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                                CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                                            }
                                                            GoogleAnalytics.SendData2GoogleAnalytics("UA-154843894-1", "ussd", Base64.Reverse(MSISDN), System.Web.HttpContext.Current.Request.ServerVariables["REMOTE_ADDR"], "BJ", "event", "Withdraw", "MOMO", "-" + ussdString, "/", ref lines);
                                                        }
                                                        else
                                                        {
                                                            menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetStartWithdrawMoneyMenu(user, false, false, false, ref lines);
                                                            postBody = "";
                                                            response_body = "";
                                                            bool end_withdraw = iDoBetMTNGuinea.EndWithdrawNew(momotransfer_response.Timestamp, momotransfer_response.TransactionID, false, code, user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                            string mail_body = "", mail_subject = "";
                                                            mail_body = "<p><h2>Withdraw MTN Guinea has failed DYATransfer</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>MOMO Response: </b>" + momotransfer_response.ResultCode + " " + momotransfer_response.Description + "<br>User was refunded: " + end_withdraw + "<br><b>Request: </b>" + postBody + "<br><b>Response: </b>" + response_body + "</p>";
                                                            mail_subject = "Withdraw MTN Guinea has failed DYATransfer for user - " + user.id;
                                                            string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                            string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                            string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                            string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                            int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                            string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                            CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                                        }
                                                    }



                                                }
                                            }
                                        }


                                    }
                                    else
                                    {
                                        //user has requested more than allowed
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetStartWithdrawMoneyMenu(user, false, false, true, ref lines);
                                    }
                                }
                                break;
                            case 25://CloseXXXBet
                            case 26:
                            case 27:
                                List<Int64> saved_ids = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, "_mgn", ref lines);
                                bool placebet = false;
                                double num2;
                                bool res_parse1 = double.TryParse(amount, out num2);
                                if (res_parse1 == true)
                                {
                                    if (num2 >= 2000 && num2 <= 6000000)
                                    {
                                        placebet = true;
                                        if (saved_ids != null)
                                        {
                                            foreach (Int64 s in saved_ids)
                                            {
                                                DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games_mgn set amount = " + amount + " where id = " + s, "DBConnectionString_104", ref lines);
                                            }
                                        }
                                    }
                                    else
                                    {

                                        menu_2_display = Api.CommonFuncations.iDoBetMoov.GetWrongPriceBetMeny(ref lines);
                                        DataLayer.DBQueries.ExecuteQuery("delete from ussd_saved_games_mgn where user_session_id = '" + user_session_id + "' order by id desc limit 1", "DBConnectionString_104", ref lines);
                                    }
                                }
                                
                                
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                //RequestForOrder
                                //bool req_for_order = GetRequestForOrder(ussd_session, ref lines);
                                if (placebet)
                                {
                                    bool req_for_order = Api.CommonFuncations.iDoBetMTNGuinea.PlaceBet(ussd_session, ref lines);

                                    if (req_for_order == true)
                                    {
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetCloseBet(ussd_session, amount, ref lines);
                                        ServiceClass subscriber_service2 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                        LoginRequest LoginRequestBody = new LoginRequest()
                                        {
                                            ServiceID = subscriber_service2.service_id,
                                            Password = subscriber_service2.service_password
                                        };
                                        LoginResponse res = Login.DoLogin(LoginRequestBody);
                                        if (res != null)
                                        {
                                            if (res.ResultCode == 1000)
                                            {
                                                string token_id = res.TokenID;
                                                momo_request = new DYAReceiveMoneyRequest()
                                                {
                                                    MSISDN = Convert.ToInt64(MSISDN),
                                                    Amount = Convert.ToInt32(amount),
                                                    ServiceID = ussd_menu.service_id,
                                                    TokenID = token_id,
                                                    TransactionID = user_session_id

                                                };
                                            }
                                        }
                                    }
                                    else
                                    {
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetCloseBetFailed(ref lines);
                                    }
                                }
                                
                                break;
                            case 22: //ConfirmBetXXX
                            case 23:
                            case 24:
                                amount = ussdString;
                                double num1;
                                bool res_parse = double.TryParse(amount, out num1);
                                if (res_parse == true)
                                {
                                    if (num1 >= 2000 && num1 <= 6000000)
                                    {
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetConfirmBet(ussd_session, amount, ref lines);
                                    }
                                    else
                                    {

                                        menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetWrongPriceBetMeny(ref lines);
                                        DataLayer.DBQueries.ExecuteQuery("delete from ussd_saved_games_mgn where user_session_id = '" + user_session_id + "' order by id desc limit 1", "DBConnectionString_104", ref lines);
                                    }
                                }
                                odd_page = 0;

                                break;
                            case 19: //PayAndConfirmXXX
                            case 20:
                            case 21:
                                //need to check if user clicks back and then returns to this section.
                                //DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + ussdString + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',0, " + service.service_id + ")", ref lines);
                                menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetPayAndConfirm(ussd_session, ref lines);
                                odd_page = 0;
                                break;
                            case 32: //ticket status
                                page_number = (page_number == 0 ? 1 : page_number);
                                menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetCheckTicketMenu(MSISDN, page_number, ussdString, ref lines);
                                break;
                            case 31: //tickets status by phone
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetCheckTicketsMenu(MSISDN, page_number, ref lines);
                                break;
                            case 52:
                                menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetPayoutBarcodeTicket(ussd_menu, MSISDN, ref lines);
                                if (String.IsNullOrEmpty(menu_2_display))
                                {
                                    msgType = "2";
                                    opType = "2";
                                    is_close = true;
                                    //Refund user
                                    ServiceClass subscriber_service2 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                    LoginRequest LoginRequestBody2 = new LoginRequest()
                                    {
                                        ServiceID = service.service_id,
                                        Password = service.service_password
                                    };
                                    LoginResponse res2 = Login.DoLogin(LoginRequestBody2);
                                    if (res2 != null)
                                    {
                                        if (res2.ResultCode == 1000)
                                        {
                                            string token_id = res2.TokenID;
                                            DYATransferMoneyRequest momotransfer_request = new DYATransferMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(amount_2_pay),
                                                ServiceID = service.service_id,
                                                TokenID = token_id,
                                                TransactionID = "POSTicketPayout_" + bar_code
                                            };
                                            DYATransferMoneyResponse momotransfer_response = CommonFuncations.DYATransferMoney.DoTransfer(momotransfer_request);

                                            if (momotransfer_response.ResultCode == 1000)
                                            {
                                                int cashier_id = Api.CommonFuncations.iDoBetMTNGuinea.GetCashierID(MSISDN, ref lines);
                                                if (cashier_id > 0)
                                                {
                                                    DataLayer.DBQueries.ExecuteQuery("insert into casheir_transactions (cashier_id, bar_code, total_payout, date_time, dya_id) values(" + cashier_id + ", '" + bar_code + "', " + amount_2_pay + ", now()," + momotransfer_response.TransactionID + ");", ref lines);
                                                }
                                                GoogleAnalytics.SendData2GoogleAnalytics("UA-154843894-1", "ussd", Base64.Reverse(MSISDN), System.Web.HttpContext.Current.Request.ServerVariables["REMOTE_ADDR"], "BJ", "event", "PyoutPOSTicket", "MOMO", "-" + ussdString, "/", ref lines);
                                                //dopayout
                                                bool dopayout_res = Api.CommonFuncations.iDoBetMTNGuinea.DoPayOutNew(momotransfer_response.Timestamp, momotransfer_response.TransactionID, bar_code, ref lines);
                                                //bool dopayout_res = iDoBet.DoPayout(bar_code, ref lines);
                                                menu_2_display = "Felicitations, le billet a ete rembourse sur votre compte MOMO.";

                                            }
                                            else
                                            {
                                                menu_2_display = "Le billet n'a pas ete rembourse sur votre compte MOMO." + Environment.NewLine;
                                                menu_2_display = menu_2_display + "Veuillez reessayer";
                                                string mail_body = "<p><h2>Payout MTN Guinea has failed DYATransfer</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>MOMO Response: </b>" + momotransfer_response.ResultCode + " " + momotransfer_response.Description + "<br></p>";
                                                string mail_subject = "Payout MTN Guinea has failed DYATransfer for user - " + user.id;
                                                string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                            }
                                        }
                                    }
                                }

                                break;
                            case 44: //search ticket
                                menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetCheckTicketByBarcodeMenu(MSISDN, ussdString, out amount_2_pay, ref lines);
                                bar_code = ussdString;
                                break;
                            case 39: //add another game
                                if (game_id > 0)
                                {
                                    //DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + ussdString + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',0, " + service.service_id + ")", ref lines);
                                    game_id = 0;
                                    selected_odd = 0;
                                    page_number = 1;
                                    odd_page = 0;
                                }
                                menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetSportsTypeMenu(ref lines);
                                break;
                            case 41: //Delete and Start Over
                                List<Int64> saved_ids1 = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, "_mgn", ref lines);
                                if (saved_ids1 != null)
                                {
                                    foreach (Int64 s in saved_ids1)
                                    {
                                        DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games_mgn set status = 3 where id = " + s, "DBConnectionString_104", ref lines);
                                    }
                                }

                                //DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set status = 3 where user_seesion_id = '" + user_session_id + "'", ref lines);
                                game_id = 0;
                                odd_page = 0;
                                selected_odd = 0;
                                page_number = 1;
                                menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetSportsTypeMenu(ref lines);
                                ussd_menu.action_id = 2;
                                break;
                            case 48:
                                menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetSoccerLeagueMenu(35, "0", ussd_menu.ussd_id, ref lines, out selected_league_id);
                                break;
                            case 47:
                                menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetSoccerLeagueMenu(32, "0", ussd_menu.ussd_id, ref lines, out selected_league_id);
                                break;
                            case 37: //display soccer leagu
                                menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetSoccerLeagueMenu(31, "0", ussd_menu.ussd_id, ref lines, out selected_league_id);
                                break;
                            case 49:
                            case 50:
                            case 38://selected league
                            case 28://Start Over
                            case 29:
                            case 30:
                            case 16://AddXXXGame or 
                            case 17:
                            case 18:
                            case 7: //DisplayXXXTopEvents   
                            case 8:
                            case 9:
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && page_number > 0)
                                {
                                    page_number = page_number - 1;
                                }
                                if (ussd_menu.action_id == 28 || ussd_menu.action_id == 29 || ussd_menu.action_id == 30)
                                {
                                    List<Int64> saved_ids2 = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, "_mgn", ref lines);
                                    if (saved_ids2 != null)
                                    {
                                        foreach (Int64 s in saved_ids2)
                                        {
                                            DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games_mgn set status = 3 where id = " + s, "DBConnectionString_104", ref lines);
                                        }
                                    }
                                    //DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set status = 3 where user_seesion_id = '"+user_session_id+"'", ref lines);
                                    game_id = 0;
                                    selected_odd = 0;
                                    odd_page = 0;
                                    page_number = 1;

                                }
                                if (ussd_menu.action_id == 16 || ussd_menu.action_id == 17 || ussd_menu.action_id == 18)
                                {
                                    if (game_id > 0)
                                    {
                                        //DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + ussdString + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',0, " + service.service_id + ")", ref lines);
                                        game_id = 0;
                                        selected_odd = 0;
                                        page_number = 1;
                                        odd_page = 0;
                                    }

                                }
                                switch (ussd_menu.action_id)
                                {
                                    case 38:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetEventsMenu(ussdString, 31, page_number, ref lines, out selected_league_id, selected_league_id, ussd_menu);
                                        break;
                                    case 49:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetEventsMenu(ussdString, 32, page_number, ref lines, out selected_league_id, selected_league_id, ussd_menu);
                                        break;
                                    case 50:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetEventsMenu(ussdString, 35, page_number, ref lines, out selected_league_id, selected_league_id, ussd_menu);
                                        break;
                                    case 28:
                                    case 16:
                                    case 7:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetEventsMenu(31, page_number, ref lines);
                                        break;
                                    case 29:
                                    case 17:
                                    case 8:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetEventsMenu(32, page_number, ref lines);
                                        break;
                                    case 30:
                                    case 18:
                                    case 9:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetEventsMenu(35, page_number, ref lines);
                                        break;
                                }


                                break;
                            case 10: //DisplayXXXGame
                            case 11:
                            case 12:
                                page_number = (page_number == 0 ? 1 : page_number);
                                selected_odd = 0;
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    odd_page = odd_page + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && odd_page > 0)
                                {
                                    odd_page = odd_page - 1;
                                }
                                switch (ussd_menu.action_id)
                                {
                                    case 10:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetGameOddsMenu(31, page_number, ussdString, game_id, odd_page, out game_id, selected_league_id, ref lines);
                                        break;
                                    case 11:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetGameOddsMenu(32, page_number, ussdString, game_id, odd_page, out game_id, selected_league_id, ref lines);
                                        break;
                                    case 12:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetGameOddsMenu(35, page_number, ussdString, game_id, odd_page, out game_id, selected_league_id, ref lines);
                                        break;
                                }
                                break;
                            case 13: //ConfirmXXXGame (select odd)
                            case 14:
                            case 15:
                                
                                switch (ussd_menu.action_id)
                                {
                                    case 13:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetConfirmMenu(31, game_id, ussdString, odd_page, out selected_odd, out selected_bet_type_id, out selected_odd_name, out selected_odd_line, ref lines, ussd_session, MSISDN, service);
                                        break;
                                    case 14:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetConfirmMenu(32, game_id, ussdString, odd_page, out selected_odd, out selected_bet_type_id, out selected_odd_name, out selected_odd_line, ref lines, ussd_session, MSISDN, service);
                                        break;
                                    case 15:
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetConfirmMenu(35, game_id, ussdString, odd_page, out selected_odd, out selected_bet_type_id, out selected_odd_name, out selected_odd_line, ref lines, ussd_session, MSISDN, service);
                                        break;
                                }
                                break;
                            case 92: //FreeBet
                                bool placebet2 = false;
                                USSDBonus ub = null;
                                menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.CheckFreeBet(ussd_session, MSISDN, out placebet2, out ub, ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                if (String.IsNullOrEmpty(menu_2_display) && placebet2)
                                {
                                    List<Int64> saved_ids3 = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, "_mgn",ref lines);
                                    if (saved_ids3 != null)
                                    {
                                        foreach (Int64 s in saved_ids3)
                                        {
                                            DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games_mgn set amount = " + ub.amount + " where id = " + s, "DBConnectionString_104", ref lines);
                                        }
                                    }

                                    bool req_for_order = Api.CommonFuncations.iDoBetMTNGuinea.PlaceBet(ussd_session, ref lines);
                                    if (req_for_order == true)
                                    {
                                        //final placebet
                                        Int64 dya_id = Api.DataLayer.DBQueries.ExecuteQueryReturnInt64("insert into dya_transactions (msisdn, service_id, date_time, amount, result, result_desc, dya_method, transaction_id) values(" +MSISDN + ","+service.service_id+",now()," +ub.amount + ",'02','USSD Bonus',2,'" + ussd_session.user_seesion_id+"')", ref lines);
                                        DYATransactions dya_trans = UpdateGetDYAReciveTrans(dya_id, "02", "USSD Bonus", ref lines);
                                        ExecuteOrderDetails barcode = null;
                                        string postBody = "", response_body = "";
                                        if (dya_trans.partner_transid.Contains("Rapidos_"))
                                        {
                                            barcode = CommonFuncations.iDoBetMTNGuinea.PlaceBetRapidos(dya_trans, out postBody, out response_body, ref lines);
                                        }
                                        else
                                        {
                                            barcode = CommonFuncations.iDoBetMTNGuinea.GetExecuteOrderNew(dya_trans, out postBody, out response_body, ref lines);
                                        }
                                        if (barcode != null)
                                        {
                                            double total_ratio = (Convert.ToDouble(barcode.max_payout) / Convert.ToDouble(barcode.amount));
                                            Api.DataLayer.DBQueries.ExecuteQuery("insert into ussd_bonus_bets (ussd_bonus_user_id, amount, odd, selections, barcode, payout_dya_id, date_time) values("+ub.bonus_user_id+","+ub.amount+","+ total_ratio + ","+ saved_ids3.Count() + ",'"+barcode.barcode+"',0,now())", ref lines);
                                            string text_msg_ms = "Bonjour, votre bonus pari a ete place avec succes.\n";// + Environment.NewLine;
                                            text_msg_ms = text_msg_ms + "Numero de commande: " + barcode.order_number + "\n";// Environment.NewLine;
                                            text_msg_ms = text_msg_ms + "Code a barre: " + barcode.barcode + "\n";//Environment.NewLine;
                                            text_msg_ms = text_msg_ms + "Montant: " + barcode.amount + "\n";//Environment.NewLine;
                                            text_msg_ms = text_msg_ms + "Gain Maximum: " + barcode.max_payout;//Environment.NewLine;
                                            lines = Add2Log(lines, " total_bonus =  " + barcode.total_bonus, 100, lines[0].ControlerName);
                                            if (!String.IsNullOrEmpty(barcode.total_bonus))
                                            {
                                                text_msg_ms = text_msg_ms + "\nBonus: " + barcode.total_bonus;//Environment.NewLine;
                                            }
                                            //send sms
                                            LoginRequest LoginRequestBody = new LoginRequest()
                                            {
                                                ServiceID = service.service_id,
                                                Password = service.service_password
                                            };
                                            LoginResponse res = Login.DoLogin(LoginRequestBody);
                                            if (res != null)
                                            {
                                                if (res.ResultCode == 1000)
                                                {
                                                    string token_id = res.TokenID;
                                                    SendSMSRequest RequestSendSMSBody1 = new SendSMSRequest()
                                                    {
                                                        ServiceID = service.service_id,
                                                        MSISDN = Convert.ToInt64(MSISDN),
                                                        Text = text_msg_ms,
                                                        TokenID = token_id,
                                                        TransactionID = "12345"
                                                    };
                                                    SendSMSResponse response_sendsms1 = SendSMS.DoSMS(RequestSendSMSBody1);
                                                    if (response_sendsms1 != null)
                                                    {
                                                        if (response_sendsms1.ResultCode == 1010 || response_sendsms1.ResultCode == 1000)
                                                        {
                                                            lines = Add2Log(lines, " Send SMS Was OK", 100, lines[0].ControlerName);
                                                        }
                                                        else
                                                        {
                                                            lines = Add2Log(lines, " Send SMS Failed", 100, lines[0].ControlerName);
                                                        }
                                                    }
                                                    else
                                                    {
                                                        lines = Add2Log(lines, " Send SMS Failed", 100, lines[0].ControlerName);
                                                    }
                                                }
                                            }



                                        }
                                        
                                        menu_2_display = Api.CommonFuncations.iDoBetMTNGuinea.GetUSSDBonusCloseBet(barcode, ref lines);
                                    }
                                }

                                break;
                        }
                        lines = Add2Log(lines, " page_number = " + page_number, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " game_id = " + game_id, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " odd_page = " + odd_page, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " selected_odd = " + selected_odd, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " amount = " + amount, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " selected_league_id = " + selected_league_id, 100, "ivr_subscribe");
                        result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, menu_2_display, msgType, opType);
                        DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id, selected_odd, selected_bet_type_id,selected_odd_name, selected_odd_line, amount, selected_league_id, amount_2_pay, bar_code, selected_subagent_name, rapidos_string) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + "," + status + ", '" + ussdString + "', " + ussd_menu.action_id + ", " + page_number + "," + odd_page + "," + game_id + "," + topic_id + ",'" + user_session_id + "'," + selected_odd + "," + selected_bet_type_id + ",'" + selected_odd_name + "','" + selected_odd_line + "', " + amount + "," + selected_league_id + "," + amount_2_pay + ",'" + bar_code + "','" + selected_subagent_name + "', '"+rapidos_string+"');", "DBConnectionString_104", ref lines);
                        break;
                }
            }

            return result;
        }

        public static string MTNGuinea142USSDBehaviuer(ServiceClass service, string ussdString, string ServiceID, string MSISDN, string linkid, string receiveCB, string senderCB, string serviceCode, USSDMenu ussd_menu, USSDSession ussd_session, out DYAReceiveMoneyRequest momo_request, ref List<LogLines> lines, out string menu_2_display, out bool is_close, string force_session_id)
        {
            momo_request = null;
            menu_2_display = "";
            is_close = false;
            string result = "";
            force_session_id = (String.IsNullOrEmpty(force_session_id) ? Guid.NewGuid().ToString() : force_session_id);
            string user_session_id = (ussd_session == null ? force_session_id : ussd_session.user_seesion_id);
            int topic_id = (ussd_session != null ? ussd_session.topic_id : ussd_menu.topic_id);
            if (!String.IsNullOrEmpty(ussd_menu.menu_2_display))
            {
                menu_2_display = ussd_menu.menu_2_display;
                result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, ussd_menu.menu_2_display, "1", "1");
                DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + ",0, '" + ussdString + "', " + ussd_menu.action_id + ", " + (ussd_session == null ? 0 : ussd_session.page_number) + "," + (ussd_session == null ? 0 : ussd_session.odd_page) + "," + (ussd_session == null ? 0 : ussd_session.game_id) + "," + topic_id + ",'" + user_session_id + "');", "DBConnectionString_104", ref lines);
            }
            if (ussd_menu.action_id == 3) //close
            {
                menu_2_display = ussd_menu.menu_2_display;
                is_close = true;
                result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, menu_2_display, "2", "2");
                DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + ",1, '" + ussdString + "', " + ussd_menu.action_id + ", " + (ussd_session == null ? 0 : ussd_session.page_number) + "," + (ussd_session == null ? 0 : ussd_session.odd_page) + "," + (ussd_session == null ? 0 : ussd_session.game_id) + "," + topic_id + ",'" + user_session_id + "');", "DBConnectionString_104", ref lines);
            }

            if (String.IsNullOrEmpty(result))
            {
                switch (topic_id)
                {
                    case 5:
                    case 2:
                    case 7:
                        int page_number = (ussd_session != null ? ussd_session.page_number : 1);
                        int odd_page = (ussd_session != null ? ussd_session.odd_page : 0);
                        Int64 game_id = (ussd_session != null ? ussd_session.game_id : 0);
                        string rapidos_string = (ussd_session != null ? ussd_session.rapidos_string : "0");
                        double selected_odd = (ussd_session != null ? ussd_session.selected_odd : 0);
                        int selected_bet_type_id = (ussd_session != null ? ussd_session.selected_bet_type_id : 0);
                        string selected_odd_name = (ussd_session != null ? ussd_session.selected_odd_name : "0");
                        string selected_odd_line = (ussd_session != null ? ussd_session.selected_odd_line : "null");
                        string amount = (ussd_session != null ? ussd_session.amount : "0");
                        int selected_league_id = (ussd_session != null ? ussd_session.selected_league_id : 0);
                        string msgType = "1", opType = "1";
                        int status = 0;
                        string amount_2_pay = (ussd_session != null ? ussd_session.amount_2_pay.ToString() : "0");
                        string bar_code = (ussd_session != null ? ussd_session.bar_code : "0");
                        string selected_subagent_name = (ussd_session != null ? ussd_session.selected_subagent_name : "0");
                        IdoBetUser user = new IdoBetUser();
                        switch (ussd_menu.action_id)
                        {
                            case 86:
                            case 87:
                                if (ussdString == "1")
                                {
                                    switch (ussd_menu.action_id)
                                    {
                                        case 86:
                                            game_id = 41;
                                            break;
                                        case 87:
                                            game_id = 42;
                                            break;
                                    }
                                    DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games_mgn (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + rapidos_string + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',2000, " + service.service_id + ")", "DBConnectionString_104", ref lines);
                                    msgType = "2";
                                    opType = "2";
                                    is_close = true;
                                    status = 1;

                                    menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetCloseBet(ussd_session, amount, ref lines);
                                    LoginRequest LoginRequestBody = new LoginRequest()
                                    {
                                        ServiceID = service.service_id,
                                        Password = service.service_password
                                    };
                                    LoginResponse res = Login.DoLogin(LoginRequestBody);
                                    if (res != null)
                                    {
                                        if (res.ResultCode == 1000)
                                        {
                                            string token_id = res.TokenID;
                                            momo_request = new DYAReceiveMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = 2000,
                                                ServiceID = service.service_id,
                                                TokenID = token_id,
                                                TransactionID = "Rapidos_" + user_session_id
                                            };
                                        }
                                    }

                                }
                                break;
                            case 75:
                            case 76:
                            case 77:
                                bool placebet1 = false;
                                double num3;
                                int max_bet = 0;
                                bool check_amount = double.TryParse(ussdString, out num3);
                                if (check_amount == true)
                                {
                                    switch (ussd_menu.action_id)
                                    {
                                        case 75:
                                            game_id = 35;
                                            max_bet = 340000;
                                            break;
                                        case 76:
                                            game_id = 36;
                                            max_bet = 65000;
                                            break;
                                        case 77:
                                            game_id = 37;
                                            max_bet = 4000;
                                            break;
                                    }
                                    if (num3 >= 1200 && num3 <= max_bet)
                                    {
                                        DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games_mgn (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + rapidos_string + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "'," + num3 + ", " + service.service_id + ")", "DBConnectionString_104", ref lines);
                                        placebet1 = true;
                                    }
                                    else
                                    {

                                        menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetWrongPriceBetRapidos(max_bet, ref lines);
                                        DataLayer.DBQueries.ExecuteQuery("delete from ussd_saved_games_mgn where user_session_id = '" + user_session_id + "' order by id desc limit 1", "DBConnectionString_104", ref lines);
                                    }
                                }
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                //RequestForOrder
                                //bool req_for_order = GetRequestForOrder(ussd_session, ref lines);
                                if (placebet1)
                                {

                                    menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetCloseBet(ussd_session, amount, ref lines);
                                    LoginRequest LoginRequestBody = new LoginRequest()
                                    {
                                        ServiceID = service.service_id,
                                        Password = service.service_password
                                    };
                                    LoginResponse res = Login.DoLogin(LoginRequestBody);
                                    if (res != null)
                                    {
                                        if (res.ResultCode == 1000)
                                        {
                                            string token_id = res.TokenID;
                                            momo_request = new DYAReceiveMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(ussdString),
                                                ServiceID = service.service_id,
                                                TokenID = token_id,
                                                TransactionID = "Rapidos_" + user_session_id
                                            };
                                        }
                                    }
                                }

                                break;

                            case 72: //Confirm Rapidos
                            case 73:
                            case 74:
                                String[] strlist = new string[] { };
                                bool validate_num = Api.CommonFuncations.B2TechGNMTN.ValidateRapidosInput(ussdString, ussd_menu.action_id, out strlist, ref lines);
                                if (validate_num)
                                {
                                    menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetConfirmRapidosMenu(ussd_menu.action_id, ussdString, out game_id, ref lines);
                                    rapidos_string = ussdString;
                                }
                                else
                                {
                                    menu_2_display = Api.CommonFuncations.B2TechGNMTN.WrongRapidosNumber();
                                }
                                break;
                            case 109:
                            case 110:
                            case 111:
                            case 112:
                            case 113:
                            case 114:
                            case 115:
                            case 116:
                            case 117:
                            case 118:
                            case 119://enter dusun lottery numbers
                                bool validate_num_dusan = Api.CommonFuncations.B2TechGNMTN.ValidateDusanLottoInput(ussdString, ussd_menu.action_id, out strlist, ref lines);
                                if (validate_num_dusan)
                                {
                                    menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetConfirmDusanLottoMenu(ussd_menu.action_id, ussdString, out game_id, ref lines);
                                    rapidos_string = ussdString;
                                }
                                else
                                {
                                    menu_2_display = Api.CommonFuncations.B2TechGNMTN.WrongRapidosNumber();
                                }
                                break;
                            case 120:
                            case 121:
                            case 122:
                            case 123:
                            case 124:
                            case 125:
                            case 126:
                            case 127:
                            case 128:
                            case 129:
                            case 130://enter dusan lottery amount
                                switch (ussd_menu.action_id)
                                {
                                    case 120:
                                        game_id = 4;
                                        break;
                                    case 121:
                                        game_id = 3;
                                        break;
                                    case 122:
                                        game_id = 2;
                                        break;
                                    case 123:
                                        game_id = 1;
                                        break;
                                    case 124:
                                        game_id = 11;
                                        break;
                                    case 125:
                                        game_id = 10;
                                        break;
                                    case 126:
                                        game_id = 9;
                                        break;
                                    case 127:
                                        game_id = 5;
                                        break;
                                    case 128:
                                        game_id = 6;
                                        break;
                                    case 129:
                                        game_id = 7;
                                        break;
                                    case 130:
                                        game_id = 8;
                                        break;
                                }
                                ServiceClass lotto_service = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games_mgn (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + rapidos_string + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "'," + ussdString + ", " + ussd_menu.service_id + ")", "DBConnectionString_104", ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;

                                menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetCloseDusanLotto(ref lines);

                                LoginRequest LoginRequestBody_lotto = new LoginRequest()
                                {
                                    ServiceID = lotto_service.service_id,
                                    Password = lotto_service.service_password
                                };
                                LoginResponse res_lotto = Login.DoLogin(LoginRequestBody_lotto);
                                if (res_lotto != null)
                                {
                                    if (res_lotto.ResultCode == 1000)
                                    {
                                        string token_id = res_lotto.TokenID;
                                        momo_request = new DYAReceiveMoneyRequest()
                                        {
                                            MSISDN = Convert.ToInt64(MSISDN),
                                            Amount = Convert.ToInt32(ussdString),
                                            ServiceID = lotto_service.service_id,
                                            TokenID = token_id,
                                            TransactionID = "DusanLotto_" + user_session_id
                                        };
                                    }
                                }
                                break;
                            case 84: //Confirm Lotto
                            case 85:
                                String[] strlist1 = new string[] { };
                                bool validate_num1 = Api.CommonFuncations.B2TechGNMTN.ValidateLottoInput(ussdString, ussd_menu.action_id, out strlist1, ref lines);
                                if (validate_num1)
                                {
                                    menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetConfirmLottoMenu(ussd_menu.action_id, ussdString, out game_id, ref lines);
                                    rapidos_string = ussdString;
                                }
                                else
                                {
                                    menu_2_display = Api.CommonFuncations.B2TechGNMTN.WrongRapidosNumber();
                                }
                                break;
                            case 55://EnterAmountForSubAgent
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                Int64 pos_trans_id = 0;
                                menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetAmountForSubAgentMenu(MSISDN, ussdString, selected_subagent_name, out pos_trans_id, ref lines);
                                if (pos_trans_id > 0)
                                {
                                    ServiceClass subscriber_service1 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                    LoginRequest LoginRequestBody = new LoginRequest()
                                    {
                                        ServiceID = subscriber_service1.service_id,
                                        Password = subscriber_service1.service_password
                                    };
                                    LoginResponse res = Login.DoLogin(LoginRequestBody);
                                    if (res != null)
                                    {
                                        if (res.ResultCode == 1000)
                                        {
                                            string token_id = res.TokenID;
                                            momo_request = new DYAReceiveMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(ussdString),
                                                ServiceID = ussd_menu.service_id,
                                                TokenID = token_id,
                                                TransactionID = "POSTrans_" + pos_trans_id

                                            };
                                        }
                                    }
                                }



                                break;
                            case 54:
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetSlectedSubAgentMenu(MSISDN, page_number, ussdString, out selected_subagent_name, ref lines);
                                break;
                            case 80: //Foot Solider Check MSISDN and ask to enter full name 
                                is_close = true;
                                menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetFootSoldiersMSISDNMenu(MSISDN, ussdString, out is_close, service, ref lines);
                                if (is_close)
                                {
                                    msgType = "2";
                                    opType = "2";
                                }
                                else
                                {
                                    Api.DataLayer.DBQueries.ExecuteQuery("insert into ussd_footsoldiers_attempts (user_session_id, footsoldier_msisdn, user_msisdn, full_name, user_id, date_time) values('" + user_session_id + "', " + MSISDN + ", 224" + ussdString + ", '', 0, now())", ref lines);
                                }
                                break;
                            case 79: //Foot Soldier create user
                                is_close = true;
                                Int64 user_msisdn = Api.DataLayer.DBQueries.SelectQueryReturnInt64("SELECT u.user_msisdn from ussd_footsoldiers_attempts u WHERE u.user_session_id = '" + user_session_id + "' order by u.id desc limit 1", ref lines);
                                if (user_msisdn > 0)
                                {
                                    Api.CommonFuncations.B2TechGNMTN.CreateUserResponse create_user = new Api.CommonFuncations.B2TechGNMTN.CreateUserResponse();
                                    menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetFootSoldiersFullNameMenu(MSISDN, ussdString, out is_close, ussd_menu, user_msisdn.ToString(), out create_user, ref lines);
                                    if (is_close)
                                    {
                                        LoginRequest LoginRequestBody = new LoginRequest()
                                        {
                                            ServiceID = service.service_id,
                                            Password = service.service_password
                                        };
                                        LoginResponse res = Login.DoLogin(LoginRequestBody);
                                        if (res != null)
                                        {
                                            if (res.ResultCode == 1000)
                                            {

                                                Int64 rec_id = Api.DataLayer.DBQueries.SelectQueryReturnInt64("SELECT u.id from ussd_footsoldiers_attempts u WHERE u.user_session_id = '" + user_session_id + "' order by u.id desc limit 1", ref lines);
                                                Api.DataLayer.DBQueries.ExecuteQuery("update ussd_footsoldiers_attempts set user_id = " + create_user.userId + ", full_name = '" + ussdString + "' where id = " + rec_id, ref lines);
                                                string token_id = res.TokenID;
                                                string sms_text = "Felicitations, vous vous etes inscrit avec succes sur YellowBet. https://m.yellowbet.com.gn/#/login Mot de passe: " + create_user.password;
                                                Api.DataLayer.DBQueries.ExecuteQuery("insert into foot_soldiers_sms (date_time, msisdn, service_id, sms_text) values(now(), " + user_msisdn + "," + service.service_id + ",'" + sms_text + "');", ref lines);
                                                SendSMSRequest RequestSendSMSBody1 = new SendSMSRequest()
                                                {
                                                    ServiceID = service.service_id,
                                                    MSISDN = user_msisdn,
                                                    Text = sms_text,
                                                    TokenID = token_id,
                                                    TransactionID = "12345"
                                                };
                                                SendSMSResponse response_sendsms1 = SendSMS.DoSMS(RequestSendSMSBody1);
                                                if (response_sendsms1 != null)
                                                {
                                                    if (response_sendsms1.ResultCode == 1010 || response_sendsms1.ResultCode == 1000)
                                                    {
                                                        lines = Add2Log(lines, " Send SMS Was OK", 100, lines[0].ControlerName);
                                                    }
                                                    else
                                                    {
                                                        lines = Add2Log(lines, " Send SMS Failed", 100, lines[0].ControlerName);
                                                    }
                                                }
                                                else
                                                {
                                                    lines = Add2Log(lines, " Send SMS Failed", 100, lines[0].ControlerName);
                                                }
                                            }
                                        }
                                    }
                                }
                                else
                                {
                                    is_close = false;
                                    menu_2_display = "Error 78_2" + Environment.NewLine;
                                    menu_2_display = menu_2_display + Environment.NewLine + "M) ";// Menu Principal ";

                                }
                                break;
                            case 78: //Foot Soldier Main Menu asking to enter MSISDN
                                menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetFootSoldierMainMenu(MSISDN, ref lines);
                                break;
                            case 53:
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetAgentMainMenu(MSISDN, page_number, ref lines);
                                break;
                            case 34: //DepositMoney
                                user = Api.CommonFuncations.B2TechGNMTN.SearchUserNew(MSISDN, ref lines);
                                menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetDepositMoneyMenu(user, ussd_menu, MSISDN, ref lines);
                                break;
                            case 36: //StartDepositMoney
                                user = Api.CommonFuncations.B2TechGNMTN.SearchUserNew(MSISDN, ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetStartDepositMoneyMenu(service, user, ussd_menu, MSISDN, ussdString, out momo_request, ref lines);
                                break;
                            case 33: //WithdrawMoney
                                user = Api.CommonFuncations.B2TechGNMTN.SearchUserNew(MSISDN, ref lines);
                                menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetWithdrawMoneyMenu(user, ref lines);
                                break;
                            case 35: //StartWithdrawMoney
                                user = Api.CommonFuncations.B2TechGNMTN.SearchUserNew(MSISDN, ref lines);
                                menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetStartWithdrawMoneyMenu(user, false, false, false, ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                if (user.isValid == true)
                                {
                                    int number;
                                    bool su = int.TryParse(ussdString, out number);
                                    if (su)
                                    {
                                        if (Convert.ToInt32(ussdString) <= user.AvailableForWithdraw && Convert.ToInt32(ussdString) > 0)
                                        {
                                            menu_2_display = Api.CommonFuncations.B2TechGNMTN.CheckBeforeWithdrawMenu(service, MSISDN, ref lines);
                                            if (String.IsNullOrEmpty(menu_2_display))
                                            {
                                                //Refund user
                                                ServiceClass subscriber_service1 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                                LoginRequest LoginRequestBody1 = new LoginRequest()
                                                {
                                                    ServiceID = service.service_id,
                                                    Password = service.service_password
                                                };
                                                LoginResponse res1 = Login.DoLogin(LoginRequestBody1);
                                                if (res1 != null)
                                                {
                                                    if (res1.ResultCode == 1000)
                                                    {
                                                        string token_id = res1.TokenID;
                                                        DYATransferMoneyRequest momotransfer_request = new DYATransferMoneyRequest()
                                                        {
                                                            MSISDN = Convert.ToInt64(MSISDN),
                                                            Amount = Convert.ToInt32(ussdString),
                                                            ServiceID = service.service_id,
                                                            TokenID = token_id,
                                                            TransactionID = "USSDWithdraw_" + Guid.NewGuid().ToString()
                                                        };
                                                        string postBody = "", response_body = "";
                                                        //bool wd_result = StartWithdraw(user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                        bool do_withdraw = false;
                                                        string code = "";
                                                        if (user.AvailableForWithdraw > 0)
                                                        {
                                                            do_withdraw = true;
                                                            code = Api.CommonFuncations.B2TechGNMTN.StartWithdrawNew(user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                        }



                                                        menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetStartWithdrawMoneyMenu(user, true, true, false, ref lines);

                                                        if (code == "")
                                                        {
                                                            if (do_withdraw)
                                                            {
                                                                menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetStartWithdrawMoneyMenu(user, false, false, false, ref lines);
                                                                string mail_body = "<p><h2>Start Withdraw MTN Guinea has failed</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>Json: </b>" + postBody + "<br><b>Response: </b>" + response_body + "<br></p>";
                                                                string mail_subject = "Start Withdraw MTN Guinea has failed for user - " + user.id;
                                                                string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                                string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                                string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                                string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                                int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                                string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                                CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                                            }

                                                        }
                                                        else
                                                        {
                                                            DYATransferMoneyResponse momotransfer_response = CommonFuncations.DYATransferMoney.DoTransfer(momotransfer_request);
                                                            if (momotransfer_response.ResultCode == 1000)
                                                            {
                                                                postBody = "";
                                                                response_body = "";
                                                                bool end_withdraw = Api.CommonFuncations.B2TechGNMTN.EndWithdrawNew(momotransfer_response.Timestamp, momotransfer_response.TransactionID, true, code, user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                                if (!end_withdraw)
                                                                {
                                                                    menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetStartWithdrawMoneyMenu(user, false, false, false, ref lines);
                                                                    string mail_body = "", mail_subject = "";
                                                                    mail_body = "<p><h2>End Withdraw MTN Guinea has failed but DYATransfer was ok</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>Request: </b>" + postBody + "<br>Response: " + response_body + "<br></p>";
                                                                    mail_subject = "End Withdraw MTN Guinea has failed but DYATransfer was ok - " + user.id;
                                                                    string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                                    string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                                    string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                                    string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                                    int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                                    string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                                    CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                                                }
                                                                GoogleAnalytics.SendData2GoogleAnalytics("UA-154843894-1", "ussd", Base64.Reverse(MSISDN), System.Web.HttpContext.Current.Request.ServerVariables["REMOTE_ADDR"], "BJ", "event", "Withdraw", "MOMO", "-" + ussdString, "/", ref lines);
                                                            }
                                                            else
                                                            {
                                                                menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetStartWithdrawMoneyMenu(user, false, false, false, ref lines);
                                                                postBody = "";
                                                                response_body = "";
                                                                bool end_withdraw = B2TechGNMTN.EndWithdrawNew(momotransfer_response.Timestamp, momotransfer_response.TransactionID, false, code, user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                                string mail_body = "", mail_subject = "";
                                                                mail_body = "<p><h2>Withdraw MTN Guinea has failed DYATransfer</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>MOMO Response: </b>" + momotransfer_response.ResultCode + " " + momotransfer_response.Description + "<br>User was refunded: " + end_withdraw + "<br><b>Request: </b>" + postBody + "<br><b>Response: </b>" + response_body + "</p>";
                                                                mail_subject = "Withdraw MTN Guinea has failed DYATransfer for user - " + user.id;
                                                                string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                                string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                                string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                                string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                                int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                                string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                                CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                                            }
                                                        }



                                                    }
                                                }
                                            }


                                        }
                                        else
                                        {
                                            //user has requested more than allowed
                                            menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetStartWithdrawMoneyMenu(user, false, false, true, ref lines);
                                        }
                                    }
                                    else
                                    {
                                        menu_2_display = "Option invalide ";
                                    }
                                    
                                }
                                break;
                            case 25://CloseXXXBet
                            case 26:
                            case 27:
                                List<Int64> saved_ids = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, "_mgn", ref lines);
                                bool placebet = false;
                                double num2;
                                bool res_parse1 = double.TryParse(amount, out num2);
                                if (res_parse1 == true)
                                {
                                    if (num2 >= 2000 && num2 <= 6000000)
                                    {
                                        placebet = true;
                                        if (saved_ids != null)
                                        {
                                            foreach (Int64 s in saved_ids)
                                            {
                                                DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games_mgn set amount = " + amount + " where id = " + s, "DBConnectionString_104", ref lines);
                                            }
                                        }
                                    }
                                    else
                                    {

                                        menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetWrongPriceBetMeny(ref lines);
                                        DataLayer.DBQueries.ExecuteQuery("delete from ussd_saved_games_mgn where user_session_id = '" + user_session_id + "' order by id desc limit 1", "DBConnectionString_104", ref lines);
                                    }
                                }


                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                //RequestForOrder
                                //bool req_for_order = GetRequestForOrder(ussd_session, ref lines);
                                if (placebet)
                                {
                                    bool req_for_order = Api.CommonFuncations.B2TechGNMTN.PlaceBet(ussd_session, ref lines);

                                    if (req_for_order == true)
                                    {
                                        menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetCloseBet(ussd_session, amount, ref lines);
                                        ServiceClass subscriber_service2 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                        LoginRequest LoginRequestBody = new LoginRequest()
                                        {
                                            ServiceID = subscriber_service2.service_id,
                                            Password = subscriber_service2.service_password
                                        };
                                        LoginResponse res = Login.DoLogin(LoginRequestBody);
                                        if (res != null)
                                        {
                                            if (res.ResultCode == 1000)
                                            {
                                                string token_id = res.TokenID;
                                                momo_request = new DYAReceiveMoneyRequest()
                                                {
                                                    MSISDN = Convert.ToInt64(MSISDN),
                                                    Amount = Convert.ToInt32(amount),
                                                    ServiceID = ussd_menu.service_id,
                                                    TokenID = token_id,
                                                    TransactionID = user_session_id

                                                };
                                            }
                                        }
                                    }
                                    else
                                    {
                                        menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetCloseBetFailed(ref lines);
                                    }
                                }

                                break;
                            case 22: //ConfirmBetXXX
                            case 23:
                            case 24:
                                amount = ussdString;
                                double num1;
                                bool res_parse = double.TryParse(amount, out num1);
                                if (res_parse == true)
                                {
                                    if (num1 >= 2000 && num1 <= 6000000)
                                    {
                                        menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetConfirmBet(ussd_session, amount, ref lines);
                                    }
                                    else
                                    {

                                        menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetWrongPriceBetMeny(ref lines);
                                        DataLayer.DBQueries.ExecuteQuery("delete from ussd_saved_games_mgn where user_session_id = '" + user_session_id + "' order by id desc limit 1", "DBConnectionString_104", ref lines);
                                    }
                                }
                                odd_page = 0;

                                break;
                            case 19: //PayAndConfirmXXX
                            case 20:
                            case 21:
                                //need to check if user clicks back and then returns to this section.
                                //DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + ussdString + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',0, " + service.service_id + ")", ref lines);
                                menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetPayAndConfirm(ussd_session, ref lines);
                                odd_page = 0;
                                break;
                            case 32: //ticket status
                                page_number = (page_number == 0 ? 1 : page_number);
                                menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetCheckTicketMenu(MSISDN, page_number, ussdString, ref lines);
                                break;
                            case 31: //tickets status by phone
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetCheckTicketsMenu(MSISDN, page_number, ref lines);
                                break;
                            case 52:
                                menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetPayoutBarcodeTicket(ussd_menu, MSISDN, ref lines);
                                if (String.IsNullOrEmpty(menu_2_display))
                                {
                                    msgType = "2";
                                    opType = "2";
                                    is_close = true;
                                    //Refund user
                                    ServiceClass subscriber_service2 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                    LoginRequest LoginRequestBody2 = new LoginRequest()
                                    {
                                        ServiceID = service.service_id,
                                        Password = service.service_password
                                    };
                                    LoginResponse res2 = Login.DoLogin(LoginRequestBody2);
                                    if (res2 != null)
                                    {
                                        if (res2.ResultCode == 1000)
                                        {
                                            string token_id = res2.TokenID;
                                            DYATransferMoneyRequest momotransfer_request = new DYATransferMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(amount_2_pay),
                                                ServiceID = service.service_id,
                                                TokenID = token_id,
                                                TransactionID = "POSTicketPayout_" + bar_code
                                            };
                                            DYATransferMoneyResponse momotransfer_response = CommonFuncations.DYATransferMoney.DoTransfer(momotransfer_request);

                                            if (momotransfer_response.ResultCode == 1000)
                                            {
                                                int cashier_id = Api.CommonFuncations.B2TechGNMTN.GetCashierID(MSISDN, ref lines);
                                                if (cashier_id > 0)
                                                {
                                                    DataLayer.DBQueries.ExecuteQuery("insert into casheir_transactions (cashier_id, bar_code, total_payout, date_time, dya_id) values(" + cashier_id + ", '" + bar_code + "', " + amount_2_pay + ", now()," + momotransfer_response.TransactionID + ");", ref lines);
                                                }
                                                GoogleAnalytics.SendData2GoogleAnalytics("UA-154843894-1", "ussd", Base64.Reverse(MSISDN), System.Web.HttpContext.Current.Request.ServerVariables["REMOTE_ADDR"], "BJ", "event", "PyoutPOSTicket", "MOMO", "-" + ussdString, "/", ref lines);
                                                //dopayout
                                                bool dopayout_res = Api.CommonFuncations.B2TechGNMTN.DoPayOutNew(momotransfer_response.Timestamp, momotransfer_response.TransactionID, bar_code, ref lines);
                                                //bool dopayout_res = iDoBet.DoPayout(bar_code, ref lines);
                                                menu_2_display = "Felicitations, le billet a ete rembourse sur votre compte MOMO.";

                                            }
                                            else
                                            {
                                                menu_2_display = "Le billet n'a pas ete rembourse sur votre compte MOMO." + Environment.NewLine;
                                                menu_2_display = menu_2_display + "Veuillez reessayer";
                                                string mail_body = "<p><h2>Payout MTN Guinea has failed DYATransfer</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>MOMO Response: </b>" + momotransfer_response.ResultCode + " " + momotransfer_response.Description + "<br></p>";
                                                string mail_subject = "Payout MTN Guinea has failed DYATransfer for user - " + user.id;
                                                string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                            }
                                        }
                                    }
                                }

                                break;
                            case 44: //search ticket
                                menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetCheckTicketByBarcodeMenu(MSISDN, ussdString, out amount_2_pay, ref lines);
                                bar_code = ussdString;
                                break;
                            case 39: //add another game
                                if (game_id > 0)
                                {
                                    //DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + ussdString + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',0, " + service.service_id + ")", ref lines);
                                    game_id = 0;
                                    selected_odd = 0;
                                    page_number = 1;
                                    odd_page = 0;
                                }
                                menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetSportsTypeMenu(ref lines);
                                break;
                            case 41: //Delete and Start Over
                                List<Int64> saved_ids1 = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, "_mgn", ref lines);
                                if (saved_ids1 != null)
                                {
                                    foreach (Int64 s in saved_ids1)
                                    {
                                        DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games_mgn set status = 3 where id = " + s, "DBConnectionString_104", ref lines);
                                    }
                                }

                                //DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set status = 3 where user_seesion_id = '" + user_session_id + "'", ref lines);
                                game_id = 0;
                                odd_page = 0;
                                selected_odd = 0;
                                page_number = 1;
                                menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetSportsTypeMenu(ref lines);
                                ussd_menu.action_id = 2;
                                break;
                            case 48:
                                menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetSoccerLeagueMenu(35, "0", ussd_menu.ussd_id, ref lines, out selected_league_id);
                                break;
                            case 47:
                                menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetSoccerLeagueMenu(32, "0", ussd_menu.ussd_id, ref lines, out selected_league_id);
                                break;
                            case 37: //display soccer leagu
                                menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetSoccerLeagueMenu(31, "0", ussd_menu.ussd_id, ref lines, out selected_league_id);
                                break;
                            case 49:
                            case 50:
                            case 38://selected league
                            case 28://Start Over
                            case 29:
                            case 30:
                            case 16://AddXXXGame or 
                            case 17:
                            case 18:
                            case 7: //DisplayXXXTopEvents   
                            case 8:
                            case 9:
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && page_number > 0)
                                {
                                    page_number = page_number - 1;
                                }
                                if (ussd_menu.action_id == 28 || ussd_menu.action_id == 29 || ussd_menu.action_id == 30)
                                {
                                    List<Int64> saved_ids2 = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, "_mgn", ref lines);
                                    if (saved_ids2 != null)
                                    {
                                        foreach (Int64 s in saved_ids2)
                                        {
                                            DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games_mgn set status = 3 where id = " + s, "DBConnectionString_104", ref lines);
                                        }
                                    }
                                    //DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set status = 3 where user_seesion_id = '"+user_session_id+"'", ref lines);
                                    game_id = 0;
                                    selected_odd = 0;
                                    odd_page = 0;
                                    page_number = 1;

                                }
                                if (ussd_menu.action_id == 16 || ussd_menu.action_id == 17 || ussd_menu.action_id == 18)
                                {
                                    if (game_id > 0)
                                    {
                                        //DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + ussdString + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',0, " + service.service_id + ")", ref lines);
                                        game_id = 0;
                                        selected_odd = 0;
                                        page_number = 1;
                                        odd_page = 0;
                                    }

                                }
                                switch (ussd_menu.action_id)
                                {
                                    case 38:
                                        menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetEventsMenu(ussdString, 31, page_number, ref lines, out selected_league_id, selected_league_id, ussd_menu);
                                        break;
                                    case 49:
                                        menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetEventsMenu(ussdString, 32, page_number, ref lines, out selected_league_id, selected_league_id, ussd_menu);
                                        break;
                                    case 50:
                                        menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetEventsMenu(ussdString, 35, page_number, ref lines, out selected_league_id, selected_league_id, ussd_menu);
                                        break;
                                    case 28:
                                    case 16:
                                    case 7:
                                        menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetEventsMenu(31, page_number, ref lines);
                                        break;
                                    case 29:
                                    case 17:
                                    case 8:
                                        menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetEventsMenu(32, page_number, ref lines);
                                        break;
                                    case 30:
                                    case 18:
                                    case 9:
                                        menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetEventsMenu(35, page_number, ref lines);
                                        break;
                                }


                                break;
                            case 10: //DisplayXXXGame
                            case 11:
                            case 12:
                                page_number = (page_number == 0 ? 1 : page_number);
                                selected_odd = 0;
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    odd_page = odd_page + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && odd_page > 0)
                                {
                                    odd_page = odd_page - 1;
                                }
                                try
                                {
                                    switch (ussd_menu.action_id)
                                    {
                                        case 10:
                                            menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetGameOddsMenu(31, page_number, ussdString, game_id, odd_page, out game_id, selected_league_id, ref lines);
                                            break;
                                        case 11:
                                            menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetGameOddsMenu(32, page_number, ussdString, game_id, odd_page, out game_id, selected_league_id, ref lines);
                                            break;
                                        case 12:
                                            menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetGameOddsMenu(35, page_number, ussdString, game_id, odd_page, out game_id, selected_league_id, ref lines);
                                            break;
                                    }
                                }
                                catch(Exception ex)
                                {
                                    menu_2_display = "*) Retour";
                                    menu_2_display = menu_2_display + Environment.NewLine + "M) ";
                                    
                                }
                                
                                break;
                            case 13: //ConfirmXXXGame (select odd)
                            case 14:
                            case 15:

                                switch (ussd_menu.action_id)
                                {
                                    case 13:
                                        menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetConfirmMenu(31, game_id, ussdString, odd_page, out selected_odd, out selected_bet_type_id, out selected_odd_name, out selected_odd_line, ref lines, ussd_session, MSISDN, service);
                                        break;
                                    case 14:
                                        menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetConfirmMenu(32, game_id, ussdString, odd_page, out selected_odd, out selected_bet_type_id, out selected_odd_name, out selected_odd_line, ref lines, ussd_session, MSISDN, service);
                                        break;
                                    case 15:
                                        menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetConfirmMenu(35, game_id, ussdString, odd_page, out selected_odd, out selected_bet_type_id, out selected_odd_name, out selected_odd_line, ref lines, ussd_session, MSISDN, service);
                                        break;
                                }
                                break;
                            case 92: //FreeBet
                                bool placebet2 = false;
                                USSDBonus ub = null;
                                menu_2_display = Api.CommonFuncations.B2TechGNMTN.CheckFreeBet(ussd_session, MSISDN, out placebet2, out ub, ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                if (String.IsNullOrEmpty(menu_2_display) && placebet2)
                                {
                                    List<Int64> saved_ids3 = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, "_mgn", ref lines);
                                    if (saved_ids3 != null)
                                    {
                                        foreach (Int64 s in saved_ids3)
                                        {
                                            DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games_mgn set amount = " + ub.amount + " where id = " + s, "DBConnectionString_104", ref lines);
                                        }
                                    }

                                    bool req_for_order = Api.CommonFuncations.B2TechGNMTN.PlaceBet(ussd_session, ref lines);
                                    if (req_for_order == true)
                                    {
                                        //final placebet
                                        Int64 dya_id = Api.DataLayer.DBQueries.ExecuteQueryReturnInt64("insert into dya_transactions (msisdn, service_id, date_time, amount, result, result_desc, dya_method, transaction_id) values(" + MSISDN + "," + service.service_id + ",now()," + ub.amount + ",'02','USSD Bonus',2,'" + ussd_session.user_seesion_id + "')", ref lines);
                                        DYATransactions dya_trans = UpdateGetDYAReciveTrans(dya_id, "02", "USSD Bonus", ref lines);
                                        ExecuteOrderDetails barcode = null;
                                        string postBody = "", response_body = "";
                                        if (dya_trans.partner_transid.Contains("Rapidos_"))
                                        {
                                            barcode = CommonFuncations.B2TechGNMTN.PlaceBetRapidos(dya_trans, out postBody, out response_body, ref lines);
                                        }
                                        else
                                        {
                                            barcode = CommonFuncations.B2TechGNMTN.GetExecuteOrderNew(dya_trans, out postBody, out response_body, ref lines);
                                        }
                                        if (barcode != null)
                                        {
                                            double total_ratio = (Convert.ToDouble(barcode.max_payout) / Convert.ToDouble(barcode.amount));
                                            Api.DataLayer.DBQueries.ExecuteQuery("insert into ussd_bonus_bets (ussd_bonus_user_id, amount, odd, selections, barcode, payout_dya_id, date_time) values(" + ub.bonus_user_id + "," + ub.amount + "," + total_ratio + "," + saved_ids3.Count() + ",'" + barcode.barcode + "',0,now())", ref lines);
                                            string text_msg_ms = "Bonjour, votre bonus pari a ete place avec succes.\n";// + Environment.NewLine;
                                            text_msg_ms = text_msg_ms + "Numero de commande: " + barcode.order_number + "\n";// Environment.NewLine;
                                            text_msg_ms = text_msg_ms + "Code a barre: " + barcode.barcode + "\n";//Environment.NewLine;
                                            text_msg_ms = text_msg_ms + "Montant: " + barcode.amount + "\n";//Environment.NewLine;
                                            text_msg_ms = text_msg_ms + "Gain Maximum: " + barcode.max_payout;//Environment.NewLine;
                                            lines = Add2Log(lines, " total_bonus =  " + barcode.total_bonus, 100, lines[0].ControlerName);
                                            if (!String.IsNullOrEmpty(barcode.total_bonus))
                                            {
                                                text_msg_ms = text_msg_ms + "\nBonus: " + barcode.total_bonus;//Environment.NewLine;
                                            }
                                            //send sms
                                            LoginRequest LoginRequestBody = new LoginRequest()
                                            {
                                                ServiceID = service.service_id,
                                                Password = service.service_password
                                            };
                                            LoginResponse res = Login.DoLogin(LoginRequestBody);
                                            if (res != null)
                                            {
                                                if (res.ResultCode == 1000)
                                                {
                                                    string token_id = res.TokenID;
                                                    SendSMSRequest RequestSendSMSBody1 = new SendSMSRequest()
                                                    {
                                                        ServiceID = service.service_id,
                                                        MSISDN = Convert.ToInt64(MSISDN),
                                                        Text = text_msg_ms,
                                                        TokenID = token_id,
                                                        TransactionID = "12345"
                                                    };
                                                    SendSMSResponse response_sendsms1 = SendSMS.DoSMS(RequestSendSMSBody1);
                                                    if (response_sendsms1 != null)
                                                    {
                                                        if (response_sendsms1.ResultCode == 1010 || response_sendsms1.ResultCode == 1000)
                                                        {
                                                            lines = Add2Log(lines, " Send SMS Was OK", 100, lines[0].ControlerName);
                                                        }
                                                        else
                                                        {
                                                            lines = Add2Log(lines, " Send SMS Failed", 100, lines[0].ControlerName);
                                                        }
                                                    }
                                                    else
                                                    {
                                                        lines = Add2Log(lines, " Send SMS Failed", 100, lines[0].ControlerName);
                                                    }
                                                }
                                            }



                                        }

                                        menu_2_display = Api.CommonFuncations.B2TechGNMTN.GetUSSDBonusCloseBet(barcode, ref lines);
                                    }
                                }

                                break;
                        }
                        lines = Add2Log(lines, " page_number = " + page_number, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " game_id = " + game_id, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " odd_page = " + odd_page, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " selected_odd = " + selected_odd, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " amount = " + amount, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " selected_league_id = " + selected_league_id, 100, "ivr_subscribe");
                        result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, menu_2_display, msgType, opType);
                        DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id, selected_odd, selected_bet_type_id,selected_odd_name, selected_odd_line, amount, selected_league_id, amount_2_pay, bar_code, selected_subagent_name, rapidos_string) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + "," + status + ", '" + ussdString + "', " + ussd_menu.action_id + ", " + page_number + "," + odd_page + "," + game_id + "," + topic_id + ",'" + user_session_id + "'," + selected_odd + "," + selected_bet_type_id + ",'" + selected_odd_name + "','" + selected_odd_line + "', " + amount + "," + selected_league_id + "," + amount_2_pay + ",'" + bar_code + "','" + selected_subagent_name + "', '" + rapidos_string + "');", "DBConnectionString_104", ref lines);
                        break;
                }
            }

            return result;
        }

        public static string OrangeGuineaUSSDBehaviuer(ServiceClass service, string ussdString, string ServiceID, string MSISDN, string linkid, string receiveCB, string senderCB, string serviceCode, USSDMenu ussd_menu, USSDSession ussd_session, out DYAReceiveMoneyRequest momo_request, ref List<LogLines> lines, out string menu_2_display, out bool is_close, string force_session_id)
        {
            momo_request = null;
            menu_2_display = "";
            is_close = false;
            string result = "";
            force_session_id = (String.IsNullOrEmpty(force_session_id) ? Guid.NewGuid().ToString() : force_session_id);
            string user_session_id = (ussd_session == null ? force_session_id : ussd_session.user_seesion_id);
            int topic_id = (ussd_session != null ? ussd_session.topic_id : ussd_menu.topic_id);
            if (!String.IsNullOrEmpty(ussd_menu.menu_2_display))
            {
                menu_2_display = ussd_menu.menu_2_display;
                result = ussd_menu.menu_2_display;// USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, ussd_menu.menu_2_display, "1", "1");
                DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + ",0, '" + ussdString + "', " + ussd_menu.action_id + ", " + (ussd_session == null ? 0 : ussd_session.page_number) + "," + (ussd_session == null ? 0 : ussd_session.odd_page) + "," + (ussd_session == null ? 0 : ussd_session.game_id) + "," + topic_id + ",'" + user_session_id + "');", "DBConnectionString_104", ref lines);
            }
            if (ussd_menu.action_id == 3) //close
            {
                menu_2_display = ussd_menu.menu_2_display;
                is_close = true;
                result = ussd_menu.menu_2_display; // USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, menu_2_display, "2", "2");
                DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + ",1, '" + ussdString + "', " + ussd_menu.action_id + ", " + (ussd_session == null ? 0 : ussd_session.page_number) + "," + (ussd_session == null ? 0 : ussd_session.odd_page) + "," + (ussd_session == null ? 0 : ussd_session.game_id) + "," + topic_id + ",'" + user_session_id + "');", "DBConnectionString_104", ref lines);
            }

            if (String.IsNullOrEmpty(result))
            {
                switch (topic_id)
                {
                    case 5:
                    case 2:
                    case 7:
                    case 10:
                        int page_number = (ussd_session != null ? ussd_session.page_number : 1);
                        int odd_page = (ussd_session != null ? ussd_session.odd_page : 0);
                        Int64 game_id = (ussd_session != null ? ussd_session.game_id : 0);
                        string rapidos_string = (ussd_session != null ? ussd_session.rapidos_string : "0");
                        double selected_odd = (ussd_session != null ? ussd_session.selected_odd : 0);
                        int selected_bet_type_id = (ussd_session != null ? ussd_session.selected_bet_type_id : 0);
                        string selected_odd_name = (ussd_session != null ? ussd_session.selected_odd_name : "0");
                        string selected_odd_line = (ussd_session != null ? ussd_session.selected_odd_line : "null");
                        string amount = (ussd_session != null ? ussd_session.amount : "0");
                        int selected_league_id = (ussd_session != null ? ussd_session.selected_league_id : 0);
                        string msgType = "1", opType = "1";
                        int status = 0;
                        string amount_2_pay = (ussd_session != null ? ussd_session.amount_2_pay.ToString() : "0");
                        string bar_code = (ussd_session != null ? ussd_session.bar_code : "0");
                        string selected_subagent_name = (ussd_session != null ? ussd_session.selected_subagent_name : "0");
                        IdoBetUser user = new IdoBetUser();
                        switch (ussd_menu.action_id)
                        {
                            case 75:
                            case 76:
                            case 77:
                                bool placebet1 = false;
                                double num3;
                                int max_bet = 0;
                                bool check_amount = double.TryParse(ussdString, out num3);
                                if (check_amount == true)
                                {
                                    switch (ussd_menu.action_id)
                                    {
                                        case 75:
                                            game_id = 35;
                                            max_bet = 340000;
                                            break;
                                        case 76:
                                            game_id = 36;
                                            max_bet = 65000;
                                            break;
                                        case 77:
                                            game_id = 37;
                                            max_bet = 4000;
                                            break;
                                    }
                                    if (num3 >= 1200 && num3 <= max_bet) //change to 1200
                                    {
                                        DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games_ogn (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + rapidos_string + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "'," + num3 + ", " + service.service_id + ")", "DBConnectionString_104", ref lines);
                                        placebet1 = true;
                                    }
                                    else
                                    {

                                        menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetWrongPriceBetRapidos(max_bet, ref lines);
                                        DataLayer.DBQueries.ExecuteQuery("delete from ussd_saved_games_ogn where user_session_id = '" + user_session_id + "' order by id desc limit 1", "DBConnectionString_104", ref lines);
                                    }
                                }
                                //msgType = "2";
                                //opType = "2";
                                //is_close = true;
                                status = 1;
                                //RequestForOrder
                                //bool req_for_order = GetRequestForOrder(ussd_session, ref lines);
                                if (placebet1)
                                {

                                    menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetConfirmRapidosBet(game_id, ussdString, ref lines);
                                    //LoginRequest LoginRequestBody = new LoginRequest()
                                    //{
                                    //    ServiceID = service.service_id,
                                    //    Password = service.service_password
                                    //};
                                    //LoginResponse res = Login.DoLogin(LoginRequestBody);
                                    //if (res != null)
                                    //{
                                    //    if (res.ResultCode == 1000)
                                    //    {
                                    //        string token_id = res.TokenID;
                                    //        momo_request = new DYAReceiveMoneyRequest()
                                    //        {
                                    //            MSISDN = Convert.ToInt64(MSISDN),
                                    //            Amount = Convert.ToInt32(ussdString),
                                    //            ServiceID = service.service_id,
                                    //            TokenID = token_id,
                                    //            TransactionID = "Rapidos_" + user_session_id
                                    //        };
                                    //    }
                                    //}
                                }

                                break;

                            case 72: //Confirm Rapidos
                            case 73:
                            case 74:
                                String[] strlist = new string[] { };
                                bool validate_num = Api.CommonFuncations.iDoBetOrangeGuinea.ValidateRapidosInput(ussdString, ussd_menu.action_id, out strlist, ref lines);
                                if (validate_num)
                                {
                                    menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetConfirmRapidosMenu(ussd_menu.action_id, ussdString, out game_id, ref lines);
                                    rapidos_string = ussdString;
                                }
                                else
                                {
                                    menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.WrongRapidosNumber();
                                }
                                break;
                            case 109:
                            case 110:
                            case 111:
                            case 112:
                            case 113:
                            case 114:
                            case 115:
                            case 116:
                            case 117:
                            case 118:
                            case 119://enter dusun lottery numbers
                                bool validate_num_dusan = Api.CommonFuncations.iDoBetOrangeGuinea.ValidateDusanLottoInput(ussdString, ussd_menu.action_id, out strlist, ref lines);
                                if (validate_num_dusan)
                                {
                                    menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetConfirmDusanLottoMenu(ussd_menu.action_id, ussdString, out game_id, ref lines);
                                    rapidos_string = ussdString;
                                }
                                else
                                {
                                    menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.WrongRapidosNumber();
                                }
                                break;
                            case 120:
                            case 121:
                            case 122:
                            case 123:
                            case 124:
                            case 125:
                            case 126:
                            case 127:
                            case 128:
                            case 129:
                            case 130://enter dusan lottery amount
                                switch (ussd_menu.action_id)
                                {
                                    case 120:
                                        game_id = 4;
                                        break;
                                    case 121:
                                        game_id = 3;
                                        break;
                                    case 122:
                                        game_id = 2;
                                        break;
                                    case 123:
                                        game_id = 1;
                                        break;
                                    case 124:
                                        game_id = 11;
                                        break;
                                    case 125:
                                        game_id = 10;
                                        break;
                                    case 126:
                                        game_id = 9;
                                        break;
                                    case 127:
                                        game_id = 5;
                                        break;
                                    case 128:
                                        game_id = 6;
                                        break;
                                    case 129:
                                        game_id = 7;
                                        break;
                                    case 130:
                                        game_id = 8;
                                        break;
                                }
                                ServiceClass lotto_service = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games_ogn (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + rapidos_string + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "'," + ussdString + ", " + ussd_menu.service_id + ")", "DBConnectionString_104", ref lines);
                                //msgType = "2";
                                //opType = "2";
                                //is_close = true;
                                status = 1;
                                menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetConfirmLottoBet(ussdString, ref lines);
                                break;
                            case 55://EnterAmountForSubAgent
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                Int64 pos_trans_id = 0;
                                menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetAmountForSubAgentMenu(MSISDN, ussdString, selected_subagent_name, out pos_trans_id, ref lines);
                                if (pos_trans_id > 0)
                                {
                                    ServiceClass subscriber_service1 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                    LoginRequest LoginRequestBody = new LoginRequest()
                                    {
                                        ServiceID = subscriber_service1.service_id,
                                        Password = subscriber_service1.service_password
                                    };
                                    LoginResponse res = Login.DoLogin(LoginRequestBody);
                                    if (res != null)
                                    {
                                        if (res.ResultCode == 1000)
                                        {
                                            string token_id = res.TokenID;
                                            momo_request = new DYAReceiveMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(ussdString),
                                                ServiceID = ussd_menu.service_id,
                                                TokenID = token_id,
                                                TransactionID = "POSTrans_" + pos_trans_id

                                            };
                                        }
                                    }
                                }



                                break;
                            case 54:
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetSlectedSubAgentMenu(MSISDN, page_number, ussdString, out selected_subagent_name, ref lines);
                                break;
                            case 80: //Foot Solider Check MSISDN and ask to enter full name 
                                is_close = true;
                                menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetFootSoldiersMSISDNMenu(MSISDN, ussdString, out is_close, service, ref lines);
                                if (is_close)
                                {
                                    msgType = "2";
                                    opType = "2";
                                }
                                else
                                {
                                    Api.DataLayer.DBQueries.ExecuteQuery("insert into ussd_footsoldiers_attempts (user_session_id, footsoldier_msisdn, user_msisdn, full_name, user_id, date_time) values('" + user_session_id + "', " + MSISDN + ", 224" + ussdString + ", '', 0, now())", ref lines);
                                }
                                break;
                            case 79: //Foot Soldier create user
                                is_close = true;
                                Int64 user_msisdn = Api.DataLayer.DBQueries.SelectQueryReturnInt64("SELECT u.user_msisdn from ussd_footsoldiers_attempts u WHERE u.user_session_id = '" + user_session_id + "' order by u.id desc limit 1", ref lines);
                                if (user_msisdn > 0)
                                {
                                    Api.CommonFuncations.iDoBetOrangeGuinea.CreateUserResponse create_user = new Api.CommonFuncations.iDoBetOrangeGuinea.CreateUserResponse();
                                    menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetFootSoldiersFullNameMenu(MSISDN, ussdString, out is_close, ussd_menu, user_msisdn.ToString(), out create_user, ref lines);
                                    if (is_close)
                                    {
                                        LoginRequest LoginRequestBody = new LoginRequest()
                                        {
                                            ServiceID = service.service_id,
                                            Password = service.service_password
                                        };
                                        LoginResponse res = Login.DoLogin(LoginRequestBody);
                                        if (res != null)
                                        {
                                            if (res.ResultCode == 1000)
                                            {

                                                Int64 rec_id = Api.DataLayer.DBQueries.SelectQueryReturnInt64("SELECT u.id from ussd_footsoldiers_attempts u WHERE u.user_session_id = '" + user_session_id + "' order by u.id desc limit 1", ref lines);
                                                Api.DataLayer.DBQueries.ExecuteQuery("update ussd_footsoldiers_attempts set user_id = " + create_user.userId + ", full_name = '" + ussdString + "' where id = " + rec_id, ref lines);
                                                string token_id = res.TokenID;
                                                string sms_text = "Felicitations, vous vous etes inscrit avec succes sur YellowBet. https://m.yellowbet.com.gn/#/login Mot de passe: " + create_user.password;
                                                Api.DataLayer.DBQueries.ExecuteQuery("insert into foot_soldiers_sms (date_time, msisdn, service_id, sms_text) values(now(), " + user_msisdn + "," + service.service_id + ",'" + sms_text + "');", ref lines);
                                                SendSMSRequest RequestSendSMSBody1 = new SendSMSRequest()
                                                {
                                                    ServiceID = service.service_id,
                                                    MSISDN = user_msisdn,
                                                    Text = sms_text,
                                                    TokenID = token_id,
                                                    TransactionID = "12345"
                                                };
                                                SendSMSResponse response_sendsms1 = SendSMS.DoSMS(RequestSendSMSBody1);
                                                if (response_sendsms1 != null)
                                                {
                                                    if (response_sendsms1.ResultCode == 1010 || response_sendsms1.ResultCode == 1000)
                                                    {
                                                        lines = Add2Log(lines, " Send SMS Was OK", 100, lines[0].ControlerName);
                                                    }
                                                    else
                                                    {
                                                        lines = Add2Log(lines, " Send SMS Failed", 100, lines[0].ControlerName);
                                                    }
                                                }
                                                else
                                                {
                                                    lines = Add2Log(lines, " Send SMS Failed", 100, lines[0].ControlerName);
                                                }
                                            }
                                        }
                                    }
                                }
                                else
                                {
                                    is_close = false;
                                    menu_2_display = "Error 78_2" + Environment.NewLine;
                                    menu_2_display = menu_2_display + Environment.NewLine + "M) ";// Menu Principal ";

                                }
                                break;
                            case 78: //Foot Soldier Main Menu asking to enter MSISDN
                                menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetFootSoldierMainMenu(MSISDN, ref lines);
                                break;
                            case 53:
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetAgentMainMenu(MSISDN, page_number, ref lines);
                                break;
                            case 34: //DepositMoney
                                user = Api.CommonFuncations.iDoBetOrangeGuinea.SearchUserNew(MSISDN, ref lines);
                                menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetDepositMoneyMenu(user, ussd_menu, MSISDN, ref lines);
                                break;
                            case 36: //StartDepositMoney
                                user = Api.CommonFuncations.iDoBetOrangeGuinea.SearchUserNew(MSISDN, ref lines);
                                //msgType = "2";
                                //opType = "2";
                                //is_close = true;
                                menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetStartDepositMoneyMenu(service, user, ussd_menu, MSISDN, ussdString, out momo_request, ref lines);
                                break;
                            case 33: //WithdrawMoney
                                user = Api.CommonFuncations.iDoBetOrangeGuinea.SearchUserNew(MSISDN, ref lines);
                                menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetWithdrawMoneyMenu(user, ref lines);
                                break;
                            case 35: //StartWithdrawMoney
                                user = Api.CommonFuncations.iDoBetOrangeGuinea.SearchUserNew(MSISDN, ref lines);
                                menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetStartWithdrawMoneyMenu(user, false, false, false, ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                if (user.isValid == true)
                                {
                                    if (Convert.ToInt32(ussdString) <= user.AvailableForWithdraw && Convert.ToInt32(ussdString) > 0)
                                    {
                                        menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.CheckBeforeWithdrawMenu(service, MSISDN, ref lines);
                                        if (String.IsNullOrEmpty(menu_2_display))
                                        {
                                            //Refund user
                                            ServiceClass subscriber_service1 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                            LoginRequest LoginRequestBody1 = new LoginRequest()
                                            {
                                                ServiceID = service.service_id,
                                                Password = service.service_password
                                            };
                                            LoginResponse res1 = Login.DoLogin(LoginRequestBody1);
                                            if (res1 != null)
                                            {
                                                if (res1.ResultCode == 1000)
                                                {
                                                    string token_id = res1.TokenID;
                                                    DYATransferMoneyRequest momotransfer_request = new DYATransferMoneyRequest()
                                                    {
                                                        MSISDN = Convert.ToInt64(MSISDN),
                                                        Amount = Convert.ToInt32(ussdString),
                                                        ServiceID = service.service_id,
                                                        TokenID = token_id,
                                                        TransactionID = "USSDWithdraw_" + Guid.NewGuid().ToString()
                                                    };
                                                    string postBody = "", response_body = "";
                                                    //bool wd_result = StartWithdraw(user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                    bool do_withdraw = false;
                                                    string code = "";
                                                    if (user.AvailableForWithdraw > 0)
                                                    {
                                                        do_withdraw = true;
                                                        code = Api.CommonFuncations.iDoBetOrangeGuinea.StartWithdrawNew(user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                    }



                                                    menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetStartWithdrawMoneyMenu(user, true, true, false, ref lines);

                                                    if (code == "")
                                                    {
                                                        if (do_withdraw)
                                                        {
                                                            menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetStartWithdrawMoneyMenu(user, false, false, false, ref lines);
                                                            string mail_body = "<p><h2>Start Withdraw MTN Guinea has failed</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>Json: </b>" + postBody + "<br><b>Response: </b>" + response_body + "<br></p>";
                                                            string mail_subject = "Start Withdraw MTN Guinea has failed for user - " + user.id;
                                                            string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                            string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                            string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                            string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                            int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                            string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                            CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                                        }

                                                    }
                                                    else
                                                    {
                                                        DYATransferMoneyResponse momotransfer_response = CommonFuncations.DYATransferMoney.DoTransfer(momotransfer_request);
                                                        if (momotransfer_response.ResultCode == 1000)
                                                        {
                                                            postBody = "";
                                                            response_body = "";
                                                            bool end_withdraw = Api.CommonFuncations.iDoBetOrangeGuinea.EndWithdrawNew(momotransfer_response.Timestamp, momotransfer_response.TransactionID, true, code, user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                            if (!end_withdraw)
                                                            {
                                                                menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetStartWithdrawMoneyMenu(user, false, false, false, ref lines);
                                                                string mail_body = "", mail_subject = "";
                                                                mail_body = "<p><h2>End Withdraw MTN Guinea has failed but DYATransfer was ok</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>Request: </b>" + postBody + "<br>Response: " + response_body + "<br></p>";
                                                                mail_subject = "End Withdraw MTN Guinea has failed but DYATransfer was ok - " + user.id;
                                                                string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                                string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                                string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                                string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                                int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                                string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                                CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                                            }
                                                            GoogleAnalytics.SendData2GoogleAnalytics("UA-154843894-1", "ussd", Base64.Reverse(MSISDN), System.Web.HttpContext.Current.Request.ServerVariables["REMOTE_ADDR"], "BJ", "event", "Withdraw", "MOMO", "-" + ussdString, "/", ref lines);
                                                        }
                                                        else
                                                        {
                                                            menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetStartWithdrawMoneyMenu(user, false, false, false, ref lines);
                                                            postBody = "";
                                                            response_body = "";
                                                            bool end_withdraw = iDoBetOrangeGuinea.EndWithdrawNew(momotransfer_response.Timestamp, momotransfer_response.TransactionID, false, code, user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                            string mail_body = "", mail_subject = "";
                                                            mail_body = "<p><h2>Withdraw MTN Guinea has failed DYATransfer</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>MOMO Response: </b>" + momotransfer_response.ResultCode + " " + momotransfer_response.Description + "<br>User was refunded: " + end_withdraw + "<br><b>Request: </b>" + postBody + "<br><b>Response: </b>" + response_body + "</p>";
                                                            mail_subject = "Withdraw MTN Guinea has failed DYATransfer for user - " + user.id;
                                                            string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                            string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                            string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                            string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                            int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                            string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                            CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                                        }
                                                    }



                                                }
                                            }
                                        }


                                    }
                                    else
                                    {
                                        //user has requested more than allowed
                                        menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetStartWithdrawMoneyMenu(user, false, false, true, ref lines);
                                    }
                                }
                                break;
                            case 25://CloseXXXBet
                            case 26:
                            case 27:
                                List<Int64> saved_ids = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, "_ogn",ref lines);
                                bool placebet = false;
                                double num2;
                                bool res_parse1 = double.TryParse(amount, out num2);
                                if (res_parse1 == true)
                                {
                                    if (num2 >= 2000 && num2 <= 6000000)
                                    {
                                        placebet = true;
                                        if (saved_ids != null)
                                        {
                                            string mysaved_id = "";
                                            foreach (Int64 s in saved_ids)
                                            {
                                                mysaved_id = mysaved_id + s + ",";
                                                
                                            }
                                            if (!String.IsNullOrEmpty(mysaved_id))
                                            {
                                                mysaved_id = mysaved_id.Substring(0, mysaved_id.Length - 1);
                                                DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games_ogn set amount = " + amount + " where id in (" + mysaved_id + ")", "DBConnectionString_104", ref lines);
                                            }
                                        }
                                    }
                                    else
                                    {

                                        menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetWrongPriceBetMeny(ref lines);
                                        DataLayer.DBQueries.ExecuteQuery("delete from ussd_saved_games_ogn where user_session_id = '" + user_session_id + "' order by id desc limit 1", "DBConnectionString_104", ref lines);
                                    }
                                }


                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                //RequestForOrder
                                //bool req_for_order = GetRequestForOrder(ussd_session, ref lines);
                                if (placebet)
                                {
                                    bool req_for_order = Api.CommonFuncations.iDoBetOrangeGuinea.PlaceBet(ussd_session, ref lines);

                                    if (req_for_order == true)
                                    {
                                        menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetCloseBet(ussd_session, amount, ref lines);
                                        ServiceClass subscriber_service2 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                        LoginRequest LoginRequestBody = new LoginRequest()
                                        {
                                            ServiceID = subscriber_service2.service_id,
                                            Password = subscriber_service2.service_password
                                        };
                                        LoginResponse res = Login.DoLogin(LoginRequestBody);
                                        if (res != null)
                                        {
                                            if (res.ResultCode == 1000)
                                            {
                                                string token_id = res.TokenID;
                                                momo_request = new DYAReceiveMoneyRequest()
                                                {
                                                    MSISDN = Convert.ToInt64(MSISDN),
                                                    Amount = Convert.ToInt32(amount),
                                                    ServiceID = ussd_menu.service_id,
                                                    TokenID = token_id,
                                                    TransactionID = user_session_id

                                                };
                                            }
                                        }
                                    }
                                    else
                                    {
                                        menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetCloseBetFailed(ref lines);
                                    }
                                }

                                break;
                            case 22: //ConfirmBetXXX
                            case 23:
                            case 24:
                                amount = ussdString;
                                double num1;
                                bool res_parse = double.TryParse(amount, out num1);
                                if (res_parse == true)
                                {
                                    if (num1 >= 2000 && num1 <= 6000000)
                                    {
                                        menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetConfirmBet(ussd_session, amount, ref lines);
                                    }
                                    else
                                    {

                                        menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetWrongPriceBetMeny(ref lines);
                                        DataLayer.DBQueries.ExecuteQuery("delete from ussd_saved_games_ogn where user_session_id = '" + user_session_id + "' order by id desc limit 1", "DBConnectionString_104", ref lines);
                                    }
                                }
                                odd_page = 0;

                                break;
                            case 19: //PayAndConfirmXXX
                            case 20:
                            case 21:
                                //need to check if user clicks back and then returns to this section.
                                //DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + ussdString + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',0, " + service.service_id + ")", ref lines);
                                menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetPayAndConfirm(ussd_session, ref lines);
                                odd_page = 0;
                                break;
                            case 32: //ticket status
                                page_number = (page_number == 0 ? 1 : page_number);
                                menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetCheckTicketMenu(MSISDN, page_number, ussdString, ref lines);
                                break;
                            case 31: //tickets status by phone
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetCheckTicketsMenu(MSISDN, page_number, ref lines);
                                break;
                            case 52:
                                menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetPayoutBarcodeTicket(ussd_menu, MSISDN, ref lines);
                                if (String.IsNullOrEmpty(menu_2_display))
                                {
                                    msgType = "2";
                                    opType = "2";
                                    is_close = true;
                                    //Refund user
                                    ServiceClass subscriber_service2 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                    LoginRequest LoginRequestBody2 = new LoginRequest()
                                    {
                                        ServiceID = service.service_id,
                                        Password = service.service_password
                                    };
                                    LoginResponse res2 = Login.DoLogin(LoginRequestBody2);
                                    if (res2 != null)
                                    {
                                        if (res2.ResultCode == 1000)
                                        {
                                            string token_id = res2.TokenID;
                                            DYATransferMoneyRequest momotransfer_request = new DYATransferMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(amount_2_pay),
                                                ServiceID = service.service_id,
                                                TokenID = token_id,
                                                TransactionID = "POSTicketPayout_" + bar_code
                                            };
                                            DYATransferMoneyResponse momotransfer_response = CommonFuncations.DYATransferMoney.DoTransfer(momotransfer_request);

                                            if (momotransfer_response.ResultCode == 1000)
                                            {
                                                int cashier_id = Api.CommonFuncations.iDoBetOrangeGuinea.GetCashierID(MSISDN, ref lines);
                                                if (cashier_id > 0)
                                                {
                                                    DataLayer.DBQueries.ExecuteQuery("insert into casheir_transactions (cashier_id, bar_code, total_payout, date_time, dya_id) values(" + cashier_id + ", '" + bar_code + "', " + amount_2_pay + ", now()," + momotransfer_response.TransactionID + ");", ref lines);
                                                }
                                                GoogleAnalytics.SendData2GoogleAnalytics("UA-154843894-1", "ussd", Base64.Reverse(MSISDN), System.Web.HttpContext.Current.Request.ServerVariables["REMOTE_ADDR"], "BJ", "event", "PyoutPOSTicket", "MOMO", "-" + ussdString, "/", ref lines);
                                                //dopayout
                                                bool dopayout_res = Api.CommonFuncations.iDoBetOrangeGuinea.DoPayOutNew(momotransfer_response.Timestamp, momotransfer_response.TransactionID, bar_code, ref lines);
                                                //bool dopayout_res = iDoBet.DoPayout(bar_code, ref lines);
                                                menu_2_display = "Felicitations, le billet a ete rembourse sur votre compte MOMO.";

                                            }
                                            else
                                            {
                                                menu_2_display = "Le billet n'a pas ete rembourse sur votre compte MOMO." + Environment.NewLine;
                                                menu_2_display = menu_2_display + "Veuillez reessayer";
                                                string mail_body = "<p><h2>Payout MTN Guinea has failed DYATransfer</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>MOMO Response: </b>" + momotransfer_response.ResultCode + " " + momotransfer_response.Description + "<br></p>";
                                                string mail_subject = "Payout MTN Guinea has failed DYATransfer for user - " + user.id;
                                                string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                            }
                                        }
                                    }
                                }

                                break;
                            case 44: //search ticket
                                menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetCheckTicketByBarcodeMenu(MSISDN, ussdString, out amount_2_pay, ref lines);
                                bar_code = ussdString;
                                break;
                            case 39: //add another game
                                if (game_id > 0)
                                {
                                    //DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + ussdString + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',0, " + service.service_id + ")", ref lines);
                                    game_id = 0;
                                    selected_odd = 0;
                                    page_number = 1;
                                    odd_page = 0;
                                }
                                menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetSportsTypeMenu(ref lines);
                                break;
                            case 41: //Delete and Start Over
                                List<Int64> saved_ids1 = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, "_ogn", ref lines);
                                if (saved_ids1 != null)
                                {
                                    string mysaved_id = "";
                                    foreach (Int64 s in saved_ids1)
                                    {
                                        mysaved_id = mysaved_id + s + ",";

                                    }
                                    if (!String.IsNullOrEmpty(mysaved_id))
                                    {
                                        mysaved_id = mysaved_id.Substring(0, mysaved_id.Length - 1);
                                        DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games_ogn set status = 3 where id in (" + mysaved_id + ")", "DBConnectionString_104", ref lines);
                                    }

                                    
                                }

                                //DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set status = 3 where user_seesion_id = '" + user_session_id + "'", ref lines);
                                game_id = 0;
                                odd_page = 0;
                                selected_odd = 0;
                                page_number = 1;
                                menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetSportsTypeMenu(ref lines);
                                ussd_menu.action_id = 2;
                                break;
                            case 48:
                                menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetSoccerLeagueMenu(35, "0", ussd_menu.ussd_id, ref lines, out selected_league_id);
                                break;
                            case 47:
                                menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetSoccerLeagueMenu(32, "0", ussd_menu.ussd_id, ref lines, out selected_league_id);
                                break;
                            case 37: //display soccer leagu
                                menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetSoccerLeagueMenu(31, "0", ussd_menu.ussd_id, ref lines, out selected_league_id);
                                break;
                            case 49:
                            case 50:
                            case 38://selected league
                            case 28://Start Over
                            case 29:
                            case 30:
                            case 16://AddXXXGame or 
                            case 17:
                            case 18:
                            case 7: //DisplayXXXTopEvents   
                            case 8:
                            case 9:
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && page_number > 0)
                                {
                                    page_number = page_number - 1;
                                }
                                if (ussd_menu.action_id == 28 || ussd_menu.action_id == 29 || ussd_menu.action_id == 30)
                                {
                                    List<Int64> saved_ids2 = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, "_ogn", ref lines);
                                    if (saved_ids2 != null)
                                    {
                                        string mysaved_id = "";
                                        foreach (Int64 s in saved_ids2)
                                        {
                                            mysaved_id = mysaved_id + s + ",";

                                        }
                                        if (!String.IsNullOrEmpty(mysaved_id))
                                        {
                                            mysaved_id = mysaved_id.Substring(0, mysaved_id.Length - 1);
                                            DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games_ogn set status = 3 where id in (" + mysaved_id + ")", "DBConnectionString_104", ref lines);
                                        }
                                    }
                                    //DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set status = 3 where user_seesion_id = '"+user_session_id+"'", ref lines);
                                    game_id = 0;
                                    selected_odd = 0;
                                    odd_page = 0;
                                    page_number = 1;

                                }
                                if (ussd_menu.action_id == 16 || ussd_menu.action_id == 17 || ussd_menu.action_id == 18)
                                {
                                    if (game_id > 0)
                                    {
                                        //DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + ussdString + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',0, " + service.service_id + ")", ref lines);
                                        game_id = 0;
                                        selected_odd = 0;
                                        page_number = 1;
                                        odd_page = 0;
                                    }

                                }
                                switch (ussd_menu.action_id)
                                {
                                    case 38:
                                        menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetEventsMenu(ussdString, 31, page_number, ref lines, out selected_league_id, selected_league_id, ussd_menu);
                                        break;
                                    case 49:
                                        menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetEventsMenu(ussdString, 32, page_number, ref lines, out selected_league_id, selected_league_id, ussd_menu);
                                        break;
                                    case 50:
                                        menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetEventsMenu(ussdString, 35, page_number, ref lines, out selected_league_id, selected_league_id, ussd_menu);
                                        break;
                                    case 28:
                                    case 16:
                                    case 7:
                                        menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetEventsMenu(31, page_number, ref lines);
                                        break;
                                    case 29:
                                    case 17:
                                    case 8:
                                        menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetEventsMenu(32, page_number, ref lines);
                                        break;
                                    case 30:
                                    case 18:
                                    case 9:
                                        menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetEventsMenu(35, page_number, ref lines);
                                        break;
                                }


                                break;
                            case 10: //DisplayXXXGame
                            case 11:
                            case 12:
                                page_number = (page_number == 0 ? 1 : page_number);
                                selected_odd = 0;
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    odd_page = odd_page + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && odd_page > 0)
                                {
                                    odd_page = odd_page - 1;
                                }
                                switch (ussd_menu.action_id)
                                {
                                    case 10:
                                        menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetGameOddsMenu(31, page_number, ussdString, game_id, odd_page, out game_id, selected_league_id, ref lines);
                                        break;
                                    case 11:
                                        menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetGameOddsMenu(32, page_number, ussdString, game_id, odd_page, out game_id, selected_league_id, ref lines);
                                        break;
                                    case 12:
                                        menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetGameOddsMenu(35, page_number, ussdString, game_id, odd_page, out game_id, selected_league_id, ref lines);
                                        break;
                                }
                                break;
                            case 13: //ConfirmXXXGame (select odd)
                            case 14:
                            case 15:
                                switch (ussd_menu.action_id)
                                {
                                    case 13:
                                        menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetConfirmMenu(31, game_id, ussdString, odd_page, out selected_odd, out selected_bet_type_id, out selected_odd_name, out selected_odd_line, ref lines, ussd_session, MSISDN, service);
                                        break;
                                    case 14:
                                        menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetConfirmMenu(32, game_id, ussdString, odd_page, out selected_odd, out selected_bet_type_id, out selected_odd_name, out selected_odd_line, ref lines, ussd_session, MSISDN, service);
                                        break;
                                    case 15:
                                        menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetConfirmMenu(35, game_id, ussdString, odd_page, out selected_odd, out selected_bet_type_id, out selected_odd_name, out selected_odd_line, ref lines, ussd_session, MSISDN, service);
                                        break;
                                }
                                break;
                            case 92: //FreeBet
                                bool placebet2 = false;
                                USSDBonus ub = null;
                                menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.CheckFreeBet(ussd_session, MSISDN, out placebet2, out ub, ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                if (String.IsNullOrEmpty(menu_2_display) && placebet2)
                                {
                                    List<Int64> saved_ids3 = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, "_ogn", ref lines);
                                    if (saved_ids3 != null)
                                    {
                                        foreach (Int64 s in saved_ids3)
                                        {
                                            DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games_ogn set amount = " + ub.amount + " where id = " + s, "DBConnectionString_104", ref lines);
                                        }
                                    }

                                    bool req_for_order = Api.CommonFuncations.iDoBetOrangeGuinea.PlaceBet(ussd_session, ref lines);
                                    if (req_for_order == true)
                                    {
                                        //final placebet
                                        Int64 dya_id = Api.DataLayer.DBQueries.ExecuteQueryReturnInt64("insert into dya_transactions (msisdn, service_id, date_time, amount, result, result_desc, dya_method, transaction_id) values(" + MSISDN + "," + service.service_id + ",now()," + ub.amount + ",'02','USSD Bonus',2,'" + ussd_session.user_seesion_id + "')", ref lines);
                                        DYATransactions dya_trans = UpdateGetDYAReciveTrans(dya_id, "02", "USSD Bonus", ref lines);
                                        ExecuteOrderDetails barcode = null;
                                        string postBody = "", response_body = "";
                                        if (dya_trans.partner_transid.Contains("Rapidos_"))
                                        {
                                            barcode = CommonFuncations.iDoBetOrangeGuinea.PlaceBetRapidos(dya_trans, out postBody, out response_body, ref lines);
                                        }
                                        else
                                        {
                                            barcode = CommonFuncations.iDoBetOrangeGuinea.GetExecuteOrderNew(dya_trans, out postBody, out response_body, ref lines);
                                        }
                                        if (barcode != null)
                                        {
                                            double total_ratio = (Convert.ToDouble(barcode.max_payout) / Convert.ToDouble(barcode.amount));
                                            Api.DataLayer.DBQueries.ExecuteQuery("insert into ussd_bonus_bets (ussd_bonus_user_id, amount, odd, selections, barcode, payout_dya_id, date_time) values(" + ub.bonus_user_id + "," + ub.amount + "," + total_ratio + "," + saved_ids3.Count() + ",'" + barcode.barcode + "',0,now())", ref lines);
                                            string text_msg_ms = "Bonjour, votre bonus pari a ete place avec succes.\n";// + Environment.NewLine;
                                            text_msg_ms = text_msg_ms + "Numero de commande: " + barcode.order_number + "\n";// Environment.NewLine;
                                            text_msg_ms = text_msg_ms + "Code a barre: " + barcode.barcode + "\n";//Environment.NewLine;
                                            text_msg_ms = text_msg_ms + "Montant: " + barcode.amount + "\n";//Environment.NewLine;
                                            text_msg_ms = text_msg_ms + "Gain Maximum: " + barcode.max_payout;//Environment.NewLine;
                                            lines = Add2Log(lines, " total_bonus =  " + barcode.total_bonus, 100, lines[0].ControlerName);
                                            if (!String.IsNullOrEmpty(barcode.total_bonus))
                                            {
                                                text_msg_ms = text_msg_ms + "\nBonus: " + barcode.total_bonus;//Environment.NewLine;
                                            }
                                            //send sms
                                            LoginRequest LoginRequestBody = new LoginRequest()
                                            {
                                                ServiceID = service.service_id,
                                                Password = service.service_password
                                            };
                                            LoginResponse res = Login.DoLogin(LoginRequestBody);
                                            if (res != null)
                                            {
                                                if (res.ResultCode == 1000)
                                                {
                                                    string token_id = res.TokenID;
                                                    SendSMSRequest RequestSendSMSBody1 = new SendSMSRequest()
                                                    {
                                                        ServiceID = service.service_id,
                                                        MSISDN = Convert.ToInt64(MSISDN),
                                                        Text = text_msg_ms,
                                                        TokenID = token_id,
                                                        TransactionID = "12345"
                                                    };
                                                    SendSMSResponse response_sendsms1 = SendSMS.DoSMS(RequestSendSMSBody1);
                                                    if (response_sendsms1 != null)
                                                    {
                                                        if (response_sendsms1.ResultCode == 1010 || response_sendsms1.ResultCode == 1000)
                                                        {
                                                            lines = Add2Log(lines, " Send SMS Was OK", 100, lines[0].ControlerName);
                                                        }
                                                        else
                                                        {
                                                            lines = Add2Log(lines, " Send SMS Failed", 100, lines[0].ControlerName);
                                                        }
                                                    }
                                                    else
                                                    {
                                                        lines = Add2Log(lines, " Send SMS Failed", 100, lines[0].ControlerName);
                                                    }
                                                }
                                            }



                                        }

                                        menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetUSSDBonusCloseBet(barcode, ref lines);
                                    }
                                }

                                break;
                        }
                        lines = Add2Log(lines, " page_number = " + page_number, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " game_id = " + game_id, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " odd_page = " + odd_page, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " selected_odd = " + selected_odd, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " amount = " + amount, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " selected_league_id = " + selected_league_id, 100, "ivr_subscribe");
                        result = menu_2_display; // USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, menu_2_display, msgType, opType);
                        DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id, selected_odd, selected_bet_type_id,selected_odd_name, selected_odd_line, amount, selected_league_id, amount_2_pay, bar_code, selected_subagent_name, rapidos_string) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + "," + status + ", '" + ussdString + "', " + ussd_menu.action_id + ", " + page_number + "," + odd_page + "," + game_id + "," + topic_id + ",'" + user_session_id + "'," + selected_odd + "," + selected_bet_type_id + ",'" + selected_odd_name + "','" + selected_odd_line + "', " + amount + "," + selected_league_id + "," + amount_2_pay + ",'" + bar_code + "','" + selected_subagent_name + "', '" + rapidos_string + "');", "DBConnectionString_104", ref lines);
                        break;
                }
            }

            if (result.Contains("Bienvenue a YellowBet!"))
            {
                result = iDoBetOrangeGuinea.AddLottoMenu(result, MSISDN, ref lines);
                result = iDoBetOrangeGuinea.AddFSMenu(result, MSISDN, ref lines);
                menu_2_display = result;
            }

            return result;
        }

        public static string OrangeGuineaUSSDBehaviuer142(ServiceClass service, string ussdString, string ServiceID, string MSISDN, string linkid, string receiveCB, string senderCB, string serviceCode, USSDMenu ussd_menu, USSDSession ussd_session, out DYAReceiveMoneyRequest momo_request, ref List<LogLines> lines, out string menu_2_display, out bool is_close, string force_session_id)
        {
            momo_request = null;
            menu_2_display = "";
            is_close = false;
            string result = "";
            force_session_id = (String.IsNullOrEmpty(force_session_id) ? Guid.NewGuid().ToString() : force_session_id);
            string user_session_id = (ussd_session == null ? force_session_id : ussd_session.user_seesion_id);
            int topic_id = (ussd_session != null ? ussd_session.topic_id : ussd_menu.topic_id);
            if (!String.IsNullOrEmpty(ussd_menu.menu_2_display))
            {
                menu_2_display = ussd_menu.menu_2_display;
                result = ussd_menu.menu_2_display;// USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, ussd_menu.menu_2_display, "1", "1");
                DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + ",0, '" + ussdString + "', " + ussd_menu.action_id + ", " + (ussd_session == null ? 0 : ussd_session.page_number) + "," + (ussd_session == null ? 0 : ussd_session.odd_page) + "," + (ussd_session == null ? 0 : ussd_session.game_id) + "," + topic_id + ",'" + user_session_id + "');", "DBConnectionString_104", ref lines);
            }
            if (ussd_menu.action_id == 3) //close
            {
                menu_2_display = ussd_menu.menu_2_display;
                is_close = true;
                result = ussd_menu.menu_2_display; // USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, menu_2_display, "2", "2");
                DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + ",1, '" + ussdString + "', " + ussd_menu.action_id + ", " + (ussd_session == null ? 0 : ussd_session.page_number) + "," + (ussd_session == null ? 0 : ussd_session.odd_page) + "," + (ussd_session == null ? 0 : ussd_session.game_id) + "," + topic_id + ",'" + user_session_id + "');", "DBConnectionString_104", ref lines);
            }

            if (String.IsNullOrEmpty(result))
            {
                switch (topic_id)
                {
                    case 5:
                    case 2:
                    case 7:
                    case 10:
                        int page_number = (ussd_session != null ? ussd_session.page_number : 1);
                        int odd_page = (ussd_session != null ? ussd_session.odd_page : 0);
                        Int64 game_id = (ussd_session != null ? ussd_session.game_id : 0);
                        string rapidos_string = (ussd_session != null ? ussd_session.rapidos_string : "0");
                        double selected_odd = (ussd_session != null ? ussd_session.selected_odd : 0);
                        int selected_bet_type_id = (ussd_session != null ? ussd_session.selected_bet_type_id : 0);
                        string selected_odd_name = (ussd_session != null ? ussd_session.selected_odd_name : "0");
                        string selected_odd_line = (ussd_session != null ? ussd_session.selected_odd_line : "null");
                        string amount = (ussd_session != null ? ussd_session.amount : "0");
                        int selected_league_id = (ussd_session != null ? ussd_session.selected_league_id : 0);
                        string msgType = "1", opType = "1";
                        int status = 0;
                        string amount_2_pay = (ussd_session != null ? ussd_session.amount_2_pay.ToString() : "0");
                        string bar_code = (ussd_session != null ? ussd_session.bar_code : "0");
                        string selected_subagent_name = (ussd_session != null ? ussd_session.selected_subagent_name : "0");
                        IdoBetUser user = new IdoBetUser();
                        switch (ussd_menu.action_id)
                        {
                            case 75:
                            case 76:
                            case 77:
                                bool placebet1 = false;
                                double num3;
                                int max_bet = 0;
                                bool check_amount = double.TryParse(ussdString, out num3);
                                if (check_amount == true)
                                {
                                    switch (ussd_menu.action_id)
                                    {
                                        case 75:
                                            game_id = 35;
                                            max_bet = 340000;
                                            break;
                                        case 76:
                                            game_id = 36;
                                            max_bet = 65000;
                                            break;
                                        case 77:
                                            game_id = 37;
                                            max_bet = 4000;
                                            break;
                                    }
                                    if (num3 >= 1200 && num3 <= max_bet) //change to 1200
                                    {
                                        DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games_ogn (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + rapidos_string + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "'," + num3 + ", " + service.service_id + ")", "DBConnectionString_104", ref lines);
                                        placebet1 = true;
                                    }
                                    else
                                    {

                                        menu_2_display = Api.CommonFuncations.B2TechGNOrange.GetWrongPriceBetRapidos(max_bet, ref lines);
                                        DataLayer.DBQueries.ExecuteQuery("delete from ussd_saved_games_ogn where user_session_id = '" + user_session_id + "' order by id desc limit 1", "DBConnectionString_104", ref lines);
                                    }
                                }
                                //msgType = "2";
                                //opType = "2";
                                //is_close = true;
                                status = 1;
                                //RequestForOrder
                                //bool req_for_order = GetRequestForOrder(ussd_session, ref lines);
                                if (placebet1)
                                {

                                    menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetConfirmRapidosBet(game_id, ussdString, ref lines);
                                    //LoginRequest LoginRequestBody = new LoginRequest()
                                    //{
                                    //    ServiceID = service.service_id,
                                    //    Password = service.service_password
                                    //};
                                    //LoginResponse res = Login.DoLogin(LoginRequestBody);
                                    //if (res != null)
                                    //{
                                    //    if (res.ResultCode == 1000)
                                    //    {
                                    //        string token_id = res.TokenID;
                                    //        momo_request = new DYAReceiveMoneyRequest()
                                    //        {
                                    //            MSISDN = Convert.ToInt64(MSISDN),
                                    //            Amount = Convert.ToInt32(ussdString),
                                    //            ServiceID = service.service_id,
                                    //            TokenID = token_id,
                                    //            TransactionID = "Rapidos_" + user_session_id
                                    //        };
                                    //    }
                                    //}
                                }

                                break;

                            case 72: //Confirm Rapidos
                            case 73:
                            case 74:
                                String[] strlist = new string[] { };
                                bool validate_num = Api.CommonFuncations.B2TechGNOrange.ValidateRapidosInput(ussdString, ussd_menu.action_id, out strlist, ref lines);
                                if (validate_num)
                                {
                                    menu_2_display = Api.CommonFuncations.B2TechGNOrange.GetConfirmRapidosMenu(ussd_menu.action_id, ussdString, out game_id, ref lines);
                                    rapidos_string = ussdString;
                                }
                                else
                                {
                                    menu_2_display = Api.CommonFuncations.B2TechGNOrange.WrongRapidosNumber();
                                }
                                break;
                            case 109:
                            case 110:
                            case 111:
                            case 112:
                            case 113:
                            case 114:
                            case 115:
                            case 116:
                            case 117:
                            case 118:
                            case 119://enter dusun lottery numbers
                                bool validate_num_dusan = Api.CommonFuncations.B2TechGNOrange.ValidateDusanLottoInput(ussdString, ussd_menu.action_id, out strlist, ref lines);
                                if (validate_num_dusan)
                                {
                                    menu_2_display = Api.CommonFuncations.B2TechGNOrange.GetConfirmDusanLottoMenu(ussd_menu.action_id, ussdString, out game_id, ref lines);
                                    rapidos_string = ussdString;
                                }
                                else
                                {
                                    menu_2_display = Api.CommonFuncations.B2TechGNOrange.WrongRapidosNumber();
                                }
                                break;
                            case 120:
                            case 121:
                            case 122:
                            case 123:
                            case 124:
                            case 125:
                            case 126:
                            case 127:
                            case 128:
                            case 129:
                            case 130://enter dusan lottery amount
                                switch (ussd_menu.action_id)
                                {
                                    case 120:
                                        game_id = 4;
                                        break;
                                    case 121:
                                        game_id = 3;
                                        break;
                                    case 122:
                                        game_id = 2;
                                        break;
                                    case 123:
                                        game_id = 1;
                                        break;
                                    case 124:
                                        game_id = 11;
                                        break;
                                    case 125:
                                        game_id = 10;
                                        break;
                                    case 126:
                                        game_id = 9;
                                        break;
                                    case 127:
                                        game_id = 5;
                                        break;
                                    case 128:
                                        game_id = 6;
                                        break;
                                    case 129:
                                        game_id = 7;
                                        break;
                                    case 130:
                                        game_id = 8;
                                        break;
                                }
                                ServiceClass lotto_service = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games_ogn (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + rapidos_string + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "'," + ussdString + ", " + ussd_menu.service_id + ")", "DBConnectionString_104", ref lines);
                                //msgType = "2";
                                //opType = "2";
                                //is_close = true;
                                status = 1;
                                menu_2_display = Api.CommonFuncations.iDoBetOrangeGuinea.GetConfirmLottoBet(ussdString, ref lines);
                                break;
                            case 55://EnterAmountForSubAgent
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                Int64 pos_trans_id = 0;
                                menu_2_display = Api.CommonFuncations.B2TechGNOrange.GetAmountForSubAgentMenu(MSISDN, ussdString, selected_subagent_name, out pos_trans_id, ref lines);
                                if (pos_trans_id > 0)
                                {
                                    ServiceClass subscriber_service1 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                    LoginRequest LoginRequestBody = new LoginRequest()
                                    {
                                        ServiceID = subscriber_service1.service_id,
                                        Password = subscriber_service1.service_password
                                    };
                                    LoginResponse res = Login.DoLogin(LoginRequestBody);
                                    if (res != null)
                                    {
                                        if (res.ResultCode == 1000)
                                        {
                                            string token_id = res.TokenID;
                                            momo_request = new DYAReceiveMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(ussdString),
                                                ServiceID = ussd_menu.service_id,
                                                TokenID = token_id,
                                                TransactionID = "POSTrans_" + pos_trans_id

                                            };
                                        }
                                    }
                                }



                                break;
                            case 54:
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = Api.CommonFuncations.B2TechGNOrange.GetSlectedSubAgentMenu(MSISDN, page_number, ussdString, out selected_subagent_name, ref lines);
                                break;
                            case 80: //Foot Solider Check MSISDN and ask to enter full name 
                                is_close = true;
                                menu_2_display = Api.CommonFuncations.B2TechGNOrange.GetFootSoldiersMSISDNMenu(MSISDN, ussdString, out is_close, service, ref lines);
                                if (is_close)
                                {
                                    msgType = "2";
                                    opType = "2";
                                }
                                else
                                {
                                    Api.DataLayer.DBQueries.ExecuteQuery("insert into ussd_footsoldiers_attempts (user_session_id, footsoldier_msisdn, user_msisdn, full_name, user_id, date_time) values('" + user_session_id + "', " + MSISDN + ", 224" + ussdString + ", '', 0, now())", ref lines);
                                }
                                break;
                            case 79: //Foot Soldier create user
                                is_close = true;
                                Int64 user_msisdn = Api.DataLayer.DBQueries.SelectQueryReturnInt64("SELECT u.user_msisdn from ussd_footsoldiers_attempts u WHERE u.user_session_id = '" + user_session_id + "' order by u.id desc limit 1", ref lines);
                                if (user_msisdn > 0)
                                {
                                    Api.CommonFuncations.B2TechGNOrange.CreateUserResponse create_user = new Api.CommonFuncations.B2TechGNOrange.CreateUserResponse();
                                    menu_2_display = Api.CommonFuncations.B2TechGNOrange.GetFootSoldiersFullNameMenu(MSISDN, ussdString, out is_close, ussd_menu, user_msisdn.ToString(), out create_user, ref lines);
                                    if (is_close)
                                    {
                                        LoginRequest LoginRequestBody = new LoginRequest()
                                        {
                                            ServiceID = service.service_id,
                                            Password = service.service_password
                                        };
                                        LoginResponse res = Login.DoLogin(LoginRequestBody);
                                        if (res != null)
                                        {
                                            if (res.ResultCode == 1000)
                                            {

                                                Int64 rec_id = Api.DataLayer.DBQueries.SelectQueryReturnInt64("SELECT u.id from ussd_footsoldiers_attempts u WHERE u.user_session_id = '" + user_session_id + "' order by u.id desc limit 1", ref lines);
                                                Api.DataLayer.DBQueries.ExecuteQuery("update ussd_footsoldiers_attempts set user_id = " + create_user.userId + ", full_name = '" + ussdString + "' where id = " + rec_id, ref lines);
                                                string token_id = res.TokenID;
                                                string sms_text = "Felicitations, vous vous etes inscrit avec succes sur YellowBet. https://m.yellowbet.com.gn/#/login Mot de passe: " + create_user.password;
                                                Api.DataLayer.DBQueries.ExecuteQuery("insert into foot_soldiers_sms (date_time, msisdn, service_id, sms_text) values(now(), " + user_msisdn + "," + service.service_id + ",'" + sms_text + "');", ref lines);
                                                SendSMSRequest RequestSendSMSBody1 = new SendSMSRequest()
                                                {
                                                    ServiceID = service.service_id,
                                                    MSISDN = user_msisdn,
                                                    Text = sms_text,
                                                    TokenID = token_id,
                                                    TransactionID = "12345"
                                                };
                                                SendSMSResponse response_sendsms1 = SendSMS.DoSMS(RequestSendSMSBody1);
                                                if (response_sendsms1 != null)
                                                {
                                                    if (response_sendsms1.ResultCode == 1010 || response_sendsms1.ResultCode == 1000)
                                                    {
                                                        lines = Add2Log(lines, " Send SMS Was OK", 100, lines[0].ControlerName);
                                                    }
                                                    else
                                                    {
                                                        lines = Add2Log(lines, " Send SMS Failed", 100, lines[0].ControlerName);
                                                    }
                                                }
                                                else
                                                {
                                                    lines = Add2Log(lines, " Send SMS Failed", 100, lines[0].ControlerName);
                                                }
                                            }
                                        }
                                    }
                                }
                                else
                                {
                                    is_close = false;
                                    menu_2_display = "Error 78_2" + Environment.NewLine;
                                    menu_2_display = menu_2_display + Environment.NewLine + "M) ";// Menu Principal ";

                                }
                                break;
                            case 78: //Foot Soldier Main Menu asking to enter MSISDN
                                menu_2_display = Api.CommonFuncations.B2TechGNOrange.GetFootSoldierMainMenu(MSISDN, ref lines);
                                break;
                            case 53:
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = Api.CommonFuncations.B2TechGNOrange.GetAgentMainMenu(MSISDN, page_number, ref lines);
                                break;
                            case 34: //DepositMoney
                                user = Api.CommonFuncations.B2TechGNOrange.SearchUserNew(MSISDN, ref lines);
                                menu_2_display = Api.CommonFuncations.B2TechGNOrange.GetDepositMoneyMenu(user, ussd_menu, MSISDN, ref lines);
                                break;
                            case 36: //StartDepositMoney
                                user = Api.CommonFuncations.B2TechGNOrange.SearchUserNew(MSISDN, ref lines);
                                //msgType = "2";
                                //opType = "2";
                                //is_close = true;
                                menu_2_display = Api.CommonFuncations.B2TechGNOrange.GetStartDepositMoneyMenu(service, user, ussd_menu, MSISDN, ussdString, out momo_request, ref lines);
                                break;
                            case 33: //WithdrawMoney
                                user = Api.CommonFuncations.B2TechGNOrange.SearchUserNew(MSISDN, ref lines);
                                menu_2_display = Api.CommonFuncations.B2TechGNOrange.GetWithdrawMoneyMenu(user, ref lines);
                                break;
                            case 35: //StartWithdrawMoney
                                user = Api.CommonFuncations.B2TechGNOrange.SearchUserNew(MSISDN, ref lines);
                                menu_2_display = Api.CommonFuncations.B2TechGNOrange.GetStartWithdrawMoneyMenu(user, false, false, false, ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                if (user.isValid == true)
                                {
                                    if (Convert.ToInt32(ussdString) <= user.AvailableForWithdraw && Convert.ToInt32(ussdString) > 0)
                                    {
                                        menu_2_display = Api.CommonFuncations.B2TechGNOrange.CheckBeforeWithdrawMenu(service, MSISDN, ref lines);
                                        if (String.IsNullOrEmpty(menu_2_display))
                                        {
                                            //Refund user
                                            ServiceClass subscriber_service1 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                            LoginRequest LoginRequestBody1 = new LoginRequest()
                                            {
                                                ServiceID = service.service_id,
                                                Password = service.service_password
                                            };
                                            LoginResponse res1 = Login.DoLogin(LoginRequestBody1);
                                            if (res1 != null)
                                            {
                                                if (res1.ResultCode == 1000)
                                                {
                                                    string token_id = res1.TokenID;
                                                    DYATransferMoneyRequest momotransfer_request = new DYATransferMoneyRequest()
                                                    {
                                                        MSISDN = Convert.ToInt64(MSISDN),
                                                        Amount = Convert.ToInt32(ussdString),
                                                        ServiceID = service.service_id,
                                                        TokenID = token_id,
                                                        TransactionID = "USSDWithdraw_" + Guid.NewGuid().ToString()
                                                    };
                                                    string postBody = "", response_body = "";
                                                    //bool wd_result = StartWithdraw(user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                    bool do_withdraw = false;
                                                    string code = "";
                                                    if (user.AvailableForWithdraw > 0)
                                                    {
                                                        do_withdraw = true;
                                                        code = Api.CommonFuncations.B2TechGNOrange.StartWithdrawNew(user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                    }



                                                    menu_2_display = Api.CommonFuncations.B2TechGNOrange.GetStartWithdrawMoneyMenu(user, true, true, false, ref lines);

                                                    if (code == "")
                                                    {
                                                        if (do_withdraw)
                                                        {
                                                            menu_2_display = Api.CommonFuncations.B2TechGNOrange.GetStartWithdrawMoneyMenu(user, false, false, false, ref lines);
                                                            string mail_body = "<p><h2>Start Withdraw MTN Guinea has failed</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>Json: </b>" + postBody + "<br><b>Response: </b>" + response_body + "<br></p>";
                                                            string mail_subject = "Start Withdraw MTN Guinea has failed for user - " + user.id;
                                                            string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                            string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                            string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                            string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                            int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                            string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                            CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                                        }

                                                    }
                                                    else
                                                    {
                                                        DYATransferMoneyResponse momotransfer_response = CommonFuncations.DYATransferMoney.DoTransfer(momotransfer_request);
                                                        if (momotransfer_response.ResultCode == 1000)
                                                        {
                                                            postBody = "";
                                                            response_body = "";
                                                            bool end_withdraw = Api.CommonFuncations.B2TechGNOrange.EndWithdrawNew(momotransfer_response.Timestamp, momotransfer_response.TransactionID, true, code, user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                            if (!end_withdraw)
                                                            {
                                                                menu_2_display = Api.CommonFuncations.B2TechGNOrange.GetStartWithdrawMoneyMenu(user, false, false, false, ref lines);
                                                                string mail_body = "", mail_subject = "";
                                                                mail_body = "<p><h2>End Withdraw MTN Guinea has failed but DYATransfer was ok</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>Request: </b>" + postBody + "<br>Response: " + response_body + "<br></p>";
                                                                mail_subject = "End Withdraw MTN Guinea has failed but DYATransfer was ok - " + user.id;
                                                                string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                                string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                                string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                                string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                                int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                                string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                                CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                                            }
                                                            GoogleAnalytics.SendData2GoogleAnalytics("UA-154843894-1", "ussd", Base64.Reverse(MSISDN), System.Web.HttpContext.Current.Request.ServerVariables["REMOTE_ADDR"], "BJ", "event", "Withdraw", "MOMO", "-" + ussdString, "/", ref lines);
                                                        }
                                                        else
                                                        {
                                                            menu_2_display = Api.CommonFuncations.B2TechGNOrange.GetStartWithdrawMoneyMenu(user, false, false, false, ref lines);
                                                            postBody = "";
                                                            response_body = "";
                                                            bool end_withdraw = B2TechGNOrange.EndWithdrawNew(momotransfer_response.Timestamp, momotransfer_response.TransactionID, false, code, user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                            string mail_body = "", mail_subject = "";
                                                            mail_body = "<p><h2>Withdraw MTN Guinea has failed DYATransfer</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>MOMO Response: </b>" + momotransfer_response.ResultCode + " " + momotransfer_response.Description + "<br>User was refunded: " + end_withdraw + "<br><b>Request: </b>" + postBody + "<br><b>Response: </b>" + response_body + "</p>";
                                                            mail_subject = "Withdraw MTN Guinea has failed DYATransfer for user - " + user.id;
                                                            string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                            string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                            string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                            string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                            int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                            string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                            CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                                        }
                                                    }



                                                }
                                            }
                                        }


                                    }
                                    else
                                    {
                                        //user has requested more than allowed
                                        menu_2_display = Api.CommonFuncations.B2TechGNOrange.GetStartWithdrawMoneyMenu(user, false, false, true, ref lines);
                                    }
                                }
                                break;
                            case 25://CloseXXXBet
                            case 26:
                            case 27:
                                List<Int64> saved_ids = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, "_ogn", ref lines);
                                bool placebet = false;
                                double num2;
                                bool res_parse1 = double.TryParse(amount, out num2);
                                if (res_parse1 == true)
                                {
                                    if (num2 >= 2000 && num2 <= 6000000)
                                    {
                                        placebet = true;
                                        if (saved_ids != null)
                                        {
                                            string mysaved_id = "";
                                            foreach (Int64 s in saved_ids)
                                            {
                                                mysaved_id = mysaved_id + s + ",";

                                            }
                                            if (!String.IsNullOrEmpty(mysaved_id))
                                            {
                                                mysaved_id = mysaved_id.Substring(0, mysaved_id.Length - 1);
                                                DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games_ogn set amount = " + amount + " where id in (" + mysaved_id + ")", "DBConnectionString_104", ref lines);
                                            }
                                        }
                                    }
                                    else
                                    {

                                        menu_2_display = Api.CommonFuncations.B2TechGNOrange.GetWrongPriceBetMeny(ref lines);
                                        DataLayer.DBQueries.ExecuteQuery("delete from ussd_saved_games_ogn where user_session_id = '" + user_session_id + "' order by id desc limit 1", "DBConnectionString_104", ref lines);
                                    }
                                }


                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                //RequestForOrder
                                //bool req_for_order = GetRequestForOrder(ussd_session, ref lines);
                                if (placebet)
                                {
                                    bool req_for_order = Api.CommonFuncations.B2TechGNOrange.PlaceBet(ussd_session, ref lines);

                                    if (req_for_order == true)
                                    {
                                        menu_2_display = Api.CommonFuncations.B2TechGNOrange.GetCloseBet(ussd_session, amount, ref lines);
                                        ServiceClass subscriber_service2 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                        LoginRequest LoginRequestBody = new LoginRequest()
                                        {
                                            ServiceID = subscriber_service2.service_id,
                                            Password = subscriber_service2.service_password
                                        };
                                        LoginResponse res = Login.DoLogin(LoginRequestBody);
                                        if (res != null)
                                        {
                                            if (res.ResultCode == 1000)
                                            {
                                                string token_id = res.TokenID;
                                                momo_request = new DYAReceiveMoneyRequest()
                                                {
                                                    MSISDN = Convert.ToInt64(MSISDN),
                                                    Amount = Convert.ToInt32(amount),
                                                    ServiceID = ussd_menu.service_id,
                                                    TokenID = token_id,
                                                    TransactionID = user_session_id

                                                };
                                            }
                                        }
                                    }
                                    else
                                    {
                                        menu_2_display = Api.CommonFuncations.B2TechGNOrange.GetCloseBetFailed(ref lines);
                                    }
                                }

                                break;
                            case 22: //ConfirmBetXXX
                            case 23:
                            case 24:
                                amount = ussdString;
                                double num1;
                                bool res_parse = double.TryParse(amount, out num1);
                                if (res_parse == true)
                                {
                                    if (num1 >= 2000 && num1 <= 6000000)
                                    {
                                        menu_2_display = Api.CommonFuncations.B2TechGNOrange.GetConfirmBet(ussd_session, amount, ref lines);
                                    }
                                    else
                                    {

                                        menu_2_display = Api.CommonFuncations.B2TechGNOrange.GetWrongPriceBetMeny(ref lines);
                                        DataLayer.DBQueries.ExecuteQuery("delete from ussd_saved_games_ogn where user_session_id = '" + user_session_id + "' order by id desc limit 1", "DBConnectionString_104", ref lines);
                                    }
                                }
                                odd_page = 0;

                                break;
                            case 19: //PayAndConfirmXXX
                            case 20:
                            case 21:
                                //need to check if user clicks back and then returns to this section.
                                //DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + ussdString + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',0, " + service.service_id + ")", ref lines);
                                menu_2_display = Api.CommonFuncations.B2TechGNOrange.GetPayAndConfirm(ussd_session, ref lines);
                                odd_page = 0;
                                break;
                            case 32: //ticket status
                                page_number = (page_number == 0 ? 1 : page_number);
                                menu_2_display = Api.CommonFuncations.B2TechGNOrange.GetCheckTicketMenu(MSISDN, page_number, ussdString, ref lines);
                                break;
                            case 31: //tickets status by phone
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = Api.CommonFuncations.B2TechGNOrange.GetCheckTicketsMenu(MSISDN, page_number, ref lines);
                                break;
                            case 52:
                                menu_2_display = Api.CommonFuncations.B2TechGNOrange.GetPayoutBarcodeTicket(ussd_menu, MSISDN, ref lines);
                                if (String.IsNullOrEmpty(menu_2_display))
                                {
                                    msgType = "2";
                                    opType = "2";
                                    is_close = true;
                                    //Refund user
                                    ServiceClass subscriber_service2 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                    LoginRequest LoginRequestBody2 = new LoginRequest()
                                    {
                                        ServiceID = service.service_id,
                                        Password = service.service_password
                                    };
                                    LoginResponse res2 = Login.DoLogin(LoginRequestBody2);
                                    if (res2 != null)
                                    {
                                        if (res2.ResultCode == 1000)
                                        {
                                            string token_id = res2.TokenID;
                                            DYATransferMoneyRequest momotransfer_request = new DYATransferMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(amount_2_pay),
                                                ServiceID = service.service_id,
                                                TokenID = token_id,
                                                TransactionID = "POSTicketPayout_" + bar_code
                                            };
                                            DYATransferMoneyResponse momotransfer_response = CommonFuncations.DYATransferMoney.DoTransfer(momotransfer_request);

                                            if (momotransfer_response.ResultCode == 1000)
                                            {
                                                int cashier_id = Api.CommonFuncations.B2TechGNOrange.GetCashierID(MSISDN, ref lines);
                                                if (cashier_id > 0)
                                                {
                                                    DataLayer.DBQueries.ExecuteQuery("insert into casheir_transactions (cashier_id, bar_code, total_payout, date_time, dya_id) values(" + cashier_id + ", '" + bar_code + "', " + amount_2_pay + ", now()," + momotransfer_response.TransactionID + ");", ref lines);
                                                }
                                                GoogleAnalytics.SendData2GoogleAnalytics("UA-154843894-1", "ussd", Base64.Reverse(MSISDN), System.Web.HttpContext.Current.Request.ServerVariables["REMOTE_ADDR"], "BJ", "event", "PyoutPOSTicket", "MOMO", "-" + ussdString, "/", ref lines);
                                                //dopayout
                                                bool dopayout_res = Api.CommonFuncations.B2TechGNOrange.DoPayOutNew(momotransfer_response.Timestamp, momotransfer_response.TransactionID, bar_code, ref lines);
                                                //bool dopayout_res = iDoBet.DoPayout(bar_code, ref lines);
                                                menu_2_display = "Felicitations, le billet a ete rembourse sur votre compte MOMO.";

                                            }
                                            else
                                            {
                                                menu_2_display = "Le billet n'a pas ete rembourse sur votre compte MOMO." + Environment.NewLine;
                                                menu_2_display = menu_2_display + "Veuillez reessayer";
                                                string mail_body = "<p><h2>Payout MTN Guinea has failed DYATransfer</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>MOMO Response: </b>" + momotransfer_response.ResultCode + " " + momotransfer_response.Description + "<br></p>";
                                                string mail_subject = "Payout MTN Guinea has failed DYATransfer for user - " + user.id;
                                                string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                            }
                                        }
                                    }
                                }

                                break;
                            case 44: //search ticket
                                menu_2_display = Api.CommonFuncations.B2TechGNOrange.GetCheckTicketByBarcodeMenu(MSISDN, ussdString, out amount_2_pay, ref lines);
                                bar_code = ussdString;
                                break;
                            case 39: //add another game
                                if (game_id > 0)
                                {
                                    //DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + ussdString + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',0, " + service.service_id + ")", ref lines);
                                    game_id = 0;
                                    selected_odd = 0;
                                    page_number = 1;
                                    odd_page = 0;
                                }
                                menu_2_display = Api.CommonFuncations.B2TechGNOrange.GetSportsTypeMenu(ref lines);
                                break;
                            case 41: //Delete and Start Over
                                List<Int64> saved_ids1 = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, "_ogn", ref lines);
                                if (saved_ids1 != null)
                                {
                                    string mysaved_id = "";
                                    foreach (Int64 s in saved_ids1)
                                    {
                                        mysaved_id = mysaved_id + s + ",";

                                    }
                                    if (!String.IsNullOrEmpty(mysaved_id))
                                    {
                                        mysaved_id = mysaved_id.Substring(0, mysaved_id.Length - 1);
                                        DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games_ogn set status = 3 where id in (" + mysaved_id + ")", "DBConnectionString_104", ref lines);
                                    }


                                }

                                //DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set status = 3 where user_seesion_id = '" + user_session_id + "'", ref lines);
                                game_id = 0;
                                odd_page = 0;
                                selected_odd = 0;
                                page_number = 1;
                                menu_2_display = Api.CommonFuncations.B2TechGNOrange.GetSportsTypeMenu(ref lines);
                                ussd_menu.action_id = 2;
                                break;
                            case 48:
                                menu_2_display = Api.CommonFuncations.B2TechGNOrange.GetSoccerLeagueMenu(35, "0", ussd_menu.ussd_id, ref lines, out selected_league_id);
                                break;
                            case 47:
                                menu_2_display = Api.CommonFuncations.B2TechGNOrange.GetSoccerLeagueMenu(32, "0", ussd_menu.ussd_id, ref lines, out selected_league_id);
                                break;
                            case 37: //display soccer leagu
                                menu_2_display = Api.CommonFuncations.B2TechGNOrange.GetSoccerLeagueMenu(31, "0", ussd_menu.ussd_id, ref lines, out selected_league_id);
                                break;
                            case 49:
                            case 50:
                            case 38://selected league
                            case 28://Start Over
                            case 29:
                            case 30:
                            case 16://AddXXXGame or 
                            case 17:
                            case 18:
                            case 7: //DisplayXXXTopEvents   
                            case 8:
                            case 9:
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && page_number > 0)
                                {
                                    page_number = page_number - 1;
                                }
                                if (ussd_menu.action_id == 28 || ussd_menu.action_id == 29 || ussd_menu.action_id == 30)
                                {
                                    List<Int64> saved_ids2 = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, "_ogn", ref lines);
                                    if (saved_ids2 != null)
                                    {
                                        string mysaved_id = "";
                                        foreach (Int64 s in saved_ids2)
                                        {
                                            mysaved_id = mysaved_id + s + ",";

                                        }
                                        if (!String.IsNullOrEmpty(mysaved_id))
                                        {
                                            mysaved_id = mysaved_id.Substring(0, mysaved_id.Length - 1);
                                            DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games_ogn set status = 3 where id in (" + mysaved_id + ")", "DBConnectionString_104", ref lines);
                                        }
                                    }
                                    //DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set status = 3 where user_seesion_id = '"+user_session_id+"'", ref lines);
                                    game_id = 0;
                                    selected_odd = 0;
                                    odd_page = 0;
                                    page_number = 1;

                                }
                                if (ussd_menu.action_id == 16 || ussd_menu.action_id == 17 || ussd_menu.action_id == 18)
                                {
                                    if (game_id > 0)
                                    {
                                        //DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + ussdString + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',0, " + service.service_id + ")", ref lines);
                                        game_id = 0;
                                        selected_odd = 0;
                                        page_number = 1;
                                        odd_page = 0;
                                    }

                                }
                                switch (ussd_menu.action_id)
                                {
                                    case 38:
                                        menu_2_display = Api.CommonFuncations.B2TechGNOrange.GetEventsMenu(ussdString, 31, page_number, ref lines, out selected_league_id, selected_league_id, ussd_menu);
                                        break;
                                    case 49:
                                        menu_2_display = Api.CommonFuncations.B2TechGNOrange.GetEventsMenu(ussdString, 32, page_number, ref lines, out selected_league_id, selected_league_id, ussd_menu);
                                        break;
                                    case 50:
                                        menu_2_display = Api.CommonFuncations.B2TechGNOrange.GetEventsMenu(ussdString, 35, page_number, ref lines, out selected_league_id, selected_league_id, ussd_menu);
                                        break;
                                    case 28:
                                    case 16:
                                    case 7:
                                        menu_2_display = Api.CommonFuncations.B2TechGNOrange.GetEventsMenu(31, page_number, ref lines);
                                        break;
                                    case 29:
                                    case 17:
                                    case 8:
                                        menu_2_display = Api.CommonFuncations.B2TechGNOrange.GetEventsMenu(32, page_number, ref lines);
                                        break;
                                    case 30:
                                    case 18:
                                    case 9:
                                        menu_2_display = Api.CommonFuncations.B2TechGNOrange.GetEventsMenu(35, page_number, ref lines);
                                        break;
                                }


                                break;
                            case 10: //DisplayXXXGame
                            case 11:
                            case 12:
                                page_number = (page_number == 0 ? 1 : page_number);
                                selected_odd = 0;
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    odd_page = odd_page + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && odd_page > 0)
                                {
                                    odd_page = odd_page - 1;
                                }
                                try
                                {
                                    switch (ussd_menu.action_id)
                                    {
                                        case 10:
                                            menu_2_display = Api.CommonFuncations.B2TechGNOrange.GetGameOddsMenu(31, page_number, ussdString, game_id, odd_page, out game_id, selected_league_id, ref lines);
                                            break;
                                        case 11:
                                            menu_2_display = Api.CommonFuncations.B2TechGNOrange.GetGameOddsMenu(32, page_number, ussdString, game_id, odd_page, out game_id, selected_league_id, ref lines);
                                            break;
                                        case 12:
                                            menu_2_display = Api.CommonFuncations.B2TechGNOrange.GetGameOddsMenu(35, page_number, ussdString, game_id, odd_page, out game_id, selected_league_id, ref lines);
                                            break;
                                    }
                                }
                                catch(Exception ex)
                                {
                                    menu_2_display = "*) Retour";
                                    menu_2_display = menu_2_display + Environment.NewLine + "M) ";
                                }
                                
                                break;
                            case 13: //ConfirmXXXGame (select odd)
                            case 14:
                            case 15:
                                switch (ussd_menu.action_id)
                                {
                                    case 13:
                                        menu_2_display = Api.CommonFuncations.B2TechGNOrange.GetConfirmMenu(31, game_id, ussdString, odd_page, out selected_odd, out selected_bet_type_id, out selected_odd_name, out selected_odd_line, ref lines, ussd_session, MSISDN, service);
                                        break;
                                    case 14:
                                        menu_2_display = Api.CommonFuncations.B2TechGNOrange.GetConfirmMenu(32, game_id, ussdString, odd_page, out selected_odd, out selected_bet_type_id, out selected_odd_name, out selected_odd_line, ref lines, ussd_session, MSISDN, service);
                                        break;
                                    case 15:
                                        menu_2_display = Api.CommonFuncations.B2TechGNOrange.GetConfirmMenu(35, game_id, ussdString, odd_page, out selected_odd, out selected_bet_type_id, out selected_odd_name, out selected_odd_line, ref lines, ussd_session, MSISDN, service);
                                        break;
                                }
                                break;
                            case 92: //FreeBet
                                bool placebet2 = false;
                                USSDBonus ub = null;
                                menu_2_display = Api.CommonFuncations.B2TechGNOrange.CheckFreeBet(ussd_session, MSISDN, out placebet2, out ub, ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                if (String.IsNullOrEmpty(menu_2_display) && placebet2)
                                {
                                    List<Int64> saved_ids3 = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, "_ogn", ref lines);
                                    if (saved_ids3 != null)
                                    {
                                        foreach (Int64 s in saved_ids3)
                                        {
                                            DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games_ogn set amount = " + ub.amount + " where id = " + s, "DBConnectionString_104", ref lines);
                                        }
                                    }

                                    bool req_for_order = Api.CommonFuncations.B2TechGNOrange.PlaceBet(ussd_session, ref lines);
                                    if (req_for_order == true)
                                    {
                                        //final placebet
                                        Int64 dya_id = Api.DataLayer.DBQueries.ExecuteQueryReturnInt64("insert into dya_transactions (msisdn, service_id, date_time, amount, result, result_desc, dya_method, transaction_id) values(" + MSISDN + "," + service.service_id + ",now()," + ub.amount + ",'02','USSD Bonus',2,'" + ussd_session.user_seesion_id + "')", ref lines);
                                        DYATransactions dya_trans = UpdateGetDYAReciveTrans(dya_id, "02", "USSD Bonus", ref lines);
                                        ExecuteOrderDetails barcode = null;
                                        string postBody = "", response_body = "";
                                        if (dya_trans.partner_transid.Contains("Rapidos_"))
                                        {
                                            barcode = CommonFuncations.B2TechGNOrange.PlaceBetRapidos(dya_trans, out postBody, out response_body, ref lines);
                                        }
                                        else
                                        {
                                            barcode = CommonFuncations.B2TechGNOrange.GetExecuteOrderNew(dya_trans, out postBody, out response_body, ref lines);
                                        }
                                        if (barcode != null)
                                        {
                                            double total_ratio = (Convert.ToDouble(barcode.max_payout) / Convert.ToDouble(barcode.amount));
                                            Api.DataLayer.DBQueries.ExecuteQuery("insert into ussd_bonus_bets (ussd_bonus_user_id, amount, odd, selections, barcode, payout_dya_id, date_time) values(" + ub.bonus_user_id + "," + ub.amount + "," + total_ratio + "," + saved_ids3.Count() + ",'" + barcode.barcode + "',0,now())", ref lines);
                                            string text_msg_ms = "Bonjour, votre bonus pari a ete place avec succes.\n";// + Environment.NewLine;
                                            text_msg_ms = text_msg_ms + "Numero de commande: " + barcode.order_number + "\n";// Environment.NewLine;
                                            text_msg_ms = text_msg_ms + "Code a barre: " + barcode.barcode + "\n";//Environment.NewLine;
                                            text_msg_ms = text_msg_ms + "Montant: " + barcode.amount + "\n";//Environment.NewLine;
                                            text_msg_ms = text_msg_ms + "Gain Maximum: " + barcode.max_payout;//Environment.NewLine;
                                            lines = Add2Log(lines, " total_bonus =  " + barcode.total_bonus, 100, lines[0].ControlerName);
                                            if (!String.IsNullOrEmpty(barcode.total_bonus))
                                            {
                                                text_msg_ms = text_msg_ms + "\nBonus: " + barcode.total_bonus;//Environment.NewLine;
                                            }
                                            //send sms
                                            LoginRequest LoginRequestBody = new LoginRequest()
                                            {
                                                ServiceID = service.service_id,
                                                Password = service.service_password
                                            };
                                            LoginResponse res = Login.DoLogin(LoginRequestBody);
                                            if (res != null)
                                            {
                                                if (res.ResultCode == 1000)
                                                {
                                                    string token_id = res.TokenID;
                                                    SendSMSRequest RequestSendSMSBody1 = new SendSMSRequest()
                                                    {
                                                        ServiceID = service.service_id,
                                                        MSISDN = Convert.ToInt64(MSISDN),
                                                        Text = text_msg_ms,
                                                        TokenID = token_id,
                                                        TransactionID = "12345"
                                                    };
                                                    SendSMSResponse response_sendsms1 = SendSMS.DoSMS(RequestSendSMSBody1);
                                                    if (response_sendsms1 != null)
                                                    {
                                                        if (response_sendsms1.ResultCode == 1010 || response_sendsms1.ResultCode == 1000)
                                                        {
                                                            lines = Add2Log(lines, " Send SMS Was OK", 100, lines[0].ControlerName);
                                                        }
                                                        else
                                                        {
                                                            lines = Add2Log(lines, " Send SMS Failed", 100, lines[0].ControlerName);
                                                        }
                                                    }
                                                    else
                                                    {
                                                        lines = Add2Log(lines, " Send SMS Failed", 100, lines[0].ControlerName);
                                                    }
                                                }
                                            }



                                        }

                                        menu_2_display = Api.CommonFuncations.B2TechGNOrange.GetUSSDBonusCloseBet(barcode, ref lines);
                                    }
                                }

                                break;
                        }
                        lines = Add2Log(lines, " page_number = " + page_number, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " game_id = " + game_id, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " odd_page = " + odd_page, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " selected_odd = " + selected_odd, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " amount = " + amount, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " selected_league_id = " + selected_league_id, 100, "ivr_subscribe");
                        result = menu_2_display; // USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, menu_2_display, msgType, opType);
                        DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id, selected_odd, selected_bet_type_id,selected_odd_name, selected_odd_line, amount, selected_league_id, amount_2_pay, bar_code, selected_subagent_name, rapidos_string) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + "," + status + ", '" + ussdString + "', " + ussd_menu.action_id + ", " + page_number + "," + odd_page + "," + game_id + "," + topic_id + ",'" + user_session_id + "'," + selected_odd + "," + selected_bet_type_id + ",'" + selected_odd_name + "','" + selected_odd_line + "', " + amount + "," + selected_league_id + "," + amount_2_pay + ",'" + bar_code + "','" + selected_subagent_name + "', '" + rapidos_string + "');", "DBConnectionString_104", ref lines);
                        break;
                }
            }

            if (result.Contains("Bienvenue a YellowBet!"))
            {
                result = iDoBetOrangeGuinea.AddLottoMenu(result, MSISDN, ref lines);
                result = iDoBetOrangeGuinea.AddFSMenu(result, MSISDN, ref lines);
                menu_2_display = result;
            }

            return result;
        }

        public static string LNBPariMTNBeninUSSDBehaviuer(ServiceClass service, string ussdString, string ServiceID, string MSISDN, string linkid, string receiveCB, string senderCB, string serviceCode, USSDMenu ussd_menu, USSDSession ussd_session, out DYAReceiveMoneyRequest momo_request, ref List<LogLines> lines, out string menu_2_display, out bool is_close, string force_session_id)
        {
            momo_request = null;
            menu_2_display = "";
            is_close = false;
            string result = "";
            force_session_id = (String.IsNullOrEmpty(force_session_id) ? Guid.NewGuid().ToString() : force_session_id);
            string user_session_id = (ussd_session == null ? force_session_id : ussd_session.user_seesion_id);
            int topic_id = (ussd_session != null ? ussd_session.topic_id : ussd_menu.topic_id);
            if (!String.IsNullOrEmpty(ussd_menu.menu_2_display))
            {
                menu_2_display = ussd_menu.menu_2_display;
                result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, ussd_menu.menu_2_display, "1", "1");
                DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + ",0, '" + ussdString + "', " + ussd_menu.action_id + ", " + (ussd_session == null ? 0 : ussd_session.page_number) + "," + (ussd_session == null ? 0 : ussd_session.odd_page) + "," + (ussd_session == null ? 0 : ussd_session.game_id) + "," + topic_id + ",'" + user_session_id + "');", "DBConnectionString_104", ref lines);
            }
            if (ussd_menu.action_id == 3) //close
            {
                menu_2_display = ussd_menu.menu_2_display;
                is_close = true;
                result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, menu_2_display, "2", "2");
                DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + ",1, '" + ussdString + "', " + ussd_menu.action_id + ", " + (ussd_session == null ? 0 : ussd_session.page_number) + "," + (ussd_session == null ? 0 : ussd_session.odd_page) + "," + (ussd_session == null ? 0 : ussd_session.game_id) + "," + topic_id + ",'" + user_session_id + "');", "DBConnectionString_104", ref lines);
            }
            

            


            
            if (String.IsNullOrEmpty(result))
            {
                switch (topic_id)
                {
                    case 8:
                        int page_number = (ussd_session != null ? ussd_session.page_number : 1);
                        int odd_page = (ussd_session != null ? ussd_session.odd_page : 0);
                        Int64 game_id = (ussd_session != null ? ussd_session.game_id : 0);
                        double selected_odd = (ussd_session != null ? ussd_session.selected_odd : 0);
                        int selected_bet_type_id = (ussd_session != null ? ussd_session.selected_bet_type_id : 0);
                        string rapidos_string = (ussd_session != null ? ussd_session.rapidos_string : "0");
                        string selected_odd_name = (ussd_session != null ? ussd_session.selected_odd_name : "0");
                        string selected_odd_line = (ussd_session != null ? ussd_session.selected_odd_line : "null");
                        string amount = (ussd_session != null ? ussd_session.amount : "0");
                        int selected_league_id = (ussd_session != null ? ussd_session.selected_league_id : 0);
                        string msgType = "1", opType = "1";
                        int status = 0;
                        string amount_2_pay = (ussd_session != null ? ussd_session.amount_2_pay.ToString() : "0");
                        string bar_code = (ussd_session != null ? ussd_session.bar_code : "0");
                        string selected_subagent_name = (ussd_session != null ? ussd_session.selected_subagent_name : "0");
                        IdoBetUser user = new IdoBetUser();
                        switch (ussd_menu.action_id)
                        {
                            case 75:
                            case 76:
                            case 77:
                                bool placebet1 = false;
                                double num3;
                                int max_bet = 0;
                                bool check_amount = double.TryParse(ussdString, out num3);
                                if (check_amount == true)
                                {
                                    switch (ussd_menu.action_id)
                                    {
                                        case 75:
                                            game_id = 52;
                                            max_bet = 20000;
                                            break;
                                        case 76:
                                            game_id = 53;
                                            max_bet = 4000;
                                            break;
                                        case 77:
                                            game_id = 54;
                                            max_bet = 200;
                                            break;
                                    }
                                    if (num3 >= 100 && num3 <= max_bet)
                                    {
                                        DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games_mtnbj (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + rapidos_string + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "'," + num3 + ", " + service.service_id + ")", "DBConnectionString_104", ref lines);
                                        placebet1 = true;
                                    }
                                    else
                                    {

                                        menu_2_display = Api.CommonFuncations.iDoBetLNBPariMTNBenin.GetWrongPriceBetRapidos(max_bet, ref lines);
                                        DataLayer.DBQueries.ExecuteQuery("delete from ussd_saved_games_mtnbj where user_session_id = '" + user_session_id + "' order by id desc limit 1", "DBConnectionString_104", ref lines);
                                    }
                                }
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                //RequestForOrder
                                //bool req_for_order = GetRequestForOrder(ussd_session, ref lines);
                                if (placebet1)
                                {

                                    menu_2_display = Api.CommonFuncations.iDoBetLNBPariMTNBenin.GetCloseBet(ussd_session, amount, ref lines);
                                    LoginRequest LoginRequestBody = new LoginRequest()
                                    {
                                        ServiceID = service.service_id,
                                        Password = service.service_password
                                    };
                                    LoginResponse res = Login.DoLogin(LoginRequestBody);
                                    if (res != null)
                                    {
                                        if (res.ResultCode == 1000)
                                        {
                                            string token_id = res.TokenID;
                                            momo_request = new DYAReceiveMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(ussdString),
                                                ServiceID = service.service_id,
                                                TokenID = token_id,
                                                TransactionID = "Rapidos_" + user_session_id
                                            };
                                        }
                                    }
                                }

                                break;

                            case 72: //Confirm Rapidos
                            case 73:
                            case 74:
                                String[] strlist = new string[] { };
                                bool validate_num = Api.CommonFuncations.iDoBetLNBPariMTNBenin.ValidateRapidosInput(ussdString, ussd_menu.action_id, out strlist, ref lines);
                                if (validate_num)
                                {
                                    menu_2_display = Api.CommonFuncations.iDoBetLNBPariMTNBenin.GetConfirmRapidosMenu(ussd_menu.action_id, ussdString, out game_id, ref lines);
                                    rapidos_string = ussdString;
                                }
                                else
                                {
                                    menu_2_display = Api.CommonFuncations.iDoBetLNBPariMTNBenin.WrongRapidosNumber();
                                }
                                break;

                            case 55://EnterAmountForSubAgent
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                Int64 pos_trans_id = 0;
                                menu_2_display = iDoBetLNBPariMTNBenin.GetAmountForSubAgentMenu(MSISDN, ussdString, selected_subagent_name, out pos_trans_id, ref lines);
                                if (pos_trans_id > 0)
                                {
                                    ServiceClass subscriber_service1 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                    LoginRequest LoginRequestBody = new LoginRequest()
                                    {
                                        ServiceID = subscriber_service1.service_id,
                                        Password = subscriber_service1.service_password
                                    };
                                    LoginResponse res = Login.DoLogin(LoginRequestBody);
                                    if (res != null)
                                    {
                                        if (res.ResultCode == 1000)
                                        {
                                            string token_id = res.TokenID;
                                            momo_request = new DYAReceiveMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(ussdString),
                                                ServiceID = ussd_menu.service_id,
                                                TokenID = token_id,
                                                TransactionID = "POSTrans_" + pos_trans_id

                                            };
                                        }
                                    }
                                }



                                break;
                            case 54:
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#"))
                                {
                                    page_number = page_number + 1;
                                }
                                if (ussdString.Contains("*") && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = iDoBetLNBPariMTNBenin.GetSlectedSubAgentMenu(MSISDN, page_number, ussdString, out selected_subagent_name, ref lines);
                                break;
                            case 53:
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#"))
                                {
                                    page_number = page_number + 1;
                                }
                                if (ussdString.Contains("*") && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = iDoBetLNBPariMTNBenin.GetAgentMainMenu(MSISDN, page_number, ref lines);
                                break;

                            case 80: //Foot Solider Check MSISDN and ask to enter full name 
                                is_close = true;
                                menu_2_display = Api.CommonFuncations.iDoBetLNBPariMTNBenin.GetFootSoldiersMSISDNMenu(MSISDN, ussdString, out is_close, service, ref lines);
                                if (is_close)
                                {
                                    msgType = "2";
                                    opType = "2";
                                }
                                else
                                {
                                    Api.DataLayer.DBQueries.ExecuteQuery("insert into ussd_footsoldiers_attempts (user_session_id, footsoldier_msisdn, user_msisdn, full_name, user_id, date_time) values('" + user_session_id + "', " + MSISDN + ", 229" + ussdString + ", '', 0, now())", ref lines);
                                }
                                break;
                            case 79: //Foot Soldier create user
                                is_close = true;
                                Int64 user_msisdn = Api.DataLayer.DBQueries.SelectQueryReturnInt64("SELECT u.user_msisdn from ussd_footsoldiers_attempts u WHERE u.user_session_id = '" + user_session_id + "' order by u.id desc limit 1", ref lines);
                                if (user_msisdn > 0)
                                {
                                    Api.CommonFuncations.iDoBetLNBPariMTNBenin.CreateUserResponse create_user = new Api.CommonFuncations.iDoBetLNBPariMTNBenin.CreateUserResponse();
                                    menu_2_display = Api.CommonFuncations.iDoBetLNBPariMTNBenin.GetFootSoldiersFullNameMenu(MSISDN, ussdString, out is_close, ussd_menu, user_msisdn.ToString(), out create_user, ref lines);
                                    if (is_close)
                                    {
                                        LoginRequest LoginRequestBody = new LoginRequest()
                                        {
                                            ServiceID = service.service_id,
                                            Password = service.service_password
                                        };
                                        LoginResponse res = Login.DoLogin(LoginRequestBody);
                                        if (res != null)
                                        {
                                            if (res.ResultCode == 1000)
                                            {

                                                Int64 rec_id = Api.DataLayer.DBQueries.SelectQueryReturnInt64("SELECT u.id from ussd_footsoldiers_attempts u WHERE u.user_session_id = '" + user_session_id + "' order by u.id desc limit 1", ref lines);
                                                Api.DataLayer.DBQueries.ExecuteQuery("update ussd_footsoldiers_attempts set user_id = " + create_user.userId + ", full_name = '" + ussdString + "' where id = " + rec_id, ref lines);
                                                string token_id = res.TokenID;
                                                string sms_text = "Felicitations, vous vous etes inscrit avec succes sur LNBPari. https://m.lnbpari.com/#/login Mot de passe: " + create_user.password;
                                                Api.DataLayer.DBQueries.ExecuteQuery("insert into foot_soldiers_sms (date_time, msisdn, service_id, sms_text) values(now(), " + user_msisdn + "," + service.service_id + ",'" + sms_text + "');", ref lines);
                                                SendSMSRequest RequestSendSMSBody1 = new SendSMSRequest()
                                                {
                                                    ServiceID = service.service_id,
                                                    MSISDN = user_msisdn,
                                                    Text = sms_text,
                                                    TokenID = token_id,
                                                    TransactionID = "12345"
                                                };
                                                SendSMSResponse response_sendsms1 = SendSMS.DoSMS(RequestSendSMSBody1);
                                                if (response_sendsms1 != null)
                                                {
                                                    if (response_sendsms1.ResultCode == 1010 || response_sendsms1.ResultCode == 1000)
                                                    {
                                                        lines = Add2Log(lines, " Send SMS Was OK", 100, lines[0].ControlerName);
                                                    }
                                                    else
                                                    {
                                                        lines = Add2Log(lines, " Send SMS Failed", 100, lines[0].ControlerName);
                                                    }
                                                }
                                                else
                                                {
                                                    lines = Add2Log(lines, " Send SMS Failed", 100, lines[0].ControlerName);
                                                }
                                            }
                                        }
                                    }
                                }
                                else
                                {
                                    is_close = false;
                                    menu_2_display = "Error 78_2" + Environment.NewLine;
                                    menu_2_display = menu_2_display + Environment.NewLine + "M) ";// Menu Principal ";

                                }
                                break;
                            case 78: //Foot Soldier Main Menu asking to enter MSISDN
                                menu_2_display = Api.CommonFuncations.iDoBetLNBPariMTNBenin.GetFootSoldierMainMenu(MSISDN, ref lines);
                                break;

                            case 88:
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#"))
                                {
                                    page_number = page_number + 1;
                                }
                                if (ussdString.Contains("*") && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = iDoBetLNBPariMTNBenin.GetKironAgentMainMenu(MSISDN, page_number, ref lines);
                                break;
                            case 89://EnterAmountForSubAgent
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                Int64 pos_trans_id1 = 0;
                                menu_2_display = iDoBetLNBPariMTNBenin.GetAmountForKironAgentMenu(MSISDN, ussdString, "", out pos_trans_id1, ref lines);
                                if (pos_trans_id1 > 0)
                                {
                                    ServiceClass subscriber_service1 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                    LoginRequest LoginRequestBody = new LoginRequest()
                                    {
                                        ServiceID = subscriber_service1.service_id,
                                        Password = subscriber_service1.service_password
                                    };
                                    LoginResponse res = Login.DoLogin(LoginRequestBody);
                                    if (res != null)
                                    {
                                        if (res.ResultCode == 1000)
                                        {
                                            string token_id = res.TokenID;
                                            momo_request = new DYAReceiveMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(ussdString),
                                                ServiceID = ussd_menu.service_id,
                                                TokenID = token_id,
                                                TransactionID = "KironTrans_" + pos_trans_id1
                                            };
                                        }
                                    }
                                }
                                break;
                            case 34: //DepositMoney
                                user = iDoBetLNBPariMTNBenin.SearchUserNew(MSISDN, ref lines);
                                menu_2_display = iDoBetLNBPariMTNBenin.GetDepositMoneyMenu(user, ussd_menu, MSISDN, ref lines);
                                break;
                            case 36: //StartDepositMoney
                                user = iDoBetLNBPariMTNBenin.SearchUserNew(MSISDN, ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                menu_2_display = iDoBetLNBPariMTNBenin.GetStartDepositMoneyMenu(service, user, ussd_menu, MSISDN, ussdString, out momo_request, ref lines);
                                break;
                            case 33: //WithdrawMoney
                                user = iDoBetLNBPariMTNBenin.SearchUserNew(MSISDN, ref lines);
                                menu_2_display = iDoBetLNBPariMTNBenin.GetWithdrawMoneyMenu(user, ref lines);
                                break;
                            case 35: //StartWithdrawMoney
                                user = iDoBetLNBPariMTNBenin.SearchUserNew(MSISDN, ref lines);
                                menu_2_display = iDoBetLNBPariMTNBenin.GetStartWithdrawMoneyMenu(user, false, false, false, ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                double withdrawAmount = Convert.ToDouble(ussdString);

                                if (user.isValid && withdrawAmount > 0 && withdrawAmount <= user.AvailableForWithdraw)
                                {
                                    menu_2_display = iDoBetLNBPariMTNBenin.CheckBeforeWithdrawMenu(service, MSISDN, ref lines);
                                    if (String.IsNullOrEmpty(menu_2_display))
                                    {
                                        //Refund user
                                        ServiceClass subscriber_service1 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                        LoginRequest LoginRequestBody1 = new LoginRequest()
                                        {
                                            ServiceID = service.service_id,
                                            Password = service.service_password
                                        };
                                        LoginResponse res1 = Login.DoLogin(LoginRequestBody1);
                                        if (res1 != null)
                                        {
                                            if (res1.ResultCode == 1000)
                                            {
                                                string token_id = res1.TokenID;
                                                DYATransferMoneyRequest momotransfer_request = new DYATransferMoneyRequest()
                                                {
                                                    MSISDN = Convert.ToInt64(MSISDN),
                                                    Amount = Convert.ToInt32(ussdString),
                                                    ServiceID = service.service_id,
                                                    TokenID = token_id,
                                                    TransactionID = "USSDWithdraw_" + Guid.NewGuid().ToString()
                                                };
                                                string postBody = "", response_body = "";
                                                //bool wd_result = StartWithdraw(user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                bool do_withdraw = false;
                                                string code = iDoBetLNBPariMTNBenin.StartWithdrawNew(user, MSISDN, withdrawAmount, out postBody, out response_body, ref lines);
                                               
                                                menu_2_display = iDoBetLNBPariMTNBenin.GetStartWithdrawMoneyMenu(user, true, true, false, ref lines);

                                                if (code == "")
                                                {
                                                    if (do_withdraw)
                                                    {
                                                        string mail_body = "<p><h2>Start Withdraw has failed</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>Json: </b>" + postBody + "<br><b>Response: </b>" + response_body + "<br></p>";
                                                        string mail_subject = "Start Withdraw has failed for user - " + user.id;
                                                        string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                        string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                        string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                        string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                        int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                        string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                        CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                                    }

                                                }
                                                else
                                                {
                                                    DYATransferMoneyResponse momotransfer_response = CommonFuncations.DYATransferMoney.DoTransfer(momotransfer_request);
                                                    if (momotransfer_response.ResultCode == 1000)
                                                    {
                                                        postBody = "";
                                                        response_body = "";
                                                        bool end_withdraw = iDoBetLNBPariMTNBenin.EndWithdrawNew(momotransfer_response.Timestamp, momotransfer_response.TransactionID, true, code, user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                        if (!end_withdraw)
                                                        {
                                                            string mail_body = "", mail_subject = "";
                                                            mail_body = "<p><h2>End Withdraw has failed but DYATransfer was ok</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>Request: </b>" + postBody + "<br>Response: " + response_body + "<br></p>";
                                                            mail_subject = "End Withdraw has failed but DYATransfer was ok - " + user.id;
                                                            string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                            string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                            string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                            string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                            int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                            string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                            CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                                        }
                                                        GoogleAnalytics.SendData2GoogleAnalytics("UA-135957841-1", "ussd", Base64.Reverse(MSISDN), System.Web.HttpContext.Current.Request.ServerVariables["REMOTE_ADDR"], "BJ", "event", "Withdraw", "MOMO", "-" + ussdString, "/", ref lines);
                                                    }
                                                    else
                                                    {

                                                        postBody = "";
                                                        response_body = "";
                                                        bool end_withdraw = iDoBetLNBPariMTNBenin.EndWithdrawNew(momotransfer_response.Timestamp, momotransfer_response.TransactionID, false, code, user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                        string mail_body = "", mail_subject = "";
                                                        mail_body = "<p><h2>Withdraw has failed DYATransfer</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>MOMO Response: </b>" + momotransfer_response.ResultCode + " " + momotransfer_response.Description + "<br>User was refunded: " + end_withdraw + "<br><b>Request: </b>" + postBody + "<br><b>Response: </b>" + response_body + "</p>";
                                                        mail_subject = "Withdraw has failed DYATransfer for user - " + user.id;
                                                        string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                        string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                        string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                        string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                        int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                        string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                        CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                                    }
                                                }



                                            }
                                        }
                                    }


                                }
                                else
                                {
                                    //user has requested more than allowed
                                    menu_2_display = iDoBetLNBPariMTNBenin.GetStartWithdrawMoneyMenu(user, false, false, true, ref lines);
                                }
                                break;
                            case 25://CloseXXXBet
                            case 26:
                            case 27:
                                List<Int64> saved_ids = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, "_mtnbj", ref lines);
                                if (saved_ids != null)
                                {
                                    string mysaved_id = "";
                                    foreach (Int64 s in saved_ids)
                                    {
                                        mysaved_id = mysaved_id + s + ",";

                                    }
                                    if (!String.IsNullOrEmpty(mysaved_id))
                                    {
                                        mysaved_id = mysaved_id.Substring(0, mysaved_id.Length - 1);
                                        DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games_mtnbj set amount = " + amount + " where id in (" + mysaved_id + ")", "DBConnectionString_104", ref lines);
                                    }
                                    //foreach (Int64 s in saved_ids)
                                    //{
                                    //    DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set amount = " + amount + " where id = " + s, ref lines);
                                    //}
                                }
                                //DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set amount = " + amount + " where user_session_id = '" + user_session_id + "'", ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                //RequestForOrder
                                //bool req_for_order = GetRequestForOrder(ussd_session, ref lines);
                                bool req_for_order = iDoBetLNBPariMTNBenin.PlaceBet(ussd_session, ref lines);

                                if (req_for_order == true)
                                {
                                    menu_2_display = iDoBetLNBPariMTNBenin.GetCloseBet(ussd_session, amount, ref lines);
                                    ServiceClass subscriber_service2 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                    LoginRequest LoginRequestBody = new LoginRequest()
                                    {
                                        ServiceID = subscriber_service2.service_id,
                                        Password = subscriber_service2.service_password
                                    };
                                    LoginResponse res = Login.DoLogin(LoginRequestBody);
                                    if (res != null)
                                    {
                                        if (res.ResultCode == 1000)
                                        {
                                            string token_id = res.TokenID;
                                            momo_request = new DYAReceiveMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(amount),
                                                ServiceID = ussd_menu.service_id,
                                                TokenID = token_id,
                                                TransactionID = user_session_id

                                            };
                                        }
                                    }
                                }
                                else
                                {
                                    menu_2_display = iDoBetLNBPariMTNBenin.GetCloseBetFailed(ref lines);
                                }
                                break;
                            case 22: //ConfirmBetXXX
                            case 23:
                            case 24:
                                amount = ussdString;
                                double num1;
                                bool res_parse = double.TryParse(amount, out num1);
                                if (res_parse == true)
                                {
                                    if (num1 >= 200 && num1 <= 1000000)
                                    {
                                        menu_2_display = iDoBetLNBPariMTNBenin.GetConfirmBet(ussd_session, amount, ref lines);
                                    }
                                    else
                                    {

                                        menu_2_display = iDoBetLNBPariMTNBenin.GetWrongPriceBetMeny(ref lines);
                                        DataLayer.DBQueries.ExecuteQuery("delete from ussd_saved_games_mtnbj where user_session_id = '" + user_session_id + "' order by id desc limit 1", "DBConnectionString_104", ref lines);
                                    }
                                }
                                odd_page = 0;

                                break;
                            case 19: //PayAndConfirmXXX
                            case 20:
                            case 21:
                                //need to check if user clicks back and then returns to this section.
                                DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games_mtnbj (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + ussdString + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',0, "+service.service_id+")", "DBConnectionString_104", ref lines);
                                menu_2_display = iDoBetLNBPariMTNBenin.GetPayAndConfirm(ussd_session, ref lines);
                                odd_page = 0;
                                break;
                            case 32: //ticket status
                                page_number = (page_number == 0 ? 1 : page_number);
                                menu_2_display = iDoBetLNBPariMTNBenin.GetCheckTicketMenu(MSISDN, page_number, ussdString, ref lines);
                                break;
                            case 31: //tickets status by phone
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#"))
                                {
                                    page_number = page_number + 1;
                                }
                                if (ussdString.Contains("*") && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = iDoBetLNBPariMTNBenin.GetCheckTicketsMenu(MSISDN, page_number, ref lines);
                                break;
                            case 52:
                                menu_2_display = iDoBetLNBPariMTNBenin.GetPayoutBarcodeTicket(ussd_menu, MSISDN, ref lines);
                                if (String.IsNullOrEmpty(menu_2_display))
                                {
                                    msgType = "2";
                                    opType = "2";
                                    is_close = true;
                                    //Refund user
                                    ServiceClass subscriber_service2 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                    LoginRequest LoginRequestBody2 = new LoginRequest()
                                    {
                                        ServiceID = service.service_id,
                                        Password = service.service_password
                                    };
                                    LoginResponse res2 = Login.DoLogin(LoginRequestBody2);
                                    if (res2 != null)
                                    {
                                        if (res2.ResultCode == 1000 && Convert.ToInt32(amount_2_pay) > 0)
                                        {
                                            string token_id = res2.TokenID;
                                            DYATransferMoneyRequest momotransfer_request = new DYATransferMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(amount_2_pay),
                                                ServiceID = service.service_id,
                                                TokenID = token_id,
                                                TransactionID = "POSTicketPayout_" + bar_code
                                            };
                                            DYATransferMoneyResponse momotransfer_response = CommonFuncations.DYATransferMoney.DoTransfer(momotransfer_request);

                                            if (momotransfer_response.ResultCode == 1000)
                                            {
                                                int cashier_id = iDoBetLNBPariMTNBenin.GetCashierID(MSISDN, ref lines);
                                                if (cashier_id > 0)
                                                {
                                                    DataLayer.DBQueries.ExecuteQuery("insert into casheir_transactions (cashier_id, bar_code, total_payout, date_time, dya_id) values(" + cashier_id + ", '" + bar_code + "', " + amount_2_pay + ", now()," + momotransfer_response.TransactionID + ");", ref lines);
                                                }
                                                GoogleAnalytics.SendData2GoogleAnalytics("UA-135957841-1", "ussd", Base64.Reverse(MSISDN), System.Web.HttpContext.Current.Request.ServerVariables["REMOTE_ADDR"], "BJ", "event", "PyoutPOSTicket", "MOMO", "-" + ussdString, "/", ref lines);
                                                //dopayout
                                                bool dopayout_res = iDoBet.DoPayOutNew(momotransfer_response.Timestamp, momotransfer_response.TransactionID, bar_code, ref lines);
                                                //bool dopayout_res = iDoBet.DoPayout(bar_code, ref lines);
                                                menu_2_display = "Félicitations, le billet a été remboursé sur votre compte MOMO.";

                                            }
                                            else
                                            {
                                                menu_2_display = "Le billet n'a pas été remboursé sur votre compte MOMO." + Environment.NewLine;
                                                menu_2_display = menu_2_display + "Veuillez réessayer";
                                                string mail_body = "<p><h2>Payout has failed DYATransfer</h2><b>barCode:</b> " + bar_code + "<br><b>Amount: </b>" + amount_2_pay + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>MOMO Response: </b>" + momotransfer_response.ResultCode + " " + momotransfer_response.Description + "<br></p>";
                                                string mail_subject = "POS Ticlet Payout has failed DYATransfer for user - " + bar_code;
                                                string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                            }
                                        }
                                        else
                                        {
                                            menu_2_display = "option invalide" + Environment.NewLine;
                                            menu_2_display = menu_2_display + "Veuillez réessayer";
                                        }
                                    }
                                }

                                break;
                            case 44: //search ticket
                                menu_2_display = iDoBetLNBPariMTNBenin.GetCheckTicketByBarcodeMenu(MSISDN, ussdString, out amount_2_pay, ref lines);
                                bar_code = ussdString;
                                break;
                            case 39: //add another game
                                if (game_id > 0)
                                {
                                    DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games_mtnbj (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + ussdString + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',0, "+service.service_id+")", "DBConnectionString_104", ref lines);
                                    game_id = 0;
                                    selected_odd = 0;
                                    page_number = 1;
                                    odd_page = 0;
                                }
                                menu_2_display = iDoBetLNBPariMTNBenin.GetSportsTypeMenu(ref lines);
                                break;
                            case 41: //Delete and Start Over
                                List<Int64> saved_ids1 = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, "_mtnbj", ref lines);
                                if (saved_ids1 != null)
                                {
                                    string mysaved_id = "";
                                    foreach (Int64 s in saved_ids1)
                                    {
                                        mysaved_id = mysaved_id + s + ",";

                                    }
                                    if (!String.IsNullOrEmpty(mysaved_id))
                                    {
                                        mysaved_id = mysaved_id.Substring(0, mysaved_id.Length - 1);
                                        DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games_mtnbj set status = 3 where id in (" + mysaved_id + ")", "DBConnectionString_104", ref lines);
                                    }

                                    //foreach (Int64 s in saved_ids1)
                                    //{
                                    //    DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set status = 3 where id = " + s, ref lines);
                                    //}
                                }

                                //DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set status = 3 where user_seesion_id = '" + user_session_id + "'", ref lines);
                                game_id = 0;
                                odd_page = 0;
                                selected_odd = 0;
                                page_number = 1;
                                menu_2_display = iDoBetLNBPariMTNBenin.GetSportsTypeMenu(ref lines);
                                ussd_menu.action_id = 2;
                                break;
                            case 48:
                                menu_2_display = iDoBetLNBPariMTNBenin.GetSoccerLeagueMenu(35, "0", ussd_menu.ussd_id, ref lines, out selected_league_id);
                                break;
                            case 47:
                                menu_2_display = iDoBetLNBPariMTNBenin.GetSoccerLeagueMenu(32, "0", ussd_menu.ussd_id, ref lines, out selected_league_id);
                                break;
                            case 37: //display soccer leagu
                                menu_2_display = iDoBetLNBPariMTNBenin.GetSoccerLeagueMenu(31, "0", ussd_menu.ussd_id, ref lines, out selected_league_id);
                                break;
                            case 49:
                            case 50:
                            case 38://selected league
                            case 28://Start Over
                            case 29:
                            case 30:
                            case 16://AddXXXGame or 
                            case 17:
                            case 18:
                            case 7: //DisplayXXXTopEvents   
                            case 8:
                            case 9:
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#"))
                                {
                                    page_number = page_number + 1;
                                }
                                if (ussdString.Contains("*") && page_number > 0)
                                {
                                    page_number = page_number - 1;
                                }
                                if (ussd_menu.action_id == 28 || ussd_menu.action_id == 29 || ussd_menu.action_id == 30)
                                {
                                    List<Int64> saved_ids2 = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, "_mtnbj", ref lines);
                                    if (saved_ids2 != null)
                                    {
                                        string mysaved_id = "";
                                        foreach (Int64 s in saved_ids2)
                                        {
                                            mysaved_id = mysaved_id + s + ",";

                                        }
                                        if (!String.IsNullOrEmpty(mysaved_id))
                                        {
                                            mysaved_id = mysaved_id.Substring(0, mysaved_id.Length - 1);
                                            DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games_mtnbj set status = 3 where id in (" + mysaved_id + ")", "DBConnectionString_104", ref lines);
                                        }

                                        //foreach (Int64 s in saved_ids2)
                                        //{
                                        //    DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set status = 3 where id = " + s, ref lines);
                                        //}
                                    }
                                    //DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set status = 3 where user_seesion_id = '"+user_session_id+"'", ref lines);
                                    game_id = 0;
                                    selected_odd = 0;
                                    odd_page = 0;
                                    page_number = 1;

                                }
                                if (ussd_menu.action_id == 16 || ussd_menu.action_id == 17 || ussd_menu.action_id == 18)
                                {
                                    if (game_id > 0)
                                    {
                                        DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games_mtnbj (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + ussdString + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',0,"+service.service_id+")", "DBConnectionString_104", ref lines);
                                        game_id = 0;
                                        selected_odd = 0;
                                        page_number = 1;
                                        odd_page = 0;
                                    }

                                }
                                switch (ussd_menu.action_id)
                                {
                                    case 38:
                                        menu_2_display = iDoBetLNBPariMTNBenin.GetEventsMenu(ussdString, 31, page_number, ref lines, out selected_league_id, selected_league_id, ussd_menu);
                                        break;
                                    case 49:
                                        menu_2_display = iDoBetLNBPariMTNBenin.GetEventsMenu(ussdString, 32, page_number, ref lines, out selected_league_id, selected_league_id, ussd_menu);
                                        break;
                                    case 50:
                                        menu_2_display = iDoBetLNBPariMTNBenin.GetEventsMenu(ussdString, 35, page_number, ref lines, out selected_league_id, selected_league_id, ussd_menu);
                                        break;
                                    case 28:
                                    case 16:
                                    case 7:
                                        menu_2_display = iDoBetLNBPariMTNBenin.GetEventsMenu(31, page_number, ref lines);
                                        break;
                                    case 29:
                                    case 17:
                                    case 8:
                                        menu_2_display = iDoBetLNBPariMTNBenin.GetEventsMenu(32, page_number, ref lines);
                                        break;
                                    case 30:
                                    case 18:
                                    case 9:
                                        menu_2_display = iDoBetLNBPariMTNBenin.GetEventsMenu(35, page_number, ref lines);
                                        break;
                                }


                                break;
                            case 10: //DisplayXXXGame
                            case 11:
                            case 12:
                                page_number = (page_number == 0 ? 1 : page_number);
                                selected_odd = 0;
                                if (ussdString.Contains("#"))
                                {
                                    odd_page = odd_page + 1;
                                }
                                if (ussdString.Contains("*") && odd_page > 0)
                                {
                                    odd_page = odd_page - 1;
                                }
                                switch (ussd_menu.action_id)
                                {
                                    case 10:
                                        menu_2_display = iDoBetLNBPariMTNBenin.GetGameOddsMenu(31, page_number, ussdString, game_id, odd_page, out game_id, selected_league_id, ref lines);
                                        break;
                                    case 11:
                                        menu_2_display = iDoBetLNBPariMTNBenin.GetGameOddsMenu(32, page_number, ussdString, game_id, odd_page, out game_id, selected_league_id, ref lines);
                                        break;
                                    case 12:
                                        menu_2_display = iDoBetLNBPariMTNBenin.GetGameOddsMenu(35, page_number, ussdString, game_id, odd_page, out game_id, selected_league_id, ref lines);
                                        break;
                                }
                                break;
                            case 13: //ConfirmXXXGame (select odd)
                            case 14:
                            case 15:
                                switch (ussd_menu.action_id)
                                {
                                    case 13:
                                        menu_2_display = iDoBetLNBPariMTNBenin.GetConfirmMenu(31, game_id, ussdString, odd_page, out selected_odd, out selected_bet_type_id, out selected_odd_name, out selected_odd_line, ref lines);
                                        break;
                                    case 14:
                                        menu_2_display = iDoBetLNBPariMTNBenin.GetConfirmMenu(32, game_id, ussdString, odd_page, out selected_odd, out selected_bet_type_id, out selected_odd_name, out selected_odd_line, ref lines);
                                        break;
                                    case 15:
                                        menu_2_display = iDoBetLNBPariMTNBenin.GetConfirmMenu(35, game_id, ussdString, odd_page, out selected_odd, out selected_bet_type_id, out selected_odd_name, out selected_odd_line, ref lines);
                                        break;
                                }
                                break;
                        }
                        lines = Add2Log(lines, " page_number = " + page_number, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " game_id = " + game_id, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " odd_page = " + odd_page, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " selected_odd = " + selected_odd, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " amount = " + amount, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " selected_league_id = " + selected_league_id, 100, "ivr_subscribe");
                        result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, menu_2_display, msgType, opType);
                        DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id, selected_odd, selected_bet_type_id,selected_odd_name, selected_odd_line, amount, selected_league_id, amount_2_pay, bar_code, selected_subagent_name, rapidos_string) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + "," + status + ", '" + ussdString + "', " + ussd_menu.action_id + ", " + page_number + "," + odd_page + "," + game_id + "," + topic_id + ",'" + user_session_id + "'," + selected_odd + "," + selected_bet_type_id + ",'" + selected_odd_name + "','" + selected_odd_line + "', " + amount + "," + selected_league_id + "," + amount_2_pay + ",'" + bar_code + "','" + selected_subagent_name + "','"+ rapidos_string + "');", "DBConnectionString_104", ref lines);
                        break;
                }
            }

            return result;
        }

        public static string LNBPariMTNBeninUSSDBehaviuerV142(ServiceClass service, string ussdString, string ServiceID, string MSISDN, string linkid, string receiveCB, string senderCB, string serviceCode, USSDMenu ussd_menu, USSDSession ussd_session, out DYAReceiveMoneyRequest momo_request, ref List<LogLines> lines, out string menu_2_display, out bool is_close, string force_session_id)
        {
            momo_request = null;
            menu_2_display = "";
            is_close = false;
            string result = "";
            force_session_id = (String.IsNullOrEmpty(force_session_id) ? Guid.NewGuid().ToString() : force_session_id);
            string user_session_id = (ussd_session == null ? force_session_id : ussd_session.user_seesion_id);
            int topic_id = (ussd_session != null ? ussd_session.topic_id : ussd_menu.topic_id);
            if (!String.IsNullOrEmpty(ussd_menu.menu_2_display))
            {
                menu_2_display = ussd_menu.menu_2_display;
                result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, ussd_menu.menu_2_display, "1", "1");
                DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + ",0, '" + ussdString + "', " + ussd_menu.action_id + ", " + (ussd_session == null ? 0 : ussd_session.page_number) + "," + (ussd_session == null ? 0 : ussd_session.odd_page) + "," + (ussd_session == null ? 0 : ussd_session.game_id) + "," + topic_id + ",'" + user_session_id + "');", "DBConnectionString_104", ref lines);
            }
            if (ussd_menu.action_id == 3) //close
            {
                menu_2_display = ussd_menu.menu_2_display;
                is_close = true;
                result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, menu_2_display, "2", "2");
                DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + ",1, '" + ussdString + "', " + ussd_menu.action_id + ", " + (ussd_session == null ? 0 : ussd_session.page_number) + "," + (ussd_session == null ? 0 : ussd_session.odd_page) + "," + (ussd_session == null ? 0 : ussd_session.game_id) + "," + topic_id + ",'" + user_session_id + "');", "DBConnectionString_104", ref lines);
            }






            if (String.IsNullOrEmpty(result))
            {
                switch (topic_id)
                {
                    case 8:
                        int page_number = (ussd_session != null ? ussd_session.page_number : 1);
                        int odd_page = (ussd_session != null ? ussd_session.odd_page : 0);
                        Int64 game_id = (ussd_session != null ? ussd_session.game_id : 0);
                        double selected_odd = (ussd_session != null ? ussd_session.selected_odd : 0);
                        int selected_bet_type_id = (ussd_session != null ? ussd_session.selected_bet_type_id : 0);
                        string rapidos_string = (ussd_session != null ? ussd_session.rapidos_string : "0");
                        string selected_odd_name = (ussd_session != null ? ussd_session.selected_odd_name : "0");
                        string selected_odd_line = (ussd_session != null ? ussd_session.selected_odd_line : "null");
                        string amount = (ussd_session != null ? ussd_session.amount : "0");
                        int selected_league_id = (ussd_session != null ? ussd_session.selected_league_id : 0);
                        string msgType = "1", opType = "1";
                        int status = 0;
                        string amount_2_pay = (ussd_session != null ? ussd_session.amount_2_pay.ToString() : "0");
                        string bar_code = (ussd_session != null ? ussd_session.bar_code : "0");
                        string selected_subagent_name = (ussd_session != null ? ussd_session.selected_subagent_name : "0");
                        IdoBetUser user = new IdoBetUser();
                        switch (ussd_menu.action_id)
                        {
                            case 75:
                            case 76:
                            case 77:
                                bool placebet1 = false;
                                double num3;
                                int max_bet = 0;
                                bool check_amount = double.TryParse(ussdString, out num3);
                                if (check_amount == true)
                                {
                                    switch (ussd_menu.action_id)
                                    {
                                        case 75:
                                            game_id = 52;
                                            max_bet = 20000;
                                            break;
                                        case 76:
                                            game_id = 53;
                                            max_bet = 4000;
                                            break;
                                        case 77:
                                            game_id = 54;
                                            max_bet = 200;
                                            break;
                                    }
                                    if (num3 >= 100 && num3 <= max_bet)
                                    {
                                        DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games_mtnbj (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + rapidos_string + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "'," + num3 + ", " + service.service_id + ")", "DBConnectionString_104", ref lines);
                                        placebet1 = true;
                                    }
                                    else
                                    {

                                        menu_2_display = Api.CommonFuncations.B2TechLNBMTN.GetWrongPriceBetRapidos(max_bet, ref lines);
                                        DataLayer.DBQueries.ExecuteQuery("delete from ussd_saved_games_mtnbj where user_session_id = '" + user_session_id + "' order by id desc limit 1", "DBConnectionString_104", ref lines);
                                    }
                                }
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                //RequestForOrder
                                //bool req_for_order = GetRequestForOrder(ussd_session, ref lines);
                                if (placebet1)
                                {

                                    menu_2_display = Api.CommonFuncations.B2TechLNBMTN.GetCloseBet(ussd_session, amount, ref lines);
                                    LoginRequest LoginRequestBody = new LoginRequest()
                                    {
                                        ServiceID = service.service_id,
                                        Password = service.service_password
                                    };
                                    LoginResponse res = Login.DoLogin(LoginRequestBody);
                                    if (res != null)
                                    {
                                        if (res.ResultCode == 1000)
                                        {
                                            string token_id = res.TokenID;
                                            momo_request = new DYAReceiveMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(ussdString),
                                                ServiceID = service.service_id,
                                                TokenID = token_id,
                                                TransactionID = "Rapidos_" + user_session_id
                                            };
                                        }
                                    }
                                }

                                break;

                            case 72: //Confirm Rapidos
                            case 73:
                            case 74:
                                String[] strlist = new string[] { };
                                bool validate_num = Api.CommonFuncations.B2TechLNBMTN.ValidateRapidosInput(ussdString, ussd_menu.action_id, out strlist, ref lines);
                                if (validate_num)
                                {
                                    menu_2_display = Api.CommonFuncations.B2TechLNBMTN.GetConfirmRapidosMenu(ussd_menu.action_id, ussdString, out game_id, ref lines);
                                    rapidos_string = ussdString;
                                }
                                else
                                {
                                    menu_2_display = Api.CommonFuncations.B2TechLNBMTN.WrongRapidosNumber();
                                }
                                break;

                            case 55://EnterAmountForSubAgent
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                Int64 pos_trans_id = 0;
                                menu_2_display = B2TechLNBMTN.GetAmountForSubAgentMenu(MSISDN, ussdString, selected_subagent_name, out pos_trans_id, ref lines);
                                if (pos_trans_id > 0)
                                {
                                    ServiceClass subscriber_service1 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                    LoginRequest LoginRequestBody = new LoginRequest()
                                    {
                                        ServiceID = subscriber_service1.service_id,
                                        Password = subscriber_service1.service_password
                                    };
                                    LoginResponse res = Login.DoLogin(LoginRequestBody);
                                    if (res != null)
                                    {
                                        if (res.ResultCode == 1000)
                                        {
                                            string token_id = res.TokenID;
                                            momo_request = new DYAReceiveMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(ussdString),
                                                ServiceID = ussd_menu.service_id,
                                                TokenID = token_id,
                                                TransactionID = "POSTrans_" + pos_trans_id

                                            };
                                        }
                                    }
                                }



                                break;
                            case 54:
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#"))
                                {
                                    page_number = page_number + 1;
                                }
                                if (ussdString.Contains("*") && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = B2TechLNBMTN.GetSlectedSubAgentMenu(MSISDN, page_number, ussdString, out selected_subagent_name, ref lines);
                                break;
                            case 53:
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#"))
                                {
                                    page_number = page_number + 1;
                                }
                                if (ussdString.Contains("*") && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = B2TechLNBMTN.GetAgentMainMenu(MSISDN, page_number, ref lines);
                                break;

                            case 80: //Foot Solider Check MSISDN and ask to enter full name 
                                is_close = true;
                                menu_2_display = Api.CommonFuncations.B2TechLNBMTN.GetFootSoldiersMSISDNMenu(MSISDN, ussdString, out is_close, service, ref lines);
                                if (is_close)
                                {
                                    msgType = "2";
                                    opType = "2";
                                }
                                else
                                {
                                    Api.DataLayer.DBQueries.ExecuteQuery("insert into ussd_footsoldiers_attempts (user_session_id, footsoldier_msisdn, user_msisdn, full_name, user_id, date_time) values('" + user_session_id + "', " + MSISDN + ", 229" + ussdString + ", '', 0, now())", ref lines);
                                }
                                break;
                            case 79: //Foot Soldier create user
                                is_close = true;
                                Int64 user_msisdn = Api.DataLayer.DBQueries.SelectQueryReturnInt64("SELECT u.user_msisdn from ussd_footsoldiers_attempts u WHERE u.user_session_id = '" + user_session_id + "' order by u.id desc limit 1", ref lines);
                                if (user_msisdn > 0)
                                {
                                    //Api.CommonFuncations.B2TechLNBMTN.CreateUserResponse create_user = new Api.CommonFuncations.B2TechMNBMTN.CreateUserResponse();
                                    //menu_2_display = Api.CommonFuncations.B2TechLNBMTN.GetFootSoldiersFullNameMenu(MSISDN, ussdString, out is_close, ussd_menu, user_msisdn.ToString(), out create_user, ref lines);
                                    //if (is_close)
                                    //{
                                    //    LoginRequest LoginRequestBody = new LoginRequest()
                                    //    {
                                    //        ServiceID = service.service_id,
                                    //        Password = service.service_password
                                    //    };
                                    //    LoginResponse res = Login.DoLogin(LoginRequestBody);
                                    //    if (res != null)
                                    //    {
                                    //        if (res.ResultCode == 1000)
                                    //        {

                                    //            Int64 rec_id = Api.DataLayer.DBQueries.SelectQueryReturnInt64("SELECT u.id from ussd_footsoldiers_attempts u WHERE u.user_session_id = '" + user_session_id + "' order by u.id desc limit 1", ref lines);
                                    //            Api.DataLayer.DBQueries.ExecuteQuery("update ussd_footsoldiers_attempts set user_id = " + create_user.userId + ", full_name = '" + ussdString + "' where id = " + rec_id, ref lines);
                                    //            string token_id = res.TokenID;
                                    //            string sms_text = "Felicitations, vous vous etes inscrit avec succes sur LNBPari. https://m.lnbpari.com/#/login Mot de passe: " + create_user.password;
                                    //            Api.DataLayer.DBQueries.ExecuteQuery("insert into foot_soldiers_sms (date_time, msisdn, service_id, sms_text) values(now(), " + user_msisdn + "," + service.service_id + ",'" + sms_text + "');", ref lines);
                                    //            SendSMSRequest RequestSendSMSBody1 = new SendSMSRequest()
                                    //            {
                                    //                ServiceID = service.service_id,
                                    //                MSISDN = user_msisdn,
                                    //                Text = sms_text,
                                    //                TokenID = token_id,
                                    //                TransactionID = "12345"
                                    //            };
                                    //            SendSMSResponse response_sendsms1 = SendSMS.DoSMS(RequestSendSMSBody1);
                                    //            if (response_sendsms1 != null)
                                    //            {
                                    //                if (response_sendsms1.ResultCode == 1010 || response_sendsms1.ResultCode == 1000)
                                    //                {
                                    //                    lines = Add2Log(lines, " Send SMS Was OK", 100, lines[0].ControlerName);
                                    //                }
                                    //                else
                                    //                {
                                    //                    lines = Add2Log(lines, " Send SMS Failed", 100, lines[0].ControlerName);
                                    //                }
                                    //            }
                                    //            else
                                    //            {
                                    //                lines = Add2Log(lines, " Send SMS Failed", 100, lines[0].ControlerName);
                                    //            }
                                    //        }
                                    //    }
                                    //}
                                }
                                else
                                {
                                    is_close = false;
                                    menu_2_display = "Error 78_2" + Environment.NewLine;
                                    menu_2_display = menu_2_display + Environment.NewLine + "M) ";// Menu Principal ";

                                }
                                break;
                            case 78: //Foot Soldier Main Menu asking to enter MSISDN
                                menu_2_display = Api.CommonFuncations.B2TechLNBMTN.GetFootSoldierMainMenu(MSISDN, ref lines);
                                break;

                            case 88:
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#"))
                                {
                                    page_number = page_number + 1;
                                }
                                if (ussdString.Contains("*") && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = "";//B2TechLNBMTN.GetKironAgentMainMenu(MSISDN, page_number, ref lines);
                                break;
                            case 89://EnterAmountForSubAgent
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                Int64 pos_trans_id1 = 0;
                                menu_2_display = "";// B2TechLNBMTN.GetAmountForKironAgentMenu(MSISDN, ussdString, "", out pos_trans_id1, ref lines);
                                if (pos_trans_id1 > 0)
                                {
                                    ServiceClass subscriber_service1 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                    LoginRequest LoginRequestBody = new LoginRequest()
                                    {
                                        ServiceID = subscriber_service1.service_id,
                                        Password = subscriber_service1.service_password
                                    };
                                    LoginResponse res = Login.DoLogin(LoginRequestBody);
                                    if (res != null)
                                    {
                                        if (res.ResultCode == 1000)
                                        {
                                            string token_id = res.TokenID;
                                            momo_request = new DYAReceiveMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(ussdString),
                                                ServiceID = ussd_menu.service_id,
                                                TokenID = token_id,
                                                TransactionID = "KironTrans_" + pos_trans_id1
                                            };
                                        }
                                    }
                                }
                                break;
                            case 34: //DepositMoney
                                user = B2TechLNBMTN.SearchUserNew(MSISDN, ref lines);
                                menu_2_display = B2TechLNBMTN.GetDepositMoneyMenu(user, ussd_menu, MSISDN, ref lines);
                                break;
                            case 36: //StartDepositMoney
                                user = B2TechLNBMTN.SearchUserNew(MSISDN, ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                menu_2_display = B2TechLNBMTN.GetStartDepositMoneyMenu(service, user, ussd_menu, MSISDN, ussdString, out momo_request, ref lines);
                                break;
                            case 33: //WithdrawMoney
                                user = B2TechLNBMTN.SearchUserNew(MSISDN, ref lines);
                                menu_2_display = B2TechLNBMTN.GetWithdrawMoneyMenu(user, ref lines);
                                break;
                            case 35: //StartWithdrawMoney
                                user = B2TechLNBMTN.SearchUserNew(MSISDN, ref lines);
                                menu_2_display = B2TechLNBMTN.GetStartWithdrawMoneyMenu(user, false, false, false, ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                if (user.isValid == true)
                                {
                                    int number;
                                    bool su = int.TryParse(ussdString, out number);
                                    if (su)
                                    {
                                        if (Convert.ToInt32(ussdString) <= user.AvailableForWithdraw && Convert.ToInt32(ussdString) > 0)
                                        {
                                            menu_2_display = B2TechLNBMTN.CheckBeforeWithdrawMenu(service, MSISDN, ref lines);
                                            if (String.IsNullOrEmpty(menu_2_display))
                                            {
                                                //Refund user
                                                ServiceClass subscriber_service1 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                                LoginRequest LoginRequestBody1 = new LoginRequest()
                                                {
                                                    ServiceID = service.service_id,
                                                    Password = service.service_password
                                                };
                                                LoginResponse res1 = Login.DoLogin(LoginRequestBody1);
                                                if (res1 != null)
                                                {
                                                    if (res1.ResultCode == 1000)
                                                    {
                                                        string token_id = res1.TokenID;
                                                        DYATransferMoneyRequest momotransfer_request = new DYATransferMoneyRequest()
                                                        {
                                                            MSISDN = Convert.ToInt64(MSISDN),
                                                            Amount = Convert.ToInt32(ussdString),
                                                            ServiceID = service.service_id,
                                                            TokenID = token_id,
                                                            TransactionID = "USSDWithdraw_" + Guid.NewGuid().ToString()
                                                        };
                                                        string postBody = "", response_body = "";
                                                        //bool wd_result = StartWithdraw(user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                        bool do_withdraw = false;
                                                        string code = "";
                                                        if (user.AvailableForWithdraw > 0)
                                                        {
                                                            code = B2TechLNBMTN.StartWithdrawNew(user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                        }



                                                        menu_2_display = B2TechLNBMTN.GetStartWithdrawMoneyMenu(user, true, true, false, ref lines);

                                                        if (code == "")
                                                        {
                                                            if (do_withdraw)
                                                            {
                                                                string mail_body = "<p><h2>Start Withdraw has failed</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>Json: </b>" + postBody + "<br><b>Response: </b>" + response_body + "<br></p>";
                                                                string mail_subject = "Start Withdraw has failed for user - " + user.id;
                                                                string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                                string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                                string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                                string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                                int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                                string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                                CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                                            }

                                                        }
                                                        else
                                                        {
                                                            DYATransferMoneyResponse momotransfer_response = CommonFuncations.DYATransferMoney.DoTransfer(momotransfer_request);
                                                            if (momotransfer_response.ResultCode == 1000)
                                                            {
                                                                postBody = "";
                                                                response_body = "";
                                                                bool end_withdraw = B2TechLNBMTN.EndWithdrawNew(momotransfer_response.Timestamp, momotransfer_response.TransactionID, true, code, user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                                if (!end_withdraw)
                                                                {
                                                                    string mail_body = "", mail_subject = "";
                                                                    mail_body = "<p><h2>End Withdraw has failed but DYATransfer was ok</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>Request: </b>" + postBody + "<br>Response: " + response_body + "<br></p>";
                                                                    mail_subject = "End Withdraw has failed but DYATransfer was ok - " + user.id;
                                                                    string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                                    string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                                    string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                                    string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                                    int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                                    string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                                    CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                                                }
                                                                GoogleAnalytics.SendData2GoogleAnalytics("UA-135957841-1", "ussd", Base64.Reverse(MSISDN), System.Web.HttpContext.Current.Request.ServerVariables["REMOTE_ADDR"], "BJ", "event", "Withdraw", "MOMO", "-" + ussdString, "/", ref lines);
                                                            }
                                                            else
                                                            {

                                                                postBody = "";
                                                                response_body = "";
                                                                bool end_withdraw = B2TechLNBMTN.EndWithdrawNew(momotransfer_response.Timestamp, momotransfer_response.TransactionID, false, code, user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                                string mail_body = "", mail_subject = "";
                                                                mail_body = "<p><h2>Withdraw has failed DYATransfer</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>MOMO Response: </b>" + momotransfer_response.ResultCode + " " + momotransfer_response.Description + "<br>User was refunded: " + end_withdraw + "<br><b>Request: </b>" + postBody + "<br><b>Response: </b>" + response_body + "</p>";
                                                                mail_subject = "Withdraw has failed DYATransfer for user - " + user.id;
                                                                string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                                string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                                string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                                string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                                int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                                string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                                CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                                            }
                                                        }



                                                    }
                                                }
                                            }


                                        }
                                        else
                                        {
                                            //user has requested more than allowed
                                            menu_2_display = B2TechLNBMTN.GetStartWithdrawMoneyMenu(user, false, false, true, ref lines);
                                        }
                                    }
                                    else
                                    {
                                        menu_2_display = "Option invalide ";
                                    }
                                    
                                }
                                break;
                            case 25://CloseXXXBet
                            case 26:
                            case 27:
                                List<Int64> saved_ids = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, "_mtnbj", ref lines);
                                if (saved_ids != null)
                                {
                                    string mysaved_id = "";
                                    foreach (Int64 s in saved_ids)
                                    {
                                        mysaved_id = mysaved_id + s + ",";

                                    }
                                    if (!String.IsNullOrEmpty(mysaved_id))
                                    {
                                        mysaved_id = mysaved_id.Substring(0, mysaved_id.Length - 1);
                                        DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games_mtnbj set amount = " + amount + " where id in (" + mysaved_id + ")", "DBConnectionString_104", ref lines);
                                    }
                                    //foreach (Int64 s in saved_ids)
                                    //{
                                    //    DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set amount = " + amount + " where id = " + s, ref lines);
                                    //}
                                }
                                //DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set amount = " + amount + " where user_session_id = '" + user_session_id + "'", ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                //RequestForOrder
                                //bool req_for_order = GetRequestForOrder(ussd_session, ref lines);
                                bool req_for_order = B2TechLNBMTN.PlaceBet(ussd_session, ref lines);

                                if (req_for_order == true)
                                {
                                    menu_2_display = B2TechLNBMTN.GetCloseBet(ussd_session, amount, ref lines);
                                    ServiceClass subscriber_service2 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                    LoginRequest LoginRequestBody = new LoginRequest()
                                    {
                                        ServiceID = subscriber_service2.service_id,
                                        Password = subscriber_service2.service_password
                                    };
                                    LoginResponse res = Login.DoLogin(LoginRequestBody);
                                    if (res != null)
                                    {
                                        if (res.ResultCode == 1000)
                                        {
                                            string token_id = res.TokenID;
                                            momo_request = new DYAReceiveMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(amount),
                                                ServiceID = ussd_menu.service_id,
                                                TokenID = token_id,
                                                TransactionID = user_session_id

                                            };
                                        }
                                    }
                                }
                                else
                                {
                                    menu_2_display = B2TechLNBMTN.GetCloseBetFailed(ref lines);
                                }
                                break;
                            case 22: //ConfirmBetXXX
                            case 23:
                            case 24:
                                amount = ussdString;
                                double num1;
                                bool res_parse = double.TryParse(amount, out num1);
                                if (res_parse == true)
                                {
                                    if (num1 >= 150 && num1 <= 1000000)
                                    {
                                        menu_2_display = B2TechLNBMTN.GetConfirmBet(ussd_session, amount, ref lines);
                                    }
                                    else
                                    {

                                        menu_2_display = B2TechLNBMTN.GetWrongPriceBetMeny(ref lines);
                                        DataLayer.DBQueries.ExecuteQuery("delete from ussd_saved_games_mtnbj where user_session_id = '" + user_session_id + "' order by id desc limit 1", "DBConnectionString_104", ref lines);
                                    }
                                }
                                odd_page = 0;

                                break;
                            case 19: //PayAndConfirmXXX
                            case 20:
                            case 21:
                                //need to check if user clicks back and then returns to this section.
                                DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games_mtnbj (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + ussdString + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',0, " + service.service_id + ")", "DBConnectionString_104", ref lines);
                                menu_2_display = B2TechLNBMTN.GetPayAndConfirm(ussd_session, ref lines);
                                odd_page = 0;
                                break;
                            case 32: //ticket status
                                page_number = (page_number == 0 ? 1 : page_number);
                                menu_2_display = B2TechLNBMTN.GetCheckTicketMenu(MSISDN, page_number, ussdString, ref lines);
                                break;
                            case 31: //tickets status by phone
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#"))
                                {
                                    page_number = page_number + 1;
                                }
                                if (ussdString.Contains("*") && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = B2TechLNBMTN.GetCheckTicketsMenu(MSISDN, page_number, ref lines);
                                break;
                            case 52:
                                menu_2_display = B2TechLNBMTN.GetPayoutBarcodeTicket(ussd_menu, MSISDN, ref lines);
                                if (String.IsNullOrEmpty(menu_2_display))
                                {
                                    msgType = "2";
                                    opType = "2";
                                    is_close = true;
                                    //Refund user
                                    ServiceClass subscriber_service2 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                    LoginRequest LoginRequestBody2 = new LoginRequest()
                                    {
                                        ServiceID = service.service_id,
                                        Password = service.service_password
                                    };
                                    LoginResponse res2 = Login.DoLogin(LoginRequestBody2);
                                    if (res2 != null)
                                    {
                                        if (res2.ResultCode == 1000 && Convert.ToInt32(amount_2_pay) > 0)
                                        {
                                            string token_id = res2.TokenID;
                                            DYATransferMoneyRequest momotransfer_request = new DYATransferMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(amount_2_pay),
                                                ServiceID = service.service_id,
                                                TokenID = token_id,
                                                TransactionID = "POSTicketPayout_" + bar_code
                                            };
                                            DYATransferMoneyResponse momotransfer_response = CommonFuncations.DYATransferMoney.DoTransfer(momotransfer_request);

                                            if (momotransfer_response.ResultCode == 1000)
                                            {
                                                int cashier_id = B2TechLNBMTN.GetCashierID(MSISDN, ref lines);
                                                if (cashier_id > 0)
                                                {
                                                    DataLayer.DBQueries.ExecuteQuery("insert into casheir_transactions (cashier_id, bar_code, total_payout, date_time, dya_id) values(" + cashier_id + ", '" + bar_code + "', " + amount_2_pay + ", now()," + momotransfer_response.TransactionID + ");", ref lines);
                                                }
                                                GoogleAnalytics.SendData2GoogleAnalytics("UA-135957841-1", "ussd", Base64.Reverse(MSISDN), System.Web.HttpContext.Current.Request.ServerVariables["REMOTE_ADDR"], "BJ", "event", "PyoutPOSTicket", "MOMO", "-" + ussdString, "/", ref lines);
                                                //dopayout
                                                bool dopayout_res = iDoBet.DoPayOutNew(momotransfer_response.Timestamp, momotransfer_response.TransactionID, bar_code, ref lines);
                                                //bool dopayout_res = iDoBet.DoPayout(bar_code, ref lines);
                                                menu_2_display = "Félicitations, le billet a été remboursé sur votre compte MOMO.";

                                            }
                                            else
                                            {
                                                menu_2_display = "Le billet n'a pas été remboursé sur votre compte MOMO." + Environment.NewLine;
                                                menu_2_display = menu_2_display + "Veuillez réessayer";
                                                string mail_body = "<p><h2>Payout has failed DYATransfer</h2><b>barCode:</b> " + bar_code + "<br><b>Amount: </b>" + amount_2_pay + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>MOMO Response: </b>" + momotransfer_response.ResultCode + " " + momotransfer_response.Description + "<br></p>";
                                                string mail_subject = "POS Ticlet Payout has failed DYATransfer for user - " + bar_code;
                                                string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                            }
                                        }
                                        else
                                        {
                                            menu_2_display = "option invalide" + Environment.NewLine;
                                            menu_2_display = menu_2_display + "Veuillez réessayer";
                                        }
                                    }
                                }

                                break;
                            case 44: //search ticket
                                menu_2_display = B2TechLNBMTN.GetCheckTicketByBarcodeMenu(MSISDN, ussdString, out amount_2_pay, ref lines);
                                bar_code = ussdString;
                                break;
                            case 39: //add another game
                                if (game_id > 0)
                                {
                                    DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games_mtnbj (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + ussdString + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',0, " + service.service_id + ")", "DBConnectionString_104", ref lines);
                                    game_id = 0;
                                    selected_odd = 0;
                                    page_number = 1;
                                    odd_page = 0;
                                }
                                menu_2_display = B2TechLNBMTN.GetSportsTypeMenu(ref lines);
                                break;
                            case 41: //Delete and Start Over
                                List<Int64> saved_ids1 = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, "_mtnbj", ref lines);
                                if (saved_ids1 != null)
                                {
                                    string mysaved_id = "";
                                    foreach (Int64 s in saved_ids1)
                                    {
                                        mysaved_id = mysaved_id + s + ",";

                                    }
                                    if (!String.IsNullOrEmpty(mysaved_id))
                                    {
                                        mysaved_id = mysaved_id.Substring(0, mysaved_id.Length - 1);
                                        DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games_mtnbj set status = 3 where id in (" + mysaved_id + ")", "DBConnectionString_104", ref lines);
                                    }

                                    //foreach (Int64 s in saved_ids1)
                                    //{
                                    //    DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set status = 3 where id = " + s, ref lines);
                                    //}
                                }

                                //DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set status = 3 where user_seesion_id = '" + user_session_id + "'", ref lines);
                                game_id = 0;
                                odd_page = 0;
                                selected_odd = 0;
                                page_number = 1;
                                menu_2_display = B2TechLNBMTN.GetSportsTypeMenu(ref lines);
                                ussd_menu.action_id = 2;
                                break;
                            case 48:
                                menu_2_display = B2TechLNBMTN.GetSoccerLeagueMenu(35, "0", ussd_menu.ussd_id, ref lines, out selected_league_id);
                                break;
                            case 47:
                                menu_2_display = B2TechLNBMTN.GetSoccerLeagueMenu(32, "0", ussd_menu.ussd_id, ref lines, out selected_league_id);
                                break;
                            case 37: //display soccer leagu
                                menu_2_display = B2TechLNBMTN.GetSoccerLeagueMenu(31, "0", ussd_menu.ussd_id, ref lines, out selected_league_id);
                                break;
                            case 49:
                            case 50:
                            case 38://selected league
                            case 28://Start Over
                            case 29:
                            case 30:
                            case 16://AddXXXGame or 
                            case 17:
                            case 18:
                            case 7: //DisplayXXXTopEvents   
                            case 8:
                            case 9:
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#"))
                                {
                                    page_number = page_number + 1;
                                }
                                if (ussdString.Contains("*") && page_number > 0)
                                {
                                    page_number = page_number - 1;
                                }
                                if (ussd_menu.action_id == 28 || ussd_menu.action_id == 29 || ussd_menu.action_id == 30)
                                {
                                    List<Int64> saved_ids2 = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, "_mtnbj", ref lines);
                                    if (saved_ids2 != null)
                                    {
                                        string mysaved_id = "";
                                        foreach (Int64 s in saved_ids2)
                                        {
                                            mysaved_id = mysaved_id + s + ",";

                                        }
                                        if (!String.IsNullOrEmpty(mysaved_id))
                                        {
                                            mysaved_id = mysaved_id.Substring(0, mysaved_id.Length - 1);
                                            DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games_mtnbj set status = 3 where id in (" + mysaved_id + ")", "DBConnectionString_104", ref lines);
                                        }

                                        //foreach (Int64 s in saved_ids2)
                                        //{
                                        //    DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set status = 3 where id = " + s, ref lines);
                                        //}
                                    }
                                    //DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set status = 3 where user_seesion_id = '"+user_session_id+"'", ref lines);
                                    game_id = 0;
                                    selected_odd = 0;
                                    odd_page = 0;
                                    page_number = 1;

                                }
                                if (ussd_menu.action_id == 16 || ussd_menu.action_id == 17 || ussd_menu.action_id == 18)
                                {
                                    if (game_id > 0)
                                    {
                                        DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games_mtnbj (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + ussdString + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',0," + service.service_id + ")", "DBConnectionString_104", ref lines);
                                        game_id = 0;
                                        selected_odd = 0;
                                        page_number = 1;
                                        odd_page = 0;
                                    }

                                }
                                switch (ussd_menu.action_id)
                                {
                                    case 38:
                                        menu_2_display = B2TechLNBMTN.GetEventsMenu(ussdString, 31, page_number, ref lines, out selected_league_id, selected_league_id, ussd_menu);
                                        break;
                                    case 49:
                                        menu_2_display = B2TechLNBMTN.GetEventsMenu(ussdString, 32, page_number, ref lines, out selected_league_id, selected_league_id, ussd_menu);
                                        break;
                                    case 50:
                                        menu_2_display = B2TechLNBMTN.GetEventsMenu(ussdString, 35, page_number, ref lines, out selected_league_id, selected_league_id, ussd_menu);
                                        break;
                                    case 28:
                                    case 16:
                                    case 7:
                                        menu_2_display = B2TechLNBMTN.GetEventsMenu(31, page_number, ref lines);
                                        break;
                                    case 29:
                                    case 17:
                                    case 8:
                                        menu_2_display = B2TechLNBMTN.GetEventsMenu(32, page_number, ref lines);
                                        break;
                                    case 30:
                                    case 18:
                                    case 9:
                                        menu_2_display = B2TechLNBMTN.GetEventsMenu(35, page_number, ref lines);
                                        break;
                                }


                                break;
                            case 10: //DisplayXXXGame
                            case 11:
                            case 12:
                                page_number = (page_number == 0 ? 1 : page_number);
                                selected_odd = 0;
                                if (ussdString.Contains("#"))
                                {
                                    odd_page = odd_page + 1;
                                }
                                if (ussdString.Contains("*") && odd_page > 0)
                                {
                                    odd_page = odd_page - 1;
                                }
                                try
                                {
                                    switch (ussd_menu.action_id)
                                    {
                                        case 10:
                                            menu_2_display = B2TechLNBMTN.GetGameOddsMenu(31, page_number, ussdString, game_id, odd_page, out game_id, selected_league_id, ref lines);
                                            break;
                                        case 11:
                                            menu_2_display = B2TechLNBMTN.GetGameOddsMenu(32, page_number, ussdString, game_id, odd_page, out game_id, selected_league_id, ref lines);
                                            break;
                                        case 12:
                                            menu_2_display = B2TechLNBMTN.GetGameOddsMenu(35, page_number, ussdString, game_id, odd_page, out game_id, selected_league_id, ref lines);
                                            break;
                                    }
                                }
                                catch(Exception ex)
                                {
                                    menu_2_display = "*) Retour";
                                    menu_2_display = menu_2_display + Environment.NewLine + "M) ";
                                }
                                
                                break;
                            case 13: //ConfirmXXXGame (select odd)
                            case 14:
                            case 15:
                                switch (ussd_menu.action_id)
                                {
                                    case 13:
                                        menu_2_display = Api.CommonFuncations.B2TechLNBMTN.GetConfirmMenu(31, game_id, ussdString, odd_page, out selected_odd, out selected_bet_type_id, out selected_odd_name, out selected_odd_line, ref lines, ussd_session, MSISDN, service);
                                        break;
                                    case 14:
                                        menu_2_display = Api.CommonFuncations.B2TechLNBMTN.GetConfirmMenu(32, game_id, ussdString, odd_page, out selected_odd, out selected_bet_type_id, out selected_odd_name, out selected_odd_line, ref lines, ussd_session, MSISDN, service);
                                        break;
                                    case 15:
                                        menu_2_display = Api.CommonFuncations.B2TechLNBMTN.GetConfirmMenu(35, game_id, ussdString, odd_page, out selected_odd, out selected_bet_type_id, out selected_odd_name, out selected_odd_line, ref lines, ussd_session, MSISDN, service);
                                        break;
                                }
                                break;
                        }
                        lines = Add2Log(lines, " page_number = " + page_number, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " game_id = " + game_id, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " odd_page = " + odd_page, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " selected_odd = " + selected_odd, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " amount = " + amount, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " selected_league_id = " + selected_league_id, 100, "ivr_subscribe");
                        result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, menu_2_display, msgType, opType);
                        DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id, selected_odd, selected_bet_type_id,selected_odd_name, selected_odd_line, amount, selected_league_id, amount_2_pay, bar_code, selected_subagent_name, rapidos_string) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + "," + status + ", '" + ussdString + "', " + ussd_menu.action_id + ", " + page_number + "," + odd_page + "," + game_id + "," + topic_id + ",'" + user_session_id + "'," + selected_odd + "," + selected_bet_type_id + ",'" + selected_odd_name + "','" + selected_odd_line + "', " + amount + "," + selected_league_id + "," + amount_2_pay + ",'" + bar_code + "','" + selected_subagent_name + "','" + rapidos_string + "');", "DBConnectionString_104", ref lines);
                        break;
                }
            }

            return result;
        }

        public static string LNBPariMoovUSSDBehaviuer(ServiceClass service, string ussdString, string ServiceID, string MSISDN, string linkid, string receiveCB, string senderCB, string serviceCode, USSDMenu ussd_menu, USSDSession ussd_session, out DYAReceiveMoneyRequest momo_request, ref List<LogLines> lines, out string menu_2_display, out bool is_close, string force_session_id)
        {
            momo_request = null;
            menu_2_display = "";
            is_close = false;
            string result = "";
            force_session_id = (String.IsNullOrEmpty(force_session_id) ? Guid.NewGuid().ToString() : force_session_id);
            string user_session_id = (ussd_session == null ? force_session_id : ussd_session.user_seesion_id);
            int topic_id = (ussd_session != null ? ussd_session.topic_id : ussd_menu.topic_id);
            if (!String.IsNullOrEmpty(ussd_menu.menu_2_display))
            {
                menu_2_display = ussd_menu.menu_2_display;
                result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, ussd_menu.menu_2_display, "1", "1");
                DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + ",0, '" + ussdString + "', " + ussd_menu.action_id + ", " + (ussd_session == null ? 0 : ussd_session.page_number) + "," + (ussd_session == null ? 0 : ussd_session.odd_page) + "," + (ussd_session == null ? 0 : ussd_session.game_id) + "," + topic_id + ",'" + user_session_id + "');", "DBConnectionString_104", ref lines);
            }
            if (ussd_menu.action_id == 3) //close
            {
                menu_2_display = ussd_menu.menu_2_display;
                is_close = true;
                result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, menu_2_display, "2", "2");
                DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + ",1, '" + ussdString + "', " + ussd_menu.action_id + ", " + (ussd_session == null ? 0 : ussd_session.page_number) + "," + (ussd_session == null ? 0 : ussd_session.odd_page) + "," + (ussd_session == null ? 0 : ussd_session.game_id) + "," + topic_id + ",'" + user_session_id + "');", "DBConnectionString_104", ref lines);
            }






            if (String.IsNullOrEmpty(result))
            {
                switch (topic_id)
                {
                    case 9:
                        int page_number = (ussd_session != null ? ussd_session.page_number : 1);
                        int odd_page = (ussd_session != null ? ussd_session.odd_page : 0);
                        Int64 game_id = (ussd_session != null ? ussd_session.game_id : 0);
                        string rapidos_string = (ussd_session != null ? ussd_session.rapidos_string : "0");
                        double selected_odd = (ussd_session != null ? ussd_session.selected_odd : 0);
                        int selected_bet_type_id = (ussd_session != null ? ussd_session.selected_bet_type_id : 0);
                        string selected_odd_name = (ussd_session != null ? ussd_session.selected_odd_name : "0");
                        string selected_odd_line = (ussd_session != null ? ussd_session.selected_odd_line : "null");
                        string amount = (ussd_session != null ? ussd_session.amount : "0");
                        int selected_league_id = (ussd_session != null ? ussd_session.selected_league_id : 0);
                        string msgType = "1", opType = "1";
                        int status = 0;
                        string amount_2_pay = (ussd_session != null ? ussd_session.amount_2_pay.ToString() : "0");
                        string bar_code = (ussd_session != null ? ussd_session.bar_code : "0");
                        string selected_subagent_name = (ussd_session != null ? ussd_session.selected_subagent_name : "0");
                        IdoBetUser user = new IdoBetUser();
                        switch (ussd_menu.action_id)
                        {
                            case 75:
                            case 76:
                            case 77:
                                bool placebet1 = false;
                                double num3;
                                int max_bet = 0;
                                bool check_amount = double.TryParse(ussdString, out num3);
                                if (check_amount == true)
                                {
                                    switch (ussd_menu.action_id)
                                    {
                                        case 75:
                                            game_id = 52;
                                            max_bet = 20000;
                                            break;
                                        case 76:
                                            game_id = 53;
                                            max_bet = 4000;
                                            break;
                                        case 77:
                                            game_id = 54;
                                            max_bet = 200;
                                            break;
                                    }
                                    if (num3 >= 100 && num3 <= max_bet)
                                    {
                                        DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + rapidos_string + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "'," + num3 + ", " + service.service_id + ")", ref lines);
                                        placebet1 = true;
                                    }
                                    else
                                    {

                                        menu_2_display = Api.CommonFuncations.iDoBetLNBPariMoovBenin.GetWrongPriceBetRapidos(max_bet, ref lines);
                                        DataLayer.DBQueries.ExecuteQuery("delete from ussd_saved_games where user_session_id = '" + user_session_id + "' order by id desc limit 1", ref lines);
                                    }
                                }
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                //RequestForOrder
                                //bool req_for_order = GetRequestForOrder(ussd_session, ref lines);
                                if (placebet1)
                                {

                                    menu_2_display = Api.CommonFuncations.iDoBetLNBPariMoovBenin.GetCloseBet(ussd_session, amount, ref lines);
                                    LoginRequest LoginRequestBody = new LoginRequest()
                                    {
                                        ServiceID = service.service_id,
                                        Password = service.service_password
                                    };
                                    LoginResponse res = Login.DoLogin(LoginRequestBody);
                                    if (res != null)
                                    {
                                        if (res.ResultCode == 1000)
                                        {
                                            string token_id = res.TokenID;
                                            momo_request = new DYAReceiveMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(ussdString),
                                                ServiceID = service.service_id,
                                                TokenID = token_id,
                                                TransactionID = "Rapidos_" + user_session_id
                                            };
                                        }
                                    }
                                }

                                break;

                            case 72: //Confirm Rapidos
                            case 73:
                            case 74:
                                String[] strlist = new string[] { };
                                bool validate_num = Api.CommonFuncations.iDoBetLNBPariMoovBenin.ValidateRapidosInput(ussdString, ussd_menu.action_id, out strlist, ref lines);
                                if (validate_num)
                                {
                                    menu_2_display = Api.CommonFuncations.iDoBetLNBPariMoovBenin.GetConfirmRapidosMenu(ussd_menu.action_id, ussdString, out game_id, ref lines);
                                    rapidos_string = ussdString;
                                }
                                else
                                {
                                    menu_2_display = Api.CommonFuncations.iDoBetLNBPariMoovBenin.WrongRapidosNumber();
                                }
                                break;

                            case 55://EnterAmountForSubAgent
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                Int64 pos_trans_id = 0;
                                menu_2_display = iDoBetLNBPariMoovBenin.GetAmountForSubAgentMenu(MSISDN, ussdString, selected_subagent_name, out pos_trans_id, ref lines);
                                if (pos_trans_id > 0)
                                {
                                    ServiceClass subscriber_service1 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                    LoginRequest LoginRequestBody = new LoginRequest()
                                    {
                                        ServiceID = subscriber_service1.service_id,
                                        Password = subscriber_service1.service_password
                                    };
                                    LoginResponse res = Login.DoLogin(LoginRequestBody);
                                    if (res != null)
                                    {
                                        if (res.ResultCode == 1000)
                                        {
                                            string token_id = res.TokenID;
                                            momo_request = new DYAReceiveMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(ussdString),
                                                ServiceID = ussd_menu.service_id,
                                                TokenID = token_id,
                                                TransactionID = "POSTrans_" + pos_trans_id

                                            };
                                        }
                                    }
                                }



                                break;
                            case 54:
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = iDoBetLNBPariMoovBenin.GetSlectedSubAgentMenu(MSISDN, page_number, ussdString, out selected_subagent_name, ref lines);
                                break;
                            case 53:
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = iDoBetLNBPariMoovBenin.GetAgentMainMenu(MSISDN, page_number, ref lines);
                                break;

                            case 80: //Foot Solider Check MSISDN and ask to enter full name 
                                is_close = true;
                                menu_2_display = Api.CommonFuncations.iDoBetLNBPariMoovBenin.GetFootSoldiersMSISDNMenu(MSISDN, ussdString, out is_close, service, ref lines);
                                if (is_close)
                                {
                                    msgType = "2";
                                    opType = "2";
                                }
                                else
                                {
                                    Api.DataLayer.DBQueries.ExecuteQuery("insert into ussd_footsoldiers_attempts (user_session_id, footsoldier_msisdn, user_msisdn, full_name, user_id, date_time) values('" + user_session_id + "', " + MSISDN + ", 229" + ussdString + ", '', 0, now())", ref lines);
                                }
                                break;
                            case 79: //Foot Soldier create user
                                is_close = true;
                                Int64 user_msisdn = Api.DataLayer.DBQueries.SelectQueryReturnInt64("SELECT u.user_msisdn from ussd_footsoldiers_attempts u WHERE u.user_session_id = '" + user_session_id + "' order by u.id desc limit 1", ref lines);
                                if (user_msisdn > 0)
                                {
                                    Api.CommonFuncations.iDoBetLNBPariMoovBenin.CreateUserResponse create_user = new Api.CommonFuncations.iDoBetLNBPariMoovBenin.CreateUserResponse();
                                    menu_2_display = Api.CommonFuncations.iDoBetLNBPariMoovBenin.GetFootSoldiersFullNameMenu(MSISDN, ussdString, out is_close, ussd_menu, user_msisdn.ToString(), out create_user, ref lines);
                                    if (is_close)
                                    {
                                        LoginRequest LoginRequestBody = new LoginRequest()
                                        {
                                            ServiceID = service.service_id,
                                            Password = service.service_password
                                        };
                                        LoginResponse res = Login.DoLogin(LoginRequestBody);
                                        if (res != null)
                                        {
                                            if (res.ResultCode == 1000)
                                            {

                                                Int64 rec_id = Api.DataLayer.DBQueries.SelectQueryReturnInt64("SELECT u.id from ussd_footsoldiers_attempts u WHERE u.user_session_id = '" + user_session_id + "' order by u.id desc limit 1", ref lines);
                                                Api.DataLayer.DBQueries.ExecuteQuery("update ussd_footsoldiers_attempts set user_id = " + create_user.userId + ", full_name = '" + ussdString + "' where id = " + rec_id, ref lines);
                                                string token_id = res.TokenID;
                                                string sms_text = "Felicitations, vous vous etes inscrit avec succes sur LNBPari. https://m.lnbpari.com/#/login Mot de passe: " + create_user.password;
                                                Api.DataLayer.DBQueries.ExecuteQuery("insert into foot_soldiers_sms (date_time, msisdn, service_id, sms_text) values(now(), " + user_msisdn + "," + service.service_id + ",'" + sms_text + "');", ref lines);
                                                SendSMSRequest RequestSendSMSBody1 = new SendSMSRequest()
                                                {
                                                    ServiceID = service.service_id,
                                                    MSISDN = user_msisdn,
                                                    Text = sms_text,
                                                    TokenID = token_id,
                                                    TransactionID = "12345"
                                                };
                                                SendSMSResponse response_sendsms1 = SendSMS.DoSMS(RequestSendSMSBody1);
                                                if (response_sendsms1 != null)
                                                {
                                                    if (response_sendsms1.ResultCode == 1010 || response_sendsms1.ResultCode == 1000)
                                                    {
                                                        lines = Add2Log(lines, " Send SMS Was OK", 100, lines[0].ControlerName);
                                                    }
                                                    else
                                                    {
                                                        lines = Add2Log(lines, " Send SMS Failed", 100, lines[0].ControlerName);
                                                    }
                                                }
                                                else
                                                {
                                                    lines = Add2Log(lines, " Send SMS Failed", 100, lines[0].ControlerName);
                                                }
                                            }
                                        }
                                    }
                                }
                                else
                                {
                                    is_close = false;
                                    menu_2_display = "Error 78_2" + Environment.NewLine;
                                    menu_2_display = menu_2_display + Environment.NewLine + "M) ";// Menu Principal ";

                                }
                                break;
                            case 78: //Foot Soldier Main Menu asking to enter MSISDN
                                menu_2_display = Api.CommonFuncations.iDoBetLNBPariMoovBenin.GetFootSoldierMainMenu(MSISDN, ref lines);
                                break;

                            case 34: //DepositMoney
                                user = iDoBetLNBPariMoovBenin.SearchUserNew(MSISDN, ref lines);
                                menu_2_display = iDoBetLNBPariMoovBenin.GetDepositMoneyMenu(user, ussd_menu, MSISDN, ref lines);
                                break;
                            case 36: //StartDepositMoney
                                user = iDoBetLNBPariMoovBenin.SearchUserNew(MSISDN, ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                menu_2_display = iDoBetLNBPariMoovBenin.GetStartDepositMoneyMenu(service, user, ussd_menu, MSISDN, ussdString, out momo_request, ref lines);
                                break;
                            case 33: //WithdrawMoney
                                user = iDoBetLNBPariMoovBenin.SearchUserNew(MSISDN, ref lines);
                                menu_2_display = iDoBetLNBPariMoovBenin.GetWithdrawMoneyMenu(user, ref lines);
                                break;
                            case 35: //StartWithdrawMoney
                                user = iDoBetLNBPariMoovBenin.SearchUserNew(MSISDN, ref lines);
                                menu_2_display = iDoBetLNBPariMoovBenin.GetStartWithdrawMoneyMenu(user, false, false, false, ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                if (user.isValid == true)
                                {
                                    if (Convert.ToInt32(ussdString) <= user.AvailableForWithdraw && Convert.ToInt32(ussdString) > 0)
                                    {
                                        menu_2_display = iDoBetLNBPariMoovBenin.CheckBeforeWithdrawMenu(service, MSISDN, ref lines);
                                        if (String.IsNullOrEmpty(menu_2_display))
                                        {
                                            //Refund user
                                            ServiceClass subscriber_service1 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                            LoginRequest LoginRequestBody1 = new LoginRequest()
                                            {
                                                ServiceID = service.service_id,
                                                Password = service.service_password
                                            };
                                            LoginResponse res1 = Login.DoLogin(LoginRequestBody1);
                                            if (res1 != null)
                                            {
                                                if (res1.ResultCode == 1000)
                                                {
                                                    string token_id = res1.TokenID;
                                                    DYATransferMoneyRequest momotransfer_request = new DYATransferMoneyRequest()
                                                    {
                                                        MSISDN = Convert.ToInt64(MSISDN),
                                                        Amount = Convert.ToInt32(ussdString),
                                                        ServiceID = service.service_id,
                                                        TokenID = token_id,
                                                        TransactionID = "USSDWithdraw_" + Guid.NewGuid().ToString()
                                                    };
                                                    string postBody = "", response_body = "";
                                                    //bool wd_result = StartWithdraw(user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                    bool do_withdraw = false;
                                                    string code = "";
                                                    if (user.AvailableForWithdraw > 0)
                                                    {
                                                        code = iDoBetLNBPariMoovBenin.StartWithdrawNew(user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                    }



                                                    menu_2_display = iDoBetLNBPariMoovBenin.GetStartWithdrawMoneyMenu(user, true, true, false, ref lines);

                                                    if (code == "")
                                                    {
                                                        if (do_withdraw)
                                                        {
                                                            string mail_body = "<p><h2>Start Withdraw has failed</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>Json: </b>" + postBody + "<br><b>Response: </b>" + response_body + "<br></p>";
                                                            string mail_subject = "Start Withdraw has failed for user - " + user.id;
                                                            string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                            string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                            string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                            string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                            int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                            string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                            CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                                        }

                                                    }
                                                    else
                                                    {
                                                        DYATransferMoneyResponse momotransfer_response = CommonFuncations.DYATransferMoney.DoTransfer(momotransfer_request);
                                                        if (momotransfer_response.ResultCode == 1000)
                                                        {
                                                            postBody = "";
                                                            response_body = "";
                                                            bool end_withdraw = iDoBetLNBPariMoovBenin.EndWithdrawNew(momotransfer_response.Timestamp, momotransfer_response.TransactionID, true, code, user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                            if (!end_withdraw)
                                                            {
                                                                string mail_body = "", mail_subject = "";
                                                                mail_body = "<p><h2>End Withdraw has failed but DYATransfer was ok</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>Request: </b>" + postBody + "<br>Response: " + response_body + "<br></p>";
                                                                mail_subject = "End Withdraw has failed but DYATransfer was ok - " + user.id;
                                                                string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                                string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                                string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                                string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                                int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                                string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                                CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                                            }
                                                            GoogleAnalytics.SendData2GoogleAnalytics("UA-135957841-1", "ussd", Base64.Reverse(MSISDN), System.Web.HttpContext.Current.Request.ServerVariables["REMOTE_ADDR"], "BJ", "event", "Withdraw", "MOMO", "-" + ussdString, "/", ref lines);
                                                        }
                                                        else
                                                        {

                                                            postBody = "";
                                                            response_body = "";
                                                            bool end_withdraw = iDoBetLNBPariMoovBenin.EndWithdrawNew(momotransfer_response.Timestamp, momotransfer_response.TransactionID, false, code, user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                            string mail_body = "", mail_subject = "";
                                                            mail_body = "<p><h2>Withdraw has failed DYATransfer</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>MOMO Response: </b>" + momotransfer_response.ResultCode + " " + momotransfer_response.Description + "<br>User was refunded: " + end_withdraw + "<br><b>Request: </b>" + postBody + "<br><b>Response: </b>" + response_body + "</p>";
                                                            mail_subject = "Withdraw has failed DYATransfer for user - " + user.id;
                                                            string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                            string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                            string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                            string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                            int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                            string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                            CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                                        }
                                                    }



                                                }
                                            }
                                        }


                                    }
                                    else
                                    {
                                        //user has requested more than allowed
                                        menu_2_display = iDoBetLNBPariMoovBenin.GetStartWithdrawMoneyMenu(user, false, false, true, ref lines);
                                    }
                                }
                                break;
                            case 25://CloseXXXBet
                            case 26:
                            case 27:
                                List<Int64> saved_ids = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, ref lines);
                                if (saved_ids != null)
                                {
                                    string mysaved_id = "";
                                    foreach (Int64 s in saved_ids)
                                    {
                                        mysaved_id = mysaved_id + s + ",";

                                    }
                                    if (!String.IsNullOrEmpty(mysaved_id))
                                    {
                                        mysaved_id = mysaved_id.Substring(0, mysaved_id.Length - 1);
                                        DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set amount = " + amount + " where id in (" + mysaved_id + ")", ref lines);
                                    }

                                    //foreach (Int64 s in saved_ids)
                                    //{
                                    //    DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set amount = " + amount + " where id = " + s, ref lines);
                                    //}
                                }
                                //DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set amount = " + amount + " where user_session_id = '" + user_session_id + "'", ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                //RequestForOrder
                                //bool req_for_order = GetRequestForOrder(ussd_session, ref lines);
                                bool req_for_order = iDoBetLNBPariMoovBenin.PlaceBet(ussd_session, ref lines);

                                if (req_for_order == true)
                                {
                                    menu_2_display = iDoBetLNBPariMoovBenin.GetCloseBet(ussd_session, amount, ref lines);
                                    ServiceClass subscriber_service2 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                    LoginRequest LoginRequestBody = new LoginRequest()
                                    {
                                        ServiceID = subscriber_service2.service_id,
                                        Password = subscriber_service2.service_password
                                    };
                                    LoginResponse res = Login.DoLogin(LoginRequestBody);
                                    if (res != null)
                                    {
                                        if (res.ResultCode == 1000)
                                        {
                                            string token_id = res.TokenID;
                                            momo_request = new DYAReceiveMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(amount),
                                                ServiceID = ussd_menu.service_id,
                                                TokenID = token_id,
                                                TransactionID = user_session_id

                                            };
                                        }
                                    }
                                }
                                else
                                {
                                    menu_2_display = iDoBetLNBPariMoovBenin.GetCloseBetFailed(ref lines);
                                }
                                break;
                            case 22: //ConfirmBetXXX
                            case 23:
                            case 24:
                                amount = ussdString;
                                double num1;
                                bool res_parse = double.TryParse(amount, out num1);
                                if (res_parse == true)
                                {
                                    if (num1 >= 200 && num1 <= 1000000)
                                    {
                                        menu_2_display = iDoBetLNBPariMoovBenin.GetConfirmBet(ussd_session, amount, ref lines);
                                    }
                                    else
                                    {

                                        menu_2_display = iDoBetLNBPariMoovBenin.GetWrongPriceBetMeny(ref lines);
                                        DataLayer.DBQueries.ExecuteQuery("delete from ussd_saved_games where user_session_id = '" + user_session_id + "' order by id desc limit 1", ref lines);
                                    }
                                }
                                odd_page = 0;

                                break;
                            case 19: //PayAndConfirmXXX
                            case 20:
                            case 21:
                                //need to check if user clicks back and then returns to this section.
                                DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + ussdString + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',0,"+service.service_id+")", ref lines);
                                menu_2_display = iDoBetLNBPariMoovBenin.GetPayAndConfirm(ussd_session, ref lines);
                                odd_page = 0;
                                break;
                            case 32: //ticket status
                                page_number = (page_number == 0 ? 1 : page_number);
                                menu_2_display = iDoBetLNBPariMoovBenin.GetCheckTicketMenu(MSISDN, page_number, ussdString, ref lines);
                                break;
                            case 31: //tickets status by phone
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = iDoBetLNBPariMoovBenin.GetCheckTicketsMenu(MSISDN, page_number, ref lines);
                                break;
                            case 52:
                                menu_2_display = iDoBetLNBPariMoovBenin.GetPayoutBarcodeTicket(ussd_menu, MSISDN, ref lines);
                                if (String.IsNullOrEmpty(menu_2_display))
                                {
                                    msgType = "2";
                                    opType = "2";
                                    is_close = true;
                                    //Refund user
                                    ServiceClass subscriber_service2 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                    LoginRequest LoginRequestBody2 = new LoginRequest()
                                    {
                                        ServiceID = service.service_id,
                                        Password = service.service_password
                                    };
                                    LoginResponse res2 = Login.DoLogin(LoginRequestBody2);
                                    if (res2 != null)
                                    {
                                        if (res2.ResultCode == 1000 && Convert.ToInt32(amount_2_pay) > 0)
                                        {
                                            string token_id = res2.TokenID;
                                            DYATransferMoneyRequest momotransfer_request = new DYATransferMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(amount_2_pay),
                                                ServiceID = service.service_id,
                                                TokenID = token_id,
                                                TransactionID = "POSTicketPayout_" + bar_code
                                            };
                                            DYATransferMoneyResponse momotransfer_response = CommonFuncations.DYATransferMoney.DoTransfer(momotransfer_request);

                                            if (momotransfer_response.ResultCode == 1000)
                                            {
                                                int cashier_id = iDoBetLNBPariMoovBenin.GetCashierID(MSISDN, ref lines);
                                                if (cashier_id > 0)
                                                {
                                                    DataLayer.DBQueries.ExecuteQuery("insert into casheir_transactions (cashier_id, bar_code, total_payout, date_time, dya_id) values(" + cashier_id + ", '" + bar_code + "', " + amount_2_pay + ", now()," + momotransfer_response.TransactionID + ");", ref lines);
                                                }
                                                GoogleAnalytics.SendData2GoogleAnalytics("UA-135957841-1", "ussd", Base64.Reverse(MSISDN), System.Web.HttpContext.Current.Request.ServerVariables["REMOTE_ADDR"], "BJ", "event", "PyoutPOSTicket", "MOMO", "-" + ussdString, "/", ref lines);
                                                //dopayout
                                                bool dopayout_res = iDoBet.DoPayOutNew(momotransfer_response.Timestamp, momotransfer_response.TransactionID, bar_code, ref lines);
                                                //bool dopayout_res = iDoBet.DoPayout(bar_code, ref lines);
                                                menu_2_display = "Félicitations, le billet a été remboursé sur votre compte MOMO.";

                                            }
                                            else
                                            {
                                                menu_2_display = "Le billet n'a pas été remboursé sur votre compte MOMO." + Environment.NewLine;
                                                menu_2_display = menu_2_display + "Veuillez réessayer";
                                                string mail_body = "<p><h2>Payout has failed DYATransfer</h2><b>barCode:</b> " + bar_code + "<br><b>Amount: </b>" + amount_2_pay + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>MOMO Response: </b>" + momotransfer_response.ResultCode + " " + momotransfer_response.Description + "<br></p>";
                                                string mail_subject = "POS Ticlet Payout has failed DYATransfer for user - " + bar_code;
                                                string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                            }
                                        }
                                        else
                                        {
                                            menu_2_display = "option invalide" + Environment.NewLine;
                                            menu_2_display = menu_2_display + "Veuillez réessayer";
                                        }
                                    }
                                }

                                break;
                            case 44: //search ticket
                                menu_2_display = iDoBetLNBPariMoovBenin.GetCheckTicketByBarcodeMenu(MSISDN, ussdString, out amount_2_pay, ref lines);
                                bar_code = ussdString;
                                break;
                            case 39: //add another game
                                if (game_id > 0)
                                {
                                    DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + ussdString + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',0,"+service.service_id+")", ref lines);
                                    game_id = 0;
                                    selected_odd = 0;
                                    page_number = 1;
                                    odd_page = 0;
                                }
                                menu_2_display = iDoBetLNBPariMoovBenin.GetSportsTypeMenu(ref lines);
                                break;
                            case 41: //Delete and Start Over
                                List<Int64> saved_ids1 = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, ref lines);
                                if (saved_ids1 != null)
                                {
                                    string mysaved_id = "";
                                    foreach (Int64 s in saved_ids1)
                                    {
                                        mysaved_id = mysaved_id + s + ",";

                                    }
                                    if (!String.IsNullOrEmpty(mysaved_id))
                                    {
                                        mysaved_id = mysaved_id.Substring(0, mysaved_id.Length - 1);
                                        DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set status = 3 where id in (" + mysaved_id + ")", ref lines);
                                    }

                                    //foreach (Int64 s in saved_ids1)
                                    //{
                                    //    DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set status = 3 where id = " + s, ref lines);
                                    //}
                                }

                                //DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set status = 3 where user_seesion_id = '" + user_session_id + "'", ref lines);
                                game_id = 0;
                                odd_page = 0;
                                selected_odd = 0;
                                page_number = 1;
                                menu_2_display = iDoBetLNBPariMoovBenin.GetSportsTypeMenu(ref lines);
                                ussd_menu.action_id = 2;
                                break;
                            case 48:
                                menu_2_display = iDoBetLNBPariMoovBenin.GetSoccerLeagueMenu(35, "0", ussd_menu.ussd_id, ref lines, out selected_league_id);
                                break;
                            case 47:
                                menu_2_display = iDoBetLNBPariMoovBenin.GetSoccerLeagueMenu(32, "0", ussd_menu.ussd_id, ref lines, out selected_league_id);
                                break;
                            case 37: //display soccer leagu
                                menu_2_display = iDoBetLNBPariMoovBenin.GetSoccerLeagueMenu(31, "0", ussd_menu.ussd_id, ref lines, out selected_league_id);
                                break;
                            case 49:
                            case 50:
                            case 38://selected league
                            case 28://Start Over
                            case 29:
                            case 30:
                            case 16://AddXXXGame or 
                            case 17:
                            case 18:
                            case 7: //DisplayXXXTopEvents   
                            case 8:
                            case 9:
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && page_number > 0)
                                {
                                    page_number = page_number - 1;
                                }
                                if (ussd_menu.action_id == 28 || ussd_menu.action_id == 29 || ussd_menu.action_id == 30)
                                {
                                    List<Int64> saved_ids2 = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, ref lines);
                                    if (saved_ids2 != null)
                                    {
                                        string mysaved_id = "";
                                        foreach (Int64 s in saved_ids2)
                                        {
                                            mysaved_id = mysaved_id + s + ",";

                                        }
                                        if (!String.IsNullOrEmpty(mysaved_id))
                                        {
                                            mysaved_id = mysaved_id.Substring(0, mysaved_id.Length - 1);
                                            DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set status = 3 where id in (" + mysaved_id + ")", ref lines);
                                        }

                                        //foreach (Int64 s in saved_ids2)
                                        //{
                                        //    DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set status = 3 where id = " + s, ref lines);
                                        //}
                                    }
                                    //DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set status = 3 where user_seesion_id = '"+user_session_id+"'", ref lines);
                                    game_id = 0;
                                    selected_odd = 0;
                                    odd_page = 0;
                                    page_number = 1;

                                }
                                if (ussd_menu.action_id == 16 || ussd_menu.action_id == 17 || ussd_menu.action_id == 18)
                                {
                                    if (game_id > 0)
                                    {
                                        DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + ussdString + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',0,"+service.service_id+")", ref lines);
                                        game_id = 0;
                                        selected_odd = 0;
                                        page_number = 1;
                                        odd_page = 0;
                                    }

                                }
                                switch (ussd_menu.action_id)
                                {
                                    case 38:
                                        menu_2_display = iDoBetLNBPariMoovBenin.GetEventsMenu(ussdString, 31, page_number, ref lines, out selected_league_id, selected_league_id, ussd_menu);
                                        break;
                                    case 49:
                                        menu_2_display = iDoBetLNBPariMoovBenin.GetEventsMenu(ussdString, 32, page_number, ref lines, out selected_league_id, selected_league_id, ussd_menu);
                                        break;
                                    case 50:
                                        menu_2_display = iDoBetLNBPariMoovBenin.GetEventsMenu(ussdString, 35, page_number, ref lines, out selected_league_id, selected_league_id, ussd_menu);
                                        break;
                                    case 28:
                                    case 16:
                                    case 7:
                                        menu_2_display = iDoBetLNBPariMoovBenin.GetEventsMenu(31, page_number, ref lines);
                                        break;
                                    case 29:
                                    case 17:
                                    case 8:
                                        menu_2_display = iDoBetLNBPariMoovBenin.GetEventsMenu(32, page_number, ref lines);
                                        break;
                                    case 30:
                                    case 18:
                                    case 9:
                                        menu_2_display = iDoBetLNBPariMoovBenin.GetEventsMenu(35, page_number, ref lines);
                                        break;
                                }


                                break;
                            case 10: //DisplayXXXGame
                            case 11:
                            case 12:
                                page_number = (page_number == 0 ? 1 : page_number);
                                selected_odd = 0;
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    odd_page = odd_page + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && odd_page > 0)
                                {
                                    odd_page = odd_page - 1;
                                }
                                switch (ussd_menu.action_id)
                                {
                                    case 10:
                                        menu_2_display = iDoBetLNBPariMoovBenin.GetGameOddsMenu(31, page_number, ussdString, game_id, odd_page, out game_id, selected_league_id, ref lines);
                                        break;
                                    case 11:
                                        menu_2_display = iDoBetLNBPariMoovBenin.GetGameOddsMenu(32, page_number, ussdString, game_id, odd_page, out game_id, selected_league_id, ref lines);
                                        break;
                                    case 12:
                                        menu_2_display = iDoBetLNBPariMoovBenin.GetGameOddsMenu(35, page_number, ussdString, game_id, odd_page, out game_id, selected_league_id, ref lines);
                                        break;
                                }
                                break;
                            case 13: //ConfirmXXXGame (select odd)
                            case 14:
                            case 15:
                                switch (ussd_menu.action_id)
                                {
                                    case 13:
                                        menu_2_display = iDoBetLNBPariMoovBenin.GetConfirmMenu(31, game_id, ussdString, odd_page, out selected_odd, out selected_bet_type_id, out selected_odd_name, out selected_odd_line, ref lines);
                                        break;
                                    case 14:
                                        menu_2_display = iDoBetLNBPariMoovBenin.GetConfirmMenu(32, game_id, ussdString, odd_page, out selected_odd, out selected_bet_type_id, out selected_odd_name, out selected_odd_line, ref lines);
                                        break;
                                    case 15:
                                        menu_2_display = iDoBetLNBPariMoovBenin.GetConfirmMenu(35, game_id, ussdString, odd_page, out selected_odd, out selected_bet_type_id, out selected_odd_name, out selected_odd_line, ref lines);
                                        break;
                                }
                                break;
                        }
                        lines = Add2Log(lines, " page_number = " + page_number, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " game_id = " + game_id, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " odd_page = " + odd_page, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " selected_odd = " + selected_odd, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " amount = " + amount, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " selected_league_id = " + selected_league_id, 100, "ivr_subscribe");
                        result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, menu_2_display, msgType, opType);
                        DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id, selected_odd, selected_bet_type_id,selected_odd_name, selected_odd_line, amount, selected_league_id, amount_2_pay, bar_code, selected_subagent_name,rapidos_string) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + "," + status + ", '" + ussdString + "', " + ussd_menu.action_id + ", " + page_number + "," + odd_page + "," + game_id + "," + topic_id + ",'" + user_session_id + "'," + selected_odd + "," + selected_bet_type_id + ",'" + selected_odd_name + "','" + selected_odd_line + "', " + amount + "," + selected_league_id + "," + amount_2_pay + ",'" + bar_code + "','" + selected_subagent_name + "','"+rapidos_string+"');", "DBConnectionString_104", ref lines);
                        break;
                }
            }

            return result;
        }

        public static string LNBPariMoovUSSDBehaviuerV142(ServiceClass service, string ussdString, string ServiceID, string MSISDN, string linkid, string receiveCB, string senderCB, string serviceCode, USSDMenu ussd_menu, USSDSession ussd_session, out DYAReceiveMoneyRequest momo_request, ref List<LogLines> lines, out string menu_2_display, out bool is_close, string force_session_id)
        {
            momo_request = null;
            menu_2_display = "";
            is_close = false;
            string result = "";
            force_session_id = (String.IsNullOrEmpty(force_session_id) ? Guid.NewGuid().ToString() : force_session_id);
            string user_session_id = (ussd_session == null ? force_session_id : ussd_session.user_seesion_id);
            int topic_id = (ussd_session != null ? ussd_session.topic_id : ussd_menu.topic_id);
            if (!String.IsNullOrEmpty(ussd_menu.menu_2_display))
            {
                menu_2_display = ussd_menu.menu_2_display;
                result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, ussd_menu.menu_2_display, "1", "1");
                DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + ",0, '" + ussdString + "', " + ussd_menu.action_id + ", " + (ussd_session == null ? 0 : ussd_session.page_number) + "," + (ussd_session == null ? 0 : ussd_session.odd_page) + "," + (ussd_session == null ? 0 : ussd_session.game_id) + "," + topic_id + ",'" + user_session_id + "');", "DBConnectionString_104", ref lines);
            }
            if (ussd_menu.action_id == 3) //close
            {
                menu_2_display = ussd_menu.menu_2_display;
                is_close = true;
                result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, menu_2_display, "2", "2");
                DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + ",1, '" + ussdString + "', " + ussd_menu.action_id + ", " + (ussd_session == null ? 0 : ussd_session.page_number) + "," + (ussd_session == null ? 0 : ussd_session.odd_page) + "," + (ussd_session == null ? 0 : ussd_session.game_id) + "," + topic_id + ",'" + user_session_id + "');", "DBConnectionString_104", ref lines);
            }






            if (String.IsNullOrEmpty(result))
            {
                switch (topic_id)
                {
                    case 9:
                        int page_number = (ussd_session != null ? ussd_session.page_number : 1);
                        int odd_page = (ussd_session != null ? ussd_session.odd_page : 0);
                        Int64 game_id = (ussd_session != null ? ussd_session.game_id : 0);
                        string rapidos_string = (ussd_session != null ? ussd_session.rapidos_string : "0");
                        double selected_odd = (ussd_session != null ? ussd_session.selected_odd : 0);
                        int selected_bet_type_id = (ussd_session != null ? ussd_session.selected_bet_type_id : 0);
                        string selected_odd_name = (ussd_session != null ? ussd_session.selected_odd_name : "0");
                        string selected_odd_line = (ussd_session != null ? ussd_session.selected_odd_line : "null");
                        string amount = (ussd_session != null ? ussd_session.amount : "0");
                        int selected_league_id = (ussd_session != null ? ussd_session.selected_league_id : 0);
                        string msgType = "1", opType = "1";
                        int status = 0;
                        string amount_2_pay = (ussd_session != null ? ussd_session.amount_2_pay.ToString() : "0");
                        string bar_code = (ussd_session != null ? ussd_session.bar_code : "0");
                        string selected_subagent_name = (ussd_session != null ? ussd_session.selected_subagent_name : "0");
                        IdoBetUser user = new IdoBetUser();
                        switch (ussd_menu.action_id)
                        {
                            case 75:
                            case 76:
                            case 77:
                                bool placebet1 = false;
                                double num3;
                                int max_bet = 0;
                                bool check_amount = double.TryParse(ussdString, out num3);
                                if (check_amount == true)
                                {
                                    switch (ussd_menu.action_id)
                                    {
                                        case 75:
                                            game_id = 52;
                                            max_bet = 20000;
                                            break;
                                        case 76:
                                            game_id = 53;
                                            max_bet = 4000;
                                            break;
                                        case 77:
                                            game_id = 54;
                                            max_bet = 200;
                                            break;
                                    }
                                    if (num3 >= 100 && num3 <= max_bet)
                                    {
                                        DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games_mtnbj (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + rapidos_string + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "'," + num3 + ", " + service.service_id + ")", "DBConnectionString_104", ref lines);
                                        placebet1 = true;
                                    }
                                    else
                                    {

                                        menu_2_display = Api.CommonFuncations.B2TechLNBMoov.GetWrongPriceBetRapidos(max_bet, ref lines);
                                        DataLayer.DBQueries.ExecuteQuery("delete from ussd_saved_games_mtnbj where user_session_id = '" + user_session_id + "' order by id desc limit 1", "DBConnectionString_104", ref lines);
                                    }
                                }
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                //RequestForOrder
                                //bool req_for_order = GetRequestForOrder(ussd_session, ref lines);
                                if (placebet1)
                                {

                                    menu_2_display = Api.CommonFuncations.B2TechLNBMoov.GetCloseBet(ussd_session, amount, ref lines);
                                    LoginRequest LoginRequestBody = new LoginRequest()
                                    {
                                        ServiceID = service.service_id,
                                        Password = service.service_password
                                    };
                                    LoginResponse res = Login.DoLogin(LoginRequestBody);
                                    if (res != null)
                                    {
                                        if (res.ResultCode == 1000)
                                        {
                                            string token_id = res.TokenID;
                                            momo_request = new DYAReceiveMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(ussdString),
                                                ServiceID = service.service_id,
                                                TokenID = token_id,
                                                TransactionID = "Rapidos_" + user_session_id
                                            };
                                        }
                                    }
                                }

                                break;

                            case 72: //Confirm Rapidos
                            case 73:
                            case 74:
                                String[] strlist = new string[] { };
                                bool validate_num = Api.CommonFuncations.B2TechLNBMoov.ValidateRapidosInput(ussdString, ussd_menu.action_id, out strlist, ref lines);
                                if (validate_num)
                                {
                                    menu_2_display = Api.CommonFuncations.B2TechLNBMoov.GetConfirmRapidosMenu(ussd_menu.action_id, ussdString, out game_id, ref lines);
                                    rapidos_string = ussdString;
                                }
                                else
                                {
                                    menu_2_display = Api.CommonFuncations.B2TechLNBMoov.WrongRapidosNumber();
                                }
                                break;

                            case 55://EnterAmountForSubAgent
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                Int64 pos_trans_id = 0;
                                menu_2_display = B2TechLNBMoov.GetAmountForSubAgentMenu(MSISDN, ussdString, selected_subagent_name, out pos_trans_id, ref lines);
                                if (pos_trans_id > 0)
                                {
                                    ServiceClass subscriber_service1 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                    LoginRequest LoginRequestBody = new LoginRequest()
                                    {
                                        ServiceID = subscriber_service1.service_id,
                                        Password = subscriber_service1.service_password
                                    };
                                    LoginResponse res = Login.DoLogin(LoginRequestBody);
                                    if (res != null)
                                    {
                                        if (res.ResultCode == 1000)
                                        {
                                            string token_id = res.TokenID;
                                            momo_request = new DYAReceiveMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(ussdString),
                                                ServiceID = ussd_menu.service_id,
                                                TokenID = token_id,
                                                TransactionID = "POSTrans_" + pos_trans_id

                                            };
                                        }
                                    }
                                }



                                break;
                            case 54:
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = B2TechLNBMoov.GetSlectedSubAgentMenu(MSISDN, page_number, ussdString, out selected_subagent_name, ref lines);
                                break;
                            case 53:
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = B2TechLNBMoov.GetAgentMainMenu(MSISDN, page_number, ref lines);
                                break;

                            case 80: //Foot Solider Check MSISDN and ask to enter full name 
                                is_close = true;
                                menu_2_display = Api.CommonFuncations.B2TechLNBMoov.GetFootSoldiersMSISDNMenu(MSISDN, ussdString, out is_close, service, ref lines);
                                if (is_close)
                                {
                                    msgType = "2";
                                    opType = "2";
                                }
                                else
                                {
                                    Api.DataLayer.DBQueries.ExecuteQuery("insert into ussd_footsoldiers_attempts (user_session_id, footsoldier_msisdn, user_msisdn, full_name, user_id, date_time) values('" + user_session_id + "', " + MSISDN + ", 229" + ussdString + ", '', 0, now())", ref lines);
                                }
                                break;
                            case 79: //Foot Soldier create user
                                is_close = true;
                                Int64 user_msisdn = Api.DataLayer.DBQueries.SelectQueryReturnInt64("SELECT u.user_msisdn from ussd_footsoldiers_attempts u WHERE u.user_session_id = '" + user_session_id + "' order by u.id desc limit 1", ref lines);
                                if (user_msisdn > 0)
                                {
                                    Api.CommonFuncations.B2TechLNBMoov.CreateUserResponse create_user = new Api.CommonFuncations.B2TechLNBMoov.CreateUserResponse();
                                    menu_2_display = Api.CommonFuncations.B2TechLNBMoov.GetFootSoldiersFullNameMenu(MSISDN, ussdString, out is_close, ussd_menu, user_msisdn.ToString(), out create_user, ref lines);
                                    if (is_close)
                                    {
                                        LoginRequest LoginRequestBody = new LoginRequest()
                                        {
                                            ServiceID = service.service_id,
                                            Password = service.service_password
                                        };
                                        LoginResponse res = Login.DoLogin(LoginRequestBody);
                                        if (res != null)
                                        {
                                            if (res.ResultCode == 1000)
                                            {

                                                Int64 rec_id = Api.DataLayer.DBQueries.SelectQueryReturnInt64("SELECT u.id from ussd_footsoldiers_attempts u WHERE u.user_session_id = '" + user_session_id + "' order by u.id desc limit 1", ref lines);
                                                Api.DataLayer.DBQueries.ExecuteQuery("update ussd_footsoldiers_attempts set user_id = " + create_user.userId + ", full_name = '" + ussdString + "' where id = " + rec_id, ref lines);
                                                string token_id = res.TokenID;
                                                string sms_text = "Felicitations, vous vous etes inscrit avec succes sur LNBPari. https://m.lnbpari.com/#/login Mot de passe: " + create_user.password;
                                                Api.DataLayer.DBQueries.ExecuteQuery("insert into foot_soldiers_sms (date_time, msisdn, service_id, sms_text) values(now(), " + user_msisdn + "," + service.service_id + ",'" + sms_text + "');", ref lines);
                                                SendSMSRequest RequestSendSMSBody1 = new SendSMSRequest()
                                                {
                                                    ServiceID = service.service_id,
                                                    MSISDN = user_msisdn,
                                                    Text = sms_text,
                                                    TokenID = token_id,
                                                    TransactionID = "12345"
                                                };
                                                SendSMSResponse response_sendsms1 = SendSMS.DoSMS(RequestSendSMSBody1);
                                                if (response_sendsms1 != null)
                                                {
                                                    if (response_sendsms1.ResultCode == 1010 || response_sendsms1.ResultCode == 1000)
                                                    {
                                                        lines = Add2Log(lines, " Send SMS Was OK", 100, lines[0].ControlerName);
                                                    }
                                                    else
                                                    {
                                                        lines = Add2Log(lines, " Send SMS Failed", 100, lines[0].ControlerName);
                                                    }
                                                }
                                                else
                                                {
                                                    lines = Add2Log(lines, " Send SMS Failed", 100, lines[0].ControlerName);
                                                }
                                            }
                                        }
                                    }
                                }
                                else
                                {
                                    is_close = false;
                                    menu_2_display = "Error 78_2" + Environment.NewLine;
                                    menu_2_display = menu_2_display + Environment.NewLine + "M) ";// Menu Principal ";

                                }
                                break;
                            case 78: //Foot Soldier Main Menu asking to enter MSISDN
                                menu_2_display = Api.CommonFuncations.B2TechLNBMoov.GetFootSoldierMainMenu(MSISDN, ref lines);
                                break;

                            case 34: //DepositMoney
                                user = B2TechLNBMoov.SearchUserNew(MSISDN, ref lines);
                                menu_2_display = B2TechLNBMoov.GetDepositMoneyMenu(user, ussd_menu, MSISDN, ref lines);
                                break;
                            case 36: //StartDepositMoney
                                user = B2TechLNBMoov.SearchUserNew(MSISDN, ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                menu_2_display = B2TechLNBMoov.GetStartDepositMoneyMenu(service, user, ussd_menu, MSISDN, ussdString, out momo_request, ref lines);
                                break;
                            case 33: //WithdrawMoney
                                user = B2TechLNBMoov.SearchUserNew(MSISDN, ref lines);
                                menu_2_display = B2TechLNBMoov.GetWithdrawMoneyMenu(user, ref lines);
                                break;
                            case 35: //StartWithdrawMoney
                                user = B2TechLNBMoov.SearchUserNew(MSISDN, ref lines);
                                menu_2_display = B2TechLNBMoov.GetStartWithdrawMoneyMenu(user, false, false, false, ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                if (user.isValid == true)
                                {
                                    int number;
                                    bool su = int.TryParse(ussdString, out number);
                                    if (su)
                                    {
                                        if (Convert.ToInt32(ussdString) <= user.AvailableForWithdraw && Convert.ToInt32(ussdString) > 0)
                                        {
                                            menu_2_display = B2TechLNBMoov.CheckBeforeWithdrawMenu(service, MSISDN, ref lines);
                                            if (String.IsNullOrEmpty(menu_2_display))
                                            {
                                                //Refund user
                                                ServiceClass subscriber_service1 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                                LoginRequest LoginRequestBody1 = new LoginRequest()
                                                {
                                                    ServiceID = service.service_id,
                                                    Password = service.service_password
                                                };
                                                LoginResponse res1 = Login.DoLogin(LoginRequestBody1);
                                                if (res1 != null)
                                                {
                                                    if (res1.ResultCode == 1000)
                                                    {
                                                        string token_id = res1.TokenID;
                                                        DYATransferMoneyRequest momotransfer_request = new DYATransferMoneyRequest()
                                                        {
                                                            MSISDN = Convert.ToInt64(MSISDN),
                                                            Amount = Convert.ToInt32(ussdString),
                                                            ServiceID = service.service_id,
                                                            TokenID = token_id,
                                                            TransactionID = "USSDWithdraw_" + Guid.NewGuid().ToString()
                                                        };
                                                        string postBody = "", response_body = "";
                                                        //bool wd_result = StartWithdraw(user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                        bool do_withdraw = false;
                                                        string code = "";
                                                        if (user.AvailableForWithdraw > 0)
                                                        {
                                                            code = B2TechLNBMoov.StartWithdrawNew(user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                        }



                                                        menu_2_display = B2TechLNBMoov.GetStartWithdrawMoneyMenu(user, true, true, false, ref lines);

                                                        if (code == "")
                                                        {
                                                            if (do_withdraw)
                                                            {
                                                                string mail_body = "<p><h2>Start Withdraw has failed</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>Json: </b>" + postBody + "<br><b>Response: </b>" + response_body + "<br></p>";
                                                                string mail_subject = "Start Withdraw has failed for user - " + user.id;
                                                                string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                                string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                                string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                                string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                                int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                                string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                                CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                                            }

                                                        }
                                                        else
                                                        {
                                                            DYATransferMoneyResponse momotransfer_response = CommonFuncations.DYATransferMoney.DoTransfer(momotransfer_request);
                                                            if (momotransfer_response.ResultCode == 1000)
                                                            {
                                                                postBody = "";
                                                                response_body = "";
                                                                bool end_withdraw = B2TechLNBMoov.EndWithdrawNew(momotransfer_response.Timestamp, momotransfer_response.TransactionID, true, code, user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                                if (!end_withdraw)
                                                                {
                                                                    string mail_body = "", mail_subject = "";
                                                                    mail_body = "<p><h2>End Withdraw has failed but DYATransfer was ok</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>Request: </b>" + postBody + "<br>Response: " + response_body + "<br></p>";
                                                                    mail_subject = "End Withdraw has failed but DYATransfer was ok - " + user.id;
                                                                    string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                                    string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                                    string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                                    string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                                    int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                                    string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                                    CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                                                }
                                                                GoogleAnalytics.SendData2GoogleAnalytics("UA-135957841-1", "ussd", Base64.Reverse(MSISDN), System.Web.HttpContext.Current.Request.ServerVariables["REMOTE_ADDR"], "BJ", "event", "Withdraw", "MOMO", "-" + ussdString, "/", ref lines);
                                                            }
                                                            else
                                                            {

                                                                postBody = "";
                                                                response_body = "";
                                                                bool end_withdraw = B2TechLNBMoov.EndWithdrawNew(momotransfer_response.Timestamp, momotransfer_response.TransactionID, false, code, user, MSISDN, Convert.ToDouble(ussdString), out postBody, out response_body, ref lines);
                                                                string mail_body = "", mail_subject = "";
                                                                mail_body = "<p><h2>Withdraw has failed DYATransfer</h2><b>UserID:</b> " + user.id + "<br><b>Name:</b> " + user.firstName + " " + user.lastName + "<br><b>Amount: </b>" + ussdString + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>MOMO Response: </b>" + momotransfer_response.ResultCode + " " + momotransfer_response.Description + "<br>User was refunded: " + end_withdraw + "<br><b>Request: </b>" + postBody + "<br><b>Response: </b>" + response_body + "</p>";
                                                                mail_subject = "Withdraw has failed DYATransfer for user - " + user.id;
                                                                string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                                string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                                string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                                string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                                int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                                string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                                CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                                            }
                                                        }



                                                    }
                                                }
                                            }


                                        }
                                        else
                                        {
                                            //user has requested more than allowed
                                            menu_2_display = B2TechLNBMoov.GetStartWithdrawMoneyMenu(user, false, false, true, ref lines);
                                        }
                                    }
                                    else
                                    {
                                        menu_2_display = "Option invalide ";
                                    }
                                }
                                break;
                            case 25://CloseXXXBet
                            case 26:
                            case 27:
                                List<Int64> saved_ids = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, "_mtnbj", ref lines);
                                if (saved_ids != null)
                                {
                                    string mysaved_id = "";
                                    foreach (Int64 s in saved_ids)
                                    {
                                        mysaved_id = mysaved_id + s + ",";

                                    }
                                    if (!String.IsNullOrEmpty(mysaved_id))
                                    {
                                        mysaved_id = mysaved_id.Substring(0, mysaved_id.Length - 1);
                                        DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games_mtnbj set amount = " + amount + " where id in (" + mysaved_id + ")", "DBConnectionString_104", ref lines);
                                    }

                                    //foreach (Int64 s in saved_ids)
                                    //{
                                    //    DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set amount = " + amount + " where id = " + s, ref lines);
                                    //}
                                }
                                //DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set amount = " + amount + " where user_session_id = '" + user_session_id + "'", ref lines);
                                msgType = "2";
                                opType = "2";
                                is_close = true;
                                status = 1;
                                //RequestForOrder
                                //bool req_for_order = GetRequestForOrder(ussd_session, ref lines);
                                bool req_for_order = B2TechLNBMoov.PlaceBet(ussd_session, ref lines);

                                if (req_for_order == true)
                                {
                                    menu_2_display = B2TechLNBMoov.GetCloseBet(ussd_session, amount, ref lines);
                                    ServiceClass subscriber_service2 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                    LoginRequest LoginRequestBody = new LoginRequest()
                                    {
                                        ServiceID = subscriber_service2.service_id,
                                        Password = subscriber_service2.service_password
                                    };
                                    LoginResponse res = Login.DoLogin(LoginRequestBody);
                                    if (res != null)
                                    {
                                        if (res.ResultCode == 1000)
                                        {
                                            string token_id = res.TokenID;
                                            momo_request = new DYAReceiveMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(amount),
                                                ServiceID = ussd_menu.service_id,
                                                TokenID = token_id,
                                                TransactionID = user_session_id

                                            };
                                        }
                                    }
                                }
                                else
                                {
                                    menu_2_display = B2TechLNBMoov.GetCloseBetFailed(ref lines);
                                }
                                break;
                            case 22: //ConfirmBetXXX
                            case 23:
                            case 24:
                                amount = ussdString;
                                double num1;
                                bool res_parse = double.TryParse(amount, out num1);
                                if (res_parse == true)
                                {
                                    if (num1 >= 150 && num1 <= 1000000)
                                    {
                                        menu_2_display = B2TechLNBMoov.GetConfirmBet(ussd_session, amount, ref lines);
                                    }
                                    else
                                    {

                                        menu_2_display = B2TechLNBMoov.GetWrongPriceBetMeny(ref lines);
                                        DataLayer.DBQueries.ExecuteQuery("delete from ussd_saved_games_mtnbj where user_session_id = '" + user_session_id + "' order by id desc limit 1", "DBConnectionString_104", ref lines);
                                    }
                                }
                                odd_page = 0;

                                break;
                            case 19: //PayAndConfirmXXX
                            case 20:
                            case 21:
                                //need to check if user clicks back and then returns to this section.
                                DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games_mtnbj (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + ussdString + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',0," + service.service_id + ")", "DBConnectionString_104", ref lines);
                                menu_2_display = B2TechLNBMoov.GetPayAndConfirm(ussd_session, ref lines);
                                odd_page = 0;
                                break;
                            case 32: //ticket status
                                page_number = (page_number == 0 ? 1 : page_number);
                                menu_2_display = B2TechLNBMoov.GetCheckTicketMenu(MSISDN, page_number, ussdString, ref lines);
                                break;
                            case 31: //tickets status by phone
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && page_number > 1)
                                {
                                    page_number = page_number - 1;
                                }
                                menu_2_display = B2TechLNBMoov.GetCheckTicketsMenu(MSISDN, page_number, ref lines);
                                break;
                            case 52:
                                menu_2_display = B2TechLNBMoov.GetPayoutBarcodeTicket(ussd_menu, MSISDN, ref lines);
                                if (String.IsNullOrEmpty(menu_2_display))
                                {
                                    msgType = "2";
                                    opType = "2";
                                    is_close = true;
                                    //Refund user
                                    ServiceClass subscriber_service2 = GetServiceByServiceID(Convert.ToInt32(ussd_menu.service_id), ref lines);
                                    LoginRequest LoginRequestBody2 = new LoginRequest()
                                    {
                                        ServiceID = service.service_id,
                                        Password = service.service_password
                                    };
                                    LoginResponse res2 = Login.DoLogin(LoginRequestBody2);
                                    if (res2 != null)
                                    {
                                        if (res2.ResultCode == 1000 && Convert.ToInt32(amount_2_pay) > 0)
                                        {
                                            string token_id = res2.TokenID;
                                            DYATransferMoneyRequest momotransfer_request = new DYATransferMoneyRequest()
                                            {
                                                MSISDN = Convert.ToInt64(MSISDN),
                                                Amount = Convert.ToInt32(amount_2_pay),
                                                ServiceID = service.service_id,
                                                TokenID = token_id,
                                                TransactionID = "POSTicketPayout_" + bar_code
                                            };
                                            DYATransferMoneyResponse momotransfer_response = CommonFuncations.DYATransferMoney.DoTransfer(momotransfer_request);

                                            if (momotransfer_response.ResultCode == 1000)
                                            {
                                                int cashier_id = B2TechLNBMoov.GetCashierID(MSISDN, ref lines);
                                                if (cashier_id > 0)
                                                {
                                                    DataLayer.DBQueries.ExecuteQuery("insert into casheir_transactions (cashier_id, bar_code, total_payout, date_time, dya_id) values(" + cashier_id + ", '" + bar_code + "', " + amount_2_pay + ", now()," + momotransfer_response.TransactionID + ");", ref lines);
                                                }
                                                //GoogleAnalytics.SendData2GoogleAnalytics("UA-135957841-1", "ussd", Base64.Reverse(MSISDN), System.Web.HttpContext.Current.Request.ServerVariables["REMOTE_ADDR"], "BJ", "event", "PyoutPOSTicket", "MOMO", "-" + ussdString, "/", ref lines);
                                                //dopayout
                                                bool dopayout_res = iDoBet.DoPayOutNew(momotransfer_response.Timestamp, momotransfer_response.TransactionID, bar_code, ref lines);
                                                //bool dopayout_res = iDoBet.DoPayout(bar_code, ref lines);
                                                menu_2_display = "Félicitations, le billet a été remboursé sur votre compte MOMO.";

                                            }
                                            else
                                            {
                                                menu_2_display = "Le billet n'a pas été remboursé sur votre compte MOMO." + Environment.NewLine;
                                                menu_2_display = menu_2_display + "Veuillez réessayer";
                                                string mail_body = "<p><h2>Payout has failed DYATransfer</h2><b>barCode:</b> " + bar_code + "<br><b>Amount: </b>" + amount_2_pay + "<br><b>MSISDN: </b>" + MSISDN + "<br><b>MOMO Response: </b>" + momotransfer_response.ResultCode + " " + momotransfer_response.Description + "<br></p>";
                                                string mail_subject = "POS Ticlet Payout has failed DYATransfer for user - " + bar_code;
                                                string emails = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailRecipients", ref lines);
                                                string sender_email = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderEmail", ref lines);
                                                string sender_name = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderName", ref lines);
                                                string sender_assword = Api.Cache.ServerSettings.GetServerSettings("iDoBetSenderPassword", ref lines);
                                                int email_port = Convert.ToInt32(Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailPort", ref lines));
                                                string email_host = Api.Cache.ServerSettings.GetServerSettings("iDoBetEmailHost", ref lines);
                                                CommonFuncations.Email.SendEmail(mail_body, mail_subject, emails, sender_email, sender_name, sender_assword, email_port, email_host, ref lines);
                                            }
                                        }
                                        else
                                        {
                                            menu_2_display = "option invalide" + Environment.NewLine;
                                            menu_2_display = menu_2_display + "Veuillez réessayer";
                                        }
                                    }
                                }

                                break;
                            case 44: //search ticket
                                menu_2_display = B2TechLNBMoov.GetCheckTicketByBarcodeMenu(MSISDN, ussdString, out amount_2_pay, ref lines);
                                bar_code = ussdString;
                                break;
                            case 39: //add another game
                                if (game_id > 0)
                                {
                                    DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games_mtnbj (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + ussdString + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',0," + service.service_id + ")", "DBConnectionString_104", ref lines);
                                    game_id = 0;
                                    selected_odd = 0;
                                    page_number = 1;
                                    odd_page = 0;
                                }
                                menu_2_display = B2TechLNBMoov.GetSportsTypeMenu(ref lines);
                                break;
                            case 41: //Delete and Start Over
                                List<Int64> saved_ids1 = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, "_mtnbj", ref lines);
                                if (saved_ids1 != null)
                                {
                                    string mysaved_id = "";
                                    foreach (Int64 s in saved_ids1)
                                    {
                                        mysaved_id = mysaved_id + s + ",";

                                    }
                                    if (!String.IsNullOrEmpty(mysaved_id))
                                    {
                                        mysaved_id = mysaved_id.Substring(0, mysaved_id.Length - 1);
                                        DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games_mtnbj set status = 3 where id in (" + mysaved_id + ")", "DBConnectionString_104", ref lines);
                                    }

                                    //foreach (Int64 s in saved_ids1)
                                    //{
                                    //    DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set status = 3 where id = " + s, ref lines);
                                    //}
                                }

                                //DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set status = 3 where user_seesion_id = '" + user_session_id + "'", ref lines);
                                game_id = 0;
                                odd_page = 0;
                                selected_odd = 0;
                                page_number = 1;
                                menu_2_display = B2TechLNBMoov.GetSportsTypeMenu(ref lines);
                                ussd_menu.action_id = 2;
                                break;
                            case 48:
                                menu_2_display = B2TechLNBMoov.GetSoccerLeagueMenu(35, "0", ussd_menu.ussd_id, ref lines, out selected_league_id);
                                break;
                            case 47:
                                menu_2_display = B2TechLNBMoov.GetSoccerLeagueMenu(32, "0", ussd_menu.ussd_id, ref lines, out selected_league_id);
                                break;
                            case 37: //display soccer leagu
                                menu_2_display = B2TechLNBMoov.GetSoccerLeagueMenu(31, "0", ussd_menu.ussd_id, ref lines, out selected_league_id);
                                break;
                            case 49:
                            case 50:
                            case 38://selected league
                            case 28://Start Over
                            case 29:
                            case 30:
                            case 16://AddXXXGame or 
                            case 17:
                            case 18:
                            case 7: //DisplayXXXTopEvents   
                            case 8:
                            case 9:
                                page_number = (page_number == 0 ? 1 : page_number);
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    page_number = page_number + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && page_number > 0)
                                {
                                    page_number = page_number - 1;
                                }
                                if (ussd_menu.action_id == 28 || ussd_menu.action_id == 29 || ussd_menu.action_id == 30)
                                {
                                    List<Int64> saved_ids2 = Api.DataLayer.DBQueries.GetUSSDSavedGamesID(user_session_id, "_mtnbj", ref lines);
                                    if (saved_ids2 != null)
                                    {
                                        string mysaved_id = "";
                                        foreach (Int64 s in saved_ids2)
                                        {
                                            mysaved_id = mysaved_id + s + ",";

                                        }
                                        if (!String.IsNullOrEmpty(mysaved_id))
                                        {
                                            mysaved_id = mysaved_id.Substring(0, mysaved_id.Length - 1);
                                            DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games_mtnbj set status = 3 where id in (" + mysaved_id + ")", "DBConnectionString_104", ref lines);
                                        }

                                        //foreach (Int64 s in saved_ids2)
                                        //{
                                        //    DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set status = 3 where id = " + s, ref lines);
                                        //}
                                    }
                                    //DataLayer.DBQueries.ExecuteQuery("update ussd_saved_games set status = 3 where user_seesion_id = '"+user_session_id+"'", ref lines);
                                    game_id = 0;
                                    selected_odd = 0;
                                    odd_page = 0;
                                    page_number = 1;

                                }
                                if (ussd_menu.action_id == 16 || ussd_menu.action_id == 17 || ussd_menu.action_id == 18)
                                {
                                    if (game_id > 0)
                                    {
                                        DataLayer.DBQueries.ExecuteQuery("insert into ussd_saved_games_mtnbj (msisdn, game_id, odd_page, selected_ussd_string, date_time, status, user_session_id, selected_odd, selected_bet_type_id, selected_odd_name, selected_odd_line, amount, service_id) values(" + MSISDN + ", " + game_id + ", " + odd_page + ", '" + ussdString + "', now(), 0,'" + user_session_id + "'," + selected_odd + ", " + selected_bet_type_id + ", '" + selected_odd_name + "', '" + selected_odd_line + "',0," + service.service_id + ")", "DBConnectionString_104", ref lines);
                                        game_id = 0;
                                        selected_odd = 0;
                                        page_number = 1;
                                        odd_page = 0;
                                    }

                                }
                                switch (ussd_menu.action_id)
                                {
                                    case 38:
                                        menu_2_display = B2TechLNBMoov.GetEventsMenu(ussdString, 31, page_number, ref lines, out selected_league_id, selected_league_id, ussd_menu);
                                        break;
                                    case 49:
                                        menu_2_display = B2TechLNBMoov.GetEventsMenu(ussdString, 32, page_number, ref lines, out selected_league_id, selected_league_id, ussd_menu);
                                        break;
                                    case 50:
                                        menu_2_display = B2TechLNBMoov.GetEventsMenu(ussdString, 35, page_number, ref lines, out selected_league_id, selected_league_id, ussd_menu);
                                        break;
                                    case 28:
                                    case 16:
                                    case 7:
                                        menu_2_display = B2TechLNBMoov.GetEventsMenu(31, page_number, ref lines);
                                        break;
                                    case 29:
                                    case 17:
                                    case 8:
                                        menu_2_display = B2TechLNBMoov.GetEventsMenu(32, page_number, ref lines);
                                        break;
                                    case 30:
                                    case 18:
                                    case 9:
                                        menu_2_display = B2TechLNBMoov.GetEventsMenu(35, page_number, ref lines);
                                        break;
                                }


                                break;
                            case 10: //DisplayXXXGame
                            case 11:
                            case 12:
                                page_number = (page_number == 0 ? 1 : page_number);
                                selected_odd = 0;
                                if (ussdString.Contains("#") || ussdString.Contains("9"))
                                {
                                    odd_page = odd_page + 1;
                                }
                                if ((ussdString.Contains("*") || ussdString.Contains("8")) && odd_page > 0)
                                {
                                    odd_page = odd_page - 1;
                                }
                                try
                                {
                                    switch (ussd_menu.action_id)
                                    {
                                        case 10:
                                            menu_2_display = B2TechLNBMoov.GetGameOddsMenu(31, page_number, ussdString, game_id, odd_page, out game_id, selected_league_id, ref lines);
                                            break;
                                        case 11:
                                            menu_2_display = B2TechLNBMoov.GetGameOddsMenu(32, page_number, ussdString, game_id, odd_page, out game_id, selected_league_id, ref lines);
                                            break;
                                        case 12:
                                            menu_2_display = B2TechLNBMoov.GetGameOddsMenu(35, page_number, ussdString, game_id, odd_page, out game_id, selected_league_id, ref lines);
                                            break;
                                    }
                                }
                                catch(Exception ex)
                                {
                                    menu_2_display = "*) Retour";
                                    menu_2_display = menu_2_display + Environment.NewLine + "M) ";
                                }
                                
                                break;
                            case 13: //ConfirmXXXGame (select odd)
                            case 14:
                            case 15:
                                switch (ussd_menu.action_id)
                                {
                                    case 13:
                                        menu_2_display = Api.CommonFuncations.B2TechLNBMoov.GetConfirmMenu(31, game_id, ussdString, odd_page, out selected_odd, out selected_bet_type_id, out selected_odd_name, out selected_odd_line, ref lines, ussd_session, MSISDN, service);
                                        break;
                                    case 14:
                                        menu_2_display = Api.CommonFuncations.B2TechLNBMoov.GetConfirmMenu(32, game_id, ussdString, odd_page, out selected_odd, out selected_bet_type_id, out selected_odd_name, out selected_odd_line, ref lines, ussd_session, MSISDN, service);
                                        break;
                                    case 15:
                                        menu_2_display = Api.CommonFuncations.B2TechLNBMoov.GetConfirmMenu(35, game_id, ussdString, odd_page, out selected_odd, out selected_bet_type_id, out selected_odd_name, out selected_odd_line, ref lines, ussd_session, MSISDN, service);
                                        break;
                                }
                                break;
                        }
                        lines = Add2Log(lines, " page_number = " + page_number, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " game_id = " + game_id, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " odd_page = " + odd_page, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " selected_odd = " + selected_odd, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " amount = " + amount, 100, "ivr_subscribe");
                        lines = Add2Log(lines, " selected_league_id = " + selected_league_id, 100, "ivr_subscribe");
                        result = USSD.BuildSendUSSDSoap(service, ServiceID, MSISDN, linkid, receiveCB, senderCB, serviceCode, menu_2_display, msgType, opType);
                        DataLayer.DBQueries.ExecuteQuery("insert into ussd_sessions (msisdn, ussd_id, date_time, menu_id, status, selected_ussdstring, action_id, page_number, odd_page, game_id, topic_id, user_session_id, selected_odd, selected_bet_type_id,selected_odd_name, selected_odd_line, amount, selected_league_id, amount_2_pay, bar_code, selected_subagent_name,rapidos_string) value(" + MSISDN + ", " + ussd_menu.ussd_id + ",now(), " + ussd_menu.menu_id + "," + status + ", '" + ussdString + "', " + ussd_menu.action_id + ", " + page_number + "," + odd_page + "," + game_id + "," + topic_id + ",'" + user_session_id + "'," + selected_odd + "," + selected_bet_type_id + ",'" + selected_odd_name + "','" + selected_odd_line + "', " + amount + "," + selected_league_id + "," + amount_2_pay + ",'" + bar_code + "','" + selected_subagent_name + "','" + rapidos_string + "');", "DBConnectionString_104", ref lines);
                        break;
                }
            }

            return result;
        }


    }
}